import{ai as I,H as R,I as q,aw as U,e as h,g as f,n as V}from"./index.ffdd6b96.js";import{t as W}from"./BitmapContainer.9afff32e.js";import{f as E}from"./LayerView2D.e0a079ad.js";import{S as H}from"./ExportStrategy.4f7db82b.js";import{u as L}from"./LayerView.9aa60546.js";import{i as b}from"./RefreshableLayerView.0f92f4aa.js";import{a as C}from"./WMSLayerView.6db2057c.js";import"./brushes.4486185e.js";import"./pixelUtils.f561b50e.js";import"./definitions.8fc39ccc.js";import"./Utils.60e9eab7.js";import"./number.08b65821.js";import"./enums.05a6ea95.js";import"./ProgramTemplate.7079fa72.js";import"./MaterialKey.227f141a.js";import"./alignmentUtils.63b4d661.js";import"./utils.94e58371.js";import"./StyleDefinition.5774ff26.js";import"./GeometryUtils.8166011b.js";import"./WGLContainer.a9c5afdc.js";import"./Container.f7f0b23d.js";import"./EffectView.0490cca5.js";import"./Bitmap.e7ca0f0b.js";import"./ExportWMSImageParameters.dba6fcb2.js";const D=I.getLogger("esri.views.2d.layers.WMSLayerView2D");let o=class extends C(b(E(L))){constructor(){super(...arguments),this.container=new W}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}update(t){this.strategy.update(t).catch(e=>{R(e)||D.error(e)})}attach(){const{layer:t,container:e}=this,{imageMaxHeight:a,imageMaxWidth:r}=t;this.strategy=new H({container:e,fetchSource:this.fetchImage.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxHeight:a,imageMaxWidth:r,imageRotationSupported:!1,imageNormalizationSupported:!1,hidpi:!1}),this.handles.add(q(()=>this.exportImageVersion,()=>this.requestUpdate()),"exportImageVersion")}detach(){this.handles.remove("exportImageVersion"),this.strategy.destroy(),this.strategy=null,this.container.removeAllChildren()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}createFetchPopupFeaturesQuery(t){const{view:e,container:a}=this,{x:r,y:s}=t,{spatialReference:w}=e;let i=null,n=0,d=0;if(a.children.some(M=>{const{width:c,height:g,resolution:l,x:p,y:m}=M,y=p+l*c,x=m-l*g;return r>=p&&r<=y&&s<=m&&s>=x&&(i=new U({xmin:p,ymin:x,xmax:y,ymax:m,spatialReference:w}),n=c,d=g,!0)}),!i)return null;const u=i.width/n,v=Math.round((r-i.xmin)/u),S=Math.round((i.ymax-s)/u);return{extent:i,width:n,height:d,x:v,y:S}}async doRefresh(){this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,e,a,r){return this.layer.fetchImage(t,e,a,{timeExtent:this.timeExtent,...r})}};h([f()],o.prototype,"strategy",void 0),h([f()],o.prototype,"updating",void 0),o=h([V("esri.views.2d.layers.WMSLayerView2D")],o);const ot=o;export{ot as default};
