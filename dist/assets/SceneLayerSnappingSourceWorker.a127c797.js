import{ra as b,nn as L,at as u,ae as S,w as E,an as v,rb as V,nh as y,aW as m,i3 as _,iy as C,gL as l,nr as $,rc as P,rd as w,mW as h,e as j,n as I,nW as T}from"./index.ffdd6b96.js";let f=class{constructor(){this._idToComponent=new Map,this._components=new b(t=>t.bounds),this._edges=new b(t=>t.bounds),this._tmpLineSegment=L(),this._tmpP1=u(),this._tmpP2=u(),this._tmpP3=u(),this.remoteClient=null}async fetchCandidates(t,n){await Promise.resolve(),S(n),await this._ensureEdgeLocations(t,n);const e=[];return this._edges.forEachNeighbor(s=>this._addCandidates(t,s,e),t.bounds),{result:{candidates:e}}}async _ensureEdgeLocations(t,n){const e=[];if(this._components.forEachNeighbor(i=>{if(E(i.info)){const{id:a,uid:d}=i;e.push({id:a,uid:d})}},t.bounds),!e.length)return;const s={components:e},o=await this.remoteClient.invoke("fetchAllEdgeLocations",s,v(n,{}));for(const i of o.components)this._setFetchEdgeLocations(i)}async add(t){const n=new p(t.id,t.bounds);return this._idToComponent.set(n.id,n),this._components.add([n]),{result:{}}}async remove(t){const n=this._idToComponent.get(t.id);if(n){const e=[];this._edges.forEachNeighbor(s=>{s.component===n&&e.push(s)},n.bounds),this._edges.remove(e),this._components.remove([n]),this._idToComponent.delete(n.id)}return{result:{}}}_setFetchEdgeLocations(t){const n=this._idToComponent.get(t.id);if(E(n)||t.uid!==n.uid)return;const e=V.createView(t.locations),s=new Array(e.count),o=u(),i=u();for(let c=0;c<e.count;c++){const g=T(),r=l(g);e.position0.getVec(c,o),e.position1.getVec(c,i),y(r,r,o,.5),y(r,r,i,.5),m(r,r,t.origin),g[3]=_(r,o);const x=new W(n,c,g);s[c]=x}this._edges.add(s);const{objectIds:a,origin:d}=t;n.info={locations:e,objectIds:a,origin:d}}_addCandidates(t,n,e){const{locations:s,origin:o,objectIds:i}=n.component.info,a=s.position0.getVec(n.index,this._tmpP1),d=s.position1.getVec(n.index,this._tmpP2);m(a,a,o),m(d,d,o);const c=i[s.componentIndex.get(n.index)];this._addEdgeCandidate(t,c,a,d,e),this._addVertexCandidate(t,c,a,e),this._addVertexCandidate(t,c,d,e)}_addEdgeCandidate(t,n,e,s,o){if(!(t.types&C.EDGE))return;const i=l(t.bounds),a=$(e,s,this._tmpLineSegment),d=P(a,i,this._tmpP3);if(!w(t.bounds,d))return null;o.push({type:"edge",objectId:n,target:h(d),distance:_(i,d),start:h(e),end:h(s)})}_addVertexCandidate(t,n,e,s){if(!(t.types&C.VERTEX))return;const o=l(t.bounds);if(!w(t.bounds,e))return null;s.push({type:"vertex",objectId:n,target:h(e),distance:_(o,e)})}};function N(){return new f}f=j([I("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")],f);class p{constructor(n,e){this.id=n,this.bounds=e,this.info=null,this.uid=++p.uid}}p.uid=0;class W{constructor(n,e,s){this.component=n,this.index=e,this.bounds=s}}export{f as SceneLayerSnappingSourceWorker,N as default};
