import{G as t}from"./geometryEngineBase.cf4f989f.js";import{fr as u}from"./index.52935b46.js";function l(n){return t.extendedSpatialReferenceInfo(n)}function s(n,e,r){return t.clip(u,n,e,r)}function a(n,e,r){return t.cut(u,n,e,r)}function p(n,e,r){return t.contains(u,n,e,r)}function d(n,e,r){return t.crosses(u,n,e,r)}function g(n,e,r,i){return t.distance(u,n,e,r,i)}function m(n,e,r){return t.equals(u,n,e,r)}function h(n,e,r){return t.intersects(u,n,e,r)}function x(n,e,r){return t.touches(u,n,e,r)}function y(n,e,r){return t.within(u,n,e,r)}function w(n,e,r){return t.disjoint(u,n,e,r)}function A(n,e,r){return t.overlaps(u,n,e,r)}function E(n,e,r,i){return t.relate(u,n,e,r,i)}function S(n,e){return t.isSimple(u,n,e)}function V(n,e){return t.simplify(u,n,e)}function b(n,e,r=!1){return t.convexHull(u,n,e,r)}function v(n,e,r){return t.difference(u,n,e,r)}function z(n,e,r){return t.symmetricDifference(u,n,e,r)}function I(n,e,r){return t.intersect(u,n,e,r)}function R(n,e,r=null){return t.union(u,n,e,r)}function j(n,e,r,i,o,c,f){return t.offset(u,n,e,r,i,o,c,f)}function D(n,e,r,i,o=!1){return t.buffer(u,n,e,r,i,o)}function H(n,e,r,i,o,c,f){return t.geodesicBuffer(u,n,e,r,i,o,c,f)}function L(n,e,r,i=!0){return t.nearestCoordinate(u,n,e,r,i)}function _(n,e,r){return t.nearestVertex(u,n,e,r)}function q(n,e,r,i,o){return t.nearestVertices(u,n,e,r,i,o)}function B(n,e,r,i){if(e==null||i==null)throw new Error("Illegal Argument Exception");const o=t.rotate(e,r,i);return o.spatialReference=n,o}function C(n,e,r){if(e==null||r==null)throw new Error("Illegal Argument Exception");const i=t.flipHorizontal(e,r);return i.spatialReference=n,i}function O(n,e,r){if(e==null||r==null)throw new Error("Illegal Argument Exception");const i=t.flipVertical(e,r);return i.spatialReference=n,i}function G(n,e,r,i,o){return t.generalize(u,n,e,r,i,o)}function $(n,e,r,i){return t.densify(u,n,e,r,i)}function M(n,e,r,i,o=0){return t.geodesicDensify(u,n,e,r,i,o)}function P(n,e,r){return t.planarArea(u,n,e,r)}function T(n,e,r){return t.planarLength(u,n,e,r)}function k(n,e,r,i){return t.geodesicArea(u,n,e,r,i)}function F(n,e,r,i){return t.geodesicLength(u,n,e,r,i)}const N=Object.freeze(Object.defineProperty({__proto__:null,extendedSpatialReferenceInfo:l,clip:s,cut:a,contains:p,crosses:d,distance:g,equals:m,intersects:h,touches:x,within:y,disjoint:w,overlaps:A,relate:E,isSimple:S,simplify:V,convexHull:b,difference:v,symmetricDifference:z,intersect:I,union:R,offset:j,buffer:D,geodesicBuffer:H,nearestCoordinate:L,nearestVertex:_,nearestVertices:q,rotate:B,flipHorizontal:C,flipVertical:O,generalize:G,densify:$,geodesicDensify:M,planarArea:P,planarLength:T,geodesicArea:k,geodesicLength:F},Symbol.toStringTag,{value:"Module"}));export{I as A,$ as B,k as C,C as D,j as E,F as G,O as H,_ as I,M as L,N as O,G as R,q as S,B as V,P as _,m as a,D as b,h as c,E as d,x as f,A as g,b as h,a as i,R as j,y as l,S as m,d as o,w as p,T as q,s as r,p as s,l as t,g as u,H as v,z as w,v as x,V as y,L as z};
