import{_ as Ae,qS as gt,s as le,qT as pt,ai as ie,aa as Te,w as G,bR as Ce,a9 as Y,l as m,bQ as ft,cJ as _t,ag as D,qU as yt,qV as Ye,b5 as oe,iP as Ee,e_ as mt,qW as He,qX as It,a6 as Ze,eE as vt,ne,G as he,cb as bt,pW as ue,qY as xt,P as St,kL as wt,E as Ft,cQ as xe,ae as N,an as We,H as ge,U as Tt,I as Se,qI as Ct,dQ as Je,qZ as Ke,q_ as et,dU as qt,cI as we,ed as Mt,q$ as Ue,l7 as tt,j1 as kt,fs as st,e3 as se,k as J,fG as rt,e2 as it,ey as re,hy as W,v as Rt,aw as At,dH as at,r0 as Et,e as z,g as j,n as nt,C as ot,aG as Ut,f4 as Gt,aT as ae,r1 as Lt,iz as Ot,pF as Pt,fZ as Dt,r2 as $t}from"./index.46140dee.js";import{Y as zt}from"./QueryEngine.c9d5e723.js";import{r as Bt,c as ht,l as Nt}from"./FeatureStore2D.51a5bfad.js";import{v as Ge}from"./ogcFeatureUtils.bf854675.js";import{A as Le,d as V,r as Qt,R as jt}from"./ComputedAttributeStorage.e6be58ac.js";import{s as ut}from"./CircularArray.cd244cd7.js";import{h as Vt,t as Xt}from"./createConnection.db6b2805.js";import{s as Yt,a as Oe}from"./visualVariablesUtils.41857ea7.js";import{o as Q}from"./definitions.8fc39ccc.js";import"./QueryEngineCapabilities.c2e9875c.js";import"./timeSupport.582c3c5b.js";import"./geojson.b1c28f45.js";import"./clientSideDefaults.4d7196e1.js";import"./centroid.d4b2ad85.js";import"./Utils.78708976.js";import"./number.08b65821.js";import"./enums.05a6ea95.js";import"./visualVariablesUtils.2743b61a.js";function Ht(i){return i==="heatmap"?Ae(()=>import("./HeatmapProcessor.973d9fec.js"),["assets/HeatmapProcessor.973d9fec.js","assets/index.46140dee.js","assets/index.2c2ebad2.css","assets/definitions.8fc39ccc.js","assets/BaseProcessor.b420be50.js","assets/tileUtils.ad56c843.js"]):Ae(()=>import("./SymbolProcessor.0c1614ea.js"),["assets/SymbolProcessor.0c1614ea.js","assets/index.46140dee.js","assets/index.2c2ebad2.css","assets/CIMSymbolHelper.6f4abb5f.js","assets/BidiEngine.ec67919b.js","assets/enums.05a6ea95.js","assets/alignmentUtils.63b4d661.js","assets/definitions.8fc39ccc.js","assets/number.08b65821.js","assets/GeometryUtils.814cb798.js","assets/visualVariablesUtils.41857ea7.js","assets/Utils.78708976.js","assets/visualVariablesUtils.2743b61a.js","assets/Matcher.bfef90fe.js","assets/tileUtils.ad56c843.js","assets/TileClipper.f1cc810c.js","assets/Geometry.b68345ae.js","assets/GeometryUtils.8166011b.js","assets/MaterialKey.ac16d063.js","assets/cimAnalyzer.2dca29a9.js","assets/ExpandedCIM.a72b13cb.js","assets/BaseProcessor.b420be50.js"])}const fe=268435455;class Zt{constructor(){this.fieldMap=new Map,this.fields=[],this.hasFeatures=!1,this.fieldCount=0,this.featureCount=0,this.objectIdFieldIndex=0,this.vertexCount=0,this.offsets={attributes:new Array,geometry:new Array},this.centroid=new Array}hasField(e){return this.fieldMap.has(e)}isDateField(e){var t;return(t=this.fieldMap.get(e))==null?void 0:t.isDate}getFieldIndex(e){var t;return(t=this.fieldMap.get(e))==null?void 0:t.index}}function Wt(i){const s=i.getLength(),r=i.pos()+s,a={name:"",isDate:!1};for(;i.pos()<r&&i.next();)switch(i.tag()){case 1:a.name=i.getString();break;case 2:pt(i.getEnum())==="esriFieldTypeDate"&&(a.isDate=!0);break;default:i.skip()}return a}function Jt(i){return i.toLowerCase().trim()}function Kt(i,e,t=!1){const u=i.pos(),c=new Zt;let l=0,g=0;const d=1,p=2,f=4,b=3;let _=null,I=null,v=null,x=!1;for(;i.next();)switch(i.tag()){case 1:_=i.getString();break;case 3:I=i.getString();break;case 12:v=i.processMessage(gt);break;case 9:if(c.exceededTransferLimit=i.getBool(),c.exceededTransferLimit){c.offsets.geometry=t?new Float64Array(8e3):new Int32Array(8e3),c.centroid=t?new Float64Array(16e3):new Int32Array(16e3);for(let y=0;y<c.centroid.length;y++)c.centroid[y]=fe}break;case 13:{const y=Wt(i),T=y.name,M=Jt(y.name),w={fieldName:T,index:l++,isDate:y.isDate};c.fields.push(w),c.fieldMap.set(y.name,w),c.fieldMap.set(M,w);break}case 15:{const y=i.getLength(),T=i.pos()+y;if(!c.exceededTransferLimit){const w=c.offsets.geometry,q=c.centroid;w.push(0),q.push(fe),q.push(fe)}!x&&c.exceededTransferLimit&&(x=!0,c.offsets.attributes=t?new Float64Array(8e3*l):new Uint32Array(8e3*l));let M=g*l;for(;i.pos()<T&&i.next();)switch(i.tag()){case d:{x?c.offsets.attributes[M++]=i.pos():c.offsets.attributes.push(i.pos());const w=i.getLength();i.skipLen(w);break}case p:if(e){const w=i.getLength(),q=i.pos()+w;for(;i.pos()<q&&i.next();)switch(i.tag()){case b:{i.getUInt32();const F=i.getSInt64(),O=i.getSInt64();c.centroid[2*g]=F,c.centroid[2*g+1]=O;break}default:i.skip()}}else{c.offsets.geometry[g]=i.pos();const w=i.getLength();c.vertexCount+=w,i.skipLen(w)}break;case f:{const w=i.getLength(),q=i.pos()+w;for(;i.pos()<q&&i.next();)switch(i.tag()){case b:{i.getUInt32();const F=i.getSInt64(),O=i.getSInt64();c.centroid[2*g]=F,c.centroid[2*g+1]=O;break}default:i.skip()}break}default:i.skip()}g++,c.hasFeatures=!0;break}default:i.skip()}const S=_||I;if(!S)throw new le("FeatureSet has no objectId or globalId field name");return c.featureCount=g,c.fieldCount=l,c.objectIdFieldIndex=c.getFieldIndex(S),c.transform=v,c.displayIds=new Uint32Array(c.featureCount),c.groupIds=new Uint16Array(c.featureCount),i.move(u),c}const es=ie.getLogger("esri.view.2d.layers.features.support.FeatureSetReaderPBF"),ts=!0,_e=268435455,Pe=128,De=128e3,ee={small:{delta:new Int32Array(Pe),decoded:new Int32Array(Pe)},large:{delta:new Int32Array(De),decoded:new Int32Array(De)}};function $e(i){return i<=ee.small.delta.length?ee.small:(i<=ee.large.delta.length||(ee.large.delta=new Int32Array(Math.round(1.25*i)),ee.large.decoded=new Int32Array(Math.round(1.25*i))),ee.large)}function ze(i){return i.toLowerCase().trim()}function ss(i){try{const t=new _t(new Uint8Array(i),new DataView(i));for(;t.next();){if(t.tag()===2)return rs(t.getMessage());t.skip()}}catch(e){const t=new le("query:parsing-pbf","Error while parsing FeatureSet PBF payload",{error:e});es.error(t)}return null}function rs(i){for(;i.next();){if(i.tag()===1)return i.getMessage();i.skip()}return null}function is(i){const c=i.getLength(),l=i.pos()+c;for(;i.pos()<l&&i.next();)switch(i.tag()){case 1:return i.getString();case 2:return i.getFloat();case 3:return i.getDouble();case 4:return i.getSInt32();case 5:return i.getUInt32();case 6:return i.getInt64();case 7:return i.getUInt64();case 8:return i.getSInt64();case 9:return i.getBool();default:return i.skip(),null}return null}function as(i,e,t,s,r,a){return .5*Math.abs(i*s+t*a+r*e-i*a-t*e-r*s)}function ye(i,e,t,s){return i*s-t*e===0&&i*t+e*s>0}class ce extends Le{constructor(e,t,s,r){super(e,r),this._hasNext=!1,this._isPoints=!1,this._featureIndex=-1,this._featureOffset=0,this._cache={area:0,unquantGeometry:void 0,geometry:void 0,centroid:void 0,legacyFeature:void 0,optFeature:void 0},this._geometryType=r.geometryType,this._reader=t,this._header=s,this._hasNext=s.hasFeatures,this._isPoints=r.geometryType==="esriGeometryPoint"}static fromBuffer(e,t,s=!1){const r=t.geometryType,a=ss(e),n=Kt(a,r==="esriGeometryPoint",s),o=Le.createInstance();return new ce(o,a,n,t)}get geometryType(){return this._geometryType}get size(){return this._header.featureCount}get hasZ(){return!1}get hasM(){return!1}get stride(){return 2+(this.hasZ?1:0)+(this.hasM?1:0)}get hasFeatures(){return this._header.hasFeatures}get hasNext(){return this._hasNext}get exceededTransferLimit(){return this._header.exceededTransferLimit}hasField(e){return this._header.hasField(e)||this._header.hasField(ze(e))}getFieldNames(){return this._header.fields.map(e=>e.fieldName)}getSize(){return this.size}getQuantizationTransform(){return this._header.transform}getCursor(){return this.copy()}getIndex(){return this._featureIndex}setIndex(e){this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._cache.centroid=void 0,this._cache.legacyFeature=void 0,this._cache.optFeature=void 0,this._featureIndex=e}getAttributeHash(){let e="";return this._header.fields.forEach(({index:t})=>{e+=this._readAttributeAtIndex(t)+"."}),e}getObjectId(){return this._readAttributeAtIndex(this._header.objectIdFieldIndex)}getDisplayId(){return this._header.displayIds[this._featureIndex]}setDisplayId(e){this._header.displayIds[this._featureIndex]=e}getGroupId(){return this._header.groupIds[this._featureIndex]}setGroupId(e){this._header.groupIds[this._featureIndex]=e}readLegacyFeature(){var e;if(this._cache.legacyFeature===void 0){const t=this.readCentroid(),s={attributes:this.readAttributes(),geometry:this._isPoints?this.readLegacyPointGeometry():this.readLegacyGeometry(),centroid:(e=t&&{x:t.coords[0],y:t.coords[1]})!=null?e:null};return this._cache.legacyFeature=s,s}return this._cache.legacyFeature}readOptimizedFeature(){if(this._cache.optFeature===void 0){const e=new Te(this.readGeometry(),this.readAttributes(),this.readCentroid());return e.objectId=this.getObjectId(),e.displayId=this.getDisplayId(),this._cache.optFeature=e,e}return this._cache.optFeature}getXHydrated(){const e=this._header.centroid[2*this._featureIndex],t=this.getQuantizationTransform();return G(t)?e:e*t.scale[0]+t.translate[0]}getYHydrated(){const e=this._header.centroid[2*this._featureIndex+1],t=this.getQuantizationTransform();return G(t)?e:t.translate[1]-e*t.scale[1]}getX(){return this._header.centroid[2*this._featureIndex]*this._sx+this._tx}getY(){return this._header.centroid[2*this._featureIndex+1]*this._sy+this._ty}readLegacyPointGeometry(){return{x:this.getX(),y:this.getY()}}readLegacyGeometry(e){const t=this.readGeometry(e);return Ce(t,this.geometryType,!1,!1)}readLegacyCentroid(){const e=this.readCentroid();if(!e)return null;const[t,s]=e.coords;return{x:t,y:s}}readGeometryArea(){return this._cache.area||this.readGeometry(!0),this._cache.area}readUnquantizedGeometry(e=!1){if(this._cache.unquantGeometry===void 0){const t=this.readGeometry(e);if(!t)return this._cache.unquantGeometry=null,null;const s=$e(t.coords.length).decoded,r=t.clone(s),a=r.coords;let n=0;for(const o of r.lengths){for(let h=1;h<o;h++){const u=2*(n+h),c=2*(n+h-1);a[u]+=a[c],a[u+1]+=a[c+1]}n+=o}return this._cache.unquantGeometry=r,r}return this._cache.unquantGeometry}readHydratedGeometry(){if(this._isPoints){if(this._header.centroid[2*this._featureIndex]===_e)return null;const r=this.getXHydrated(),a=this.getYHydrated();return new Y([],[r,a])}const e=this.readGeometry();if(!e)return null;const t=e.clone(),s=this.getQuantizationTransform();return m(s)&&ft(t,t,this.hasZ,this.hasM,s),t}readGeometry(e=!1){if(this._cache.geometry===void 0){let t=null;if(this._isPoints){if(this._header.centroid[2*this._featureIndex]===_e)return null;const s=this.getX(),r=this.getY();t=new Y([],[s,r])}else{const s=this._header.offsets.geometry[this._featureIndex],r=this._reader;if(s===0)return null;r.move(s);try{t=e?this._parseGeometryForDisplay(r):this._parseGeometry(r)}catch(a){return console.error("Failed to parse geometry!",a),null}}return this._cache.geometry=t,t}return this._cache.geometry}readCentroid(){if(this._cache.centroid===void 0){let e=null;const t=this._header.centroid[2*this._featureIndex]+this._tx,s=this._header.centroid[2*this._featureIndex+1]+this._ty;return t===_e?(e=this._computeCentroid(),e&&(this._header.centroid[2*this._featureIndex]=e.coords[0]-this._tx,this._header.centroid[2*this._featureIndex+1]=e.coords[1]-this._ty)):e=new Y([],[t,s]),this._cache.centroid=e,e}return this._cache.centroid}copy(){const e=this._reader.clone(),t=new ce(this.instance,e,this._header,this.fullSchema());return this.copyInto(t),t}next(){for(this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._cache.centroid=void 0,this._cache.legacyFeature=void 0,this._cache.optFeature=void 0;++this._featureIndex<this.size&&!this._getExists(););return this._featureIndex<this.size}_readAttribute(e,t){const s=this._header.hasField(e)?e:ze(e),r=this._header.getFieldIndex(s);if(r==null)return;const a=this._readAttributeAtIndex(r);return!t||a==null?a:this._header.isDateField(s)?new Date(a):a}_readAttributes(){const e={};return this._header.fields.forEach(({fieldName:t,index:s})=>{e[t]=this._readAttributeAtIndex(s)}),e}copyInto(e){super.copyInto(e),e._featureIndex=this._featureIndex,e._featureOffset=this._featureOffset,e._hasNext=this._hasNext}_readAttributeAtIndex(e){const t=this._header.offsets.attributes[this._featureIndex*this._header.fieldCount+e],s=this._reader;return s.move(t),is(s)}_parseGeometry(e){const r=e.getLength(),a=e.pos()+r,n=[],o=[];for(;e.pos()<a&&e.next();)switch(e.tag()){case 2:{const h=e.getUInt32(),u=e.pos()+h;for(;e.pos()<u;)o.push(e.getUInt32());break}case 3:{const h=e.getUInt32(),u=e.pos()+h;for(n.push(e.getSInt32()+this._tx),n.push(e.getSInt32()+this._ty),this.hasZ&&e.getSInt32(),this.hasM&&e.getSInt32();e.pos()<u;)n.push(e.getSInt32()),n.push(e.getSInt32()),this.hasZ&&e.getSInt32(),this.hasM&&e.getSInt32();break}default:e.skip()}return new Y(o,n)}_parseGeometryForDisplay(e){const r=e.getLength(),a=e.pos()+r,n=[],o=[];let h=0,u=0,c=null,l=0;const g=this.geometryType==="esriGeometryPolygon";for(;e.pos()<a&&e.next();)switch(e.tag()){case 2:{const d=e.getUInt32(),p=e.pos()+d;for(;e.pos()<p;){const f=e.getUInt32();n.push(f),h+=f}c=$e(2*h).delta;break}case 3:{e.getUInt32();const d=2+(this.hasZ?1:0)+(this.hasM?1:0);for(const p of n)if(u+d*p>c.length)for(let f=0;f<p;f++)e.getSInt32(),e.getSInt32(),this.hasZ&&e.getSInt32(),this.hasM&&e.getSInt32();else if(g&&ts){const f=this.getAreaSimplificationThreshold(p,this._header.vertexCount);let b=2,_=1;const I=!1;let v=e.getSInt32(),x=e.getSInt32();c[u++]=v,c[u++]=x,this.hasZ&&e.getSInt32(),this.hasM&&e.getSInt32();let S=e.getSInt32(),y=e.getSInt32();for(this.hasZ&&e.getSInt32(),this.hasM&&e.getSInt32();b<p;){let T=e.getSInt32(),M=e.getSInt32();this.hasZ&&e.getSInt32(),this.hasM&&e.getSInt32();const w=v+S,q=x+y;as(v,x,w,q,w+T,q+M)>=f?(l+=-.5*(w-v)*(q+x),_>1&&ye(c[u-2],c[u-1],S,y)?(c[u-2]+=S,c[u-1]+=y):(c[u++]=S,c[u++]=y,_++),v=w,x=q):(T+=S,M+=y),S=T,y=M,b++}_<3||I?u-=2*_:(l+=-.5*(v+S-v)*(x+y+x),ye(c[u-2],c[u-1],S,y)?(c[u-2]+=S,c[u-1]+=y,o.push(_)):(c[u++]=S,c[u++]=y,o.push(++_)))}else{let f=0,b=e.getSInt32(),_=e.getSInt32();this.hasZ&&e.getSInt32(),this.hasM&&e.getSInt32(),c[u++]=b,c[u++]=_,f+=1;for(let I=1;I<p;I++){const v=e.getSInt32(),x=e.getSInt32(),S=b+v,y=_+x;l+=-.5*(S-b)*(y+_),this.hasZ&&e.getSInt32(),this.hasM&&e.getSInt32(),I>2&&ye(c[u-2],c[u-1],v,x)?(c[u-2]+=v,c[u-1]+=x):(c[u++]=v,c[u++]=x,f+=1),b=S,_=y}o.push(f)}break}default:e.skip()}if(this._cache.area=l,!o.length)return null;if(this._tx||this._ty){let d=0;for(const p of o)c[2*d]+=this._tx,c[2*d+1]+=this._ty,d+=p}return new Y(o,c)}}class pe{constructor(e){this.service=e}destroy(){}}function ns(i){return Array.isArray(i.source)}function os(i){return i&&i.capabilities&&i.collection&&i.layerDefinition}function hs(i){const{capabilities:e}=i;return os(i.source)?new gs(i):ns(i)?new cs(i):e.query.supportsFormatPBF&&D("featurelayer-pbf")?new ds(i):new ls(i)}async function us(i){const e=new It;return await e.open(i,{}),e}class cs extends pe{constructor(e){super(e),this._portsOpen=us(e.source).then(t=>this.client=t)}destroy(){this.client.close(),this.client=null}async executeQuery(e,t){await this._portsOpen;const s=await this.client.invoke("queryFeatures",e.toJSON(),t);return V.fromFeatureSet(s,this.service)}}class ds extends pe{async executeQuery(e,t){const{data:s}=await yt(this.service.source,e,t),r=!e.quantizationParameters;return ce.fromBuffer(s,this.service,r)}}class ls extends pe{async executeQuery(e,t){var u;const{source:s,capabilities:r,spatialReference:a,objectIdField:n,geometryType:o}=this.service;if(m(e.quantizationParameters)&&!r.query.supportsQuantization){const c=e.clone(),l=Ye(oe(c.quantizationParameters));c.quantizationParameters=null;const{data:g}=await Ee(s,c,a,t),d=mt(g,n);return He(l,d),V.fromOptimizedFeatureSet(d,this.service)}const{data:h}=await Ee(s,e,this.service.spatialReference,t);return o==="esriGeometryPoint"&&(h.features=(u=h.features)==null?void 0:u.filter(c=>{if(m(c.geometry)){const l=c.geometry;return Number.isFinite(l.x)&&Number.isFinite(l.y)}return!0})),V.fromFeatureSet(h,this.service)}}class gs extends pe{async executeQuery(e,t){const{capabilities:s}=this.service;if(e.quantizationParameters&&!s.query.supportsQuantization){const a=e.clone(),n=Ye(oe(a.quantizationParameters));a.quantizationParameters=null;const o=await Ge(this.service.source,e,t);return He(n,o),V.fromOptimizedFeatureSet(o,this.service)}const r=await Ge(this.service.source,e,t);return V.fromOptimizedFeatureSet(r,this.service)}}class ${constructor(){this.version=0,this.source=!1,this.targets={feature:!1,aggregate:!1},this.storage={filters:!1,data:!1},this.mesh=!1,this.queryFilter=!1,this.why={mesh:[],source:[]}}static create(e){const t=new $;for(const s in e){const r=e[s];if(typeof r=="object")for(const a in r){const n=r[a];t[s][a]=n}t[s]=r}return t}static empty(){return $.create({})}static all(){return $.create({source:!0,targets:{feature:!0,aggregate:!0},storage:{filters:!0,data:!0},mesh:!0})}unset(e){this.version=e.version,e.source&&(this.source=!1),e.targets.feature&&(this.targets.feature=!1),e.targets.aggregate&&(this.targets.aggregate=!1),e.storage.filters&&(this.storage.filters=!1),e.storage.data&&(this.storage.data=!1),e.mesh&&(this.mesh=!1),e.queryFilter&&(this.queryFilter=!1)}any(){return this.source||this.mesh||this.storage.filters||this.storage.data||this.targets.feature||this.targets.aggregate||this.queryFilter}describe(){let e=0,t="";if(this.mesh){e+=20,t+=`-> (20) Mesh needs update
`;for(const r of this.why.mesh)t+=`    + ${r}
`}if(this.source){e+=10,t+=`-> (10) The source needs update
`;for(const r of this.why.source)t+=`    + ${r}
`}this.targets.feature&&(e+=5,t+=`-> (5) Feature target parameters changed
`),this.storage.filters&&(e+=5,t+=`-> (5) Feature filter parameters changed
`),this.targets.aggregate&&(e+=4,t+=`-> (4) Aggregate target parameters changed
`),this.storage.data&&(e+=1,t+="-> (1) Texture storage parameters changed");const s=e<5?"Fastest":e<10?"Fast":e<15?"Moderate":e<20?"Slow":"Very Slow";console.debug(`Applying ${s} update of cost ${e}/45 `),console.debug(t)}toJSON(){return{queryFilter:this.queryFilter,source:this.source,targets:this.targets,storage:this.storage,mesh:this.mesh}}}class ps{constructor(e,t){this.requests={done:new Array,stream:new ut(10)},this._edits=null,this._abortController=new AbortController,this._version=0,this._done=!1,this.didSend=!1,this.tile=e,this._version=t}get signal(){return this._abortController.signal}get options(){return{signal:this._abortController.signal}}get empty(){return!this.requests.done.length}get edits(){return this._edits}get done(){return this._done}end(){this._done=!0}clear(){this.requests.done=[]}applyUpdate(e){this.requests.done.forEach(t=>t.message.status.unset(e)),this._version=e.version,m(this._edits)&&this._edits.status.unset(e)}add(e){var t;e.message.status=(t=e.message.status)!=null?t:$.empty(),e.message.status.version=this._version,D("esri-2d-update-debug")&&console.debug(this.tile.id,"DataTileSubscription:add",this._version),e.message.end&&this.requests.done.forEach(s=>{m(s.message)&&s.message.end&&(s.message.end=!1)}),this.requests.done.push(e)}edit(e,t){const s=e.getQuantizationTransform(),r=e.fullSchema(),a=Array.from(e.features()),n=[...t,...a.map(o=>o.objectId)];if(this.removeIds(n),this._invalidate(),G(this._edits))return void(this._edits={type:"append",addOrUpdate:V.fromOptimizedFeatures(a,r,oe(s)),id:this.tile.id,status:$.empty(),end:!0});this.requests.done.forEach(o=>o.message.end=!1),oe(this._edits.addOrUpdate).append(e.features())}*readers(){for(const{message:e}of this.requests.done)m(e.addOrUpdate)&&(yield e.addOrUpdate);m(this._edits)&&m(this._edits.addOrUpdate)&&(yield this._edits.addOrUpdate)}_invalidate(){for(const e of this.requests.done)e.message.status=$.empty();m(this._edits)&&(this._edits.status=$.empty())}removeIds(e){this._invalidate();for(const{message:t}of this.requests.done){const s=t.addOrUpdate;m(s)&&(s.removeIds(e),s.isEmpty&&(t.addOrUpdate=null))}m(this._edits)&&m(this._edits.addOrUpdate)&&this._edits.addOrUpdate.removeIds(e),this.requests.done=this.requests.done.filter(t=>t.message.addOrUpdate||t.message.end)}abort(){this._abortController.abort()}}function fs(i,e){const t=new Set;return i&&i.forEach(s=>t.add(s)),e&&e.forEach(s=>t.add(s)),t.has("*")?["*"]:Array.from(t)}class ct{constructor(e){this.events=new Ze,this._resolver=vt(),this._didEdit=!1,this._subscriptions=new Map,this._outSR=e.outSR,this._serviceInfo=e.serviceInfo,this._onTileUpdateMessage=e.onMessage}destroy(){}async _onMessage(e){var r,a;const t=this._subscriptions.get(e.id);if(!t)return;const s={...e,remove:(r=e.remove)!=null?r:[],status:(a=e.status)!=null?a:$.empty()};return ne(this._onTileUpdateMessage(s,t.options))}update(e,t){var h;const s=t.fields.length;t.outFields=fs((h=this._schema)==null?void 0:h.outFields,t.outFields),t.outFields=t.outFields.length>=.75*s?["*"]:t.outFields,t.outFields.sort();const r=he(this._schema,t);if(!r)return;D("esri-2d-update-debug")&&console.debug("Applying Update - Source:",r);const a="orderByFields"in this._serviceInfo&&this._serviceInfo.orderByFields?this._serviceInfo.orderByFields:this._serviceInfo.objectIdField+" ASC",n={returnCentroid:D("esri-2d-query-centroid-enabled")&&this._serviceInfo.geometryType==="esriGeometryPolygon",returnGeometry:!0,timeReferenceUnknownClient:this._serviceInfo.type!=="stream"&&this._serviceInfo.timeReferenceUnknownClient,outFields:t.outFields,outSpatialReference:this._outSR,orderByFields:[a],where:t.definitionExpression||"1=1",gdbVersion:t.gdbVersion,historicMoment:t.historicMoment,timeExtent:bt.fromJSON(t.timeExtent)},o=this._schema&&ue(r,"outFields");this._schema&&xt(r,["timeExtent","definitionExpression","gdbVersion","historicMoment","customParameters"])&&(e.why.mesh.push("Layer filter and/or custom parameters changed"),e.why.source.push("Layer filter and/or custom parameters changed"),e.mesh=!0,e.source=!0,e.queryFilter=!0),o&&(e.why.source.push("Layer required fields changed"),e.source=!0),he(n,this._queryInfo)&&(this._queryInfo=n),this._schema=t,this._resolver.resolve()}whenInitialized(){return this._resolver.promise}async applyUpdate(e){if(e.queryFilter||e.source&&this._didEdit)return this.refresh(e.version),void(this._didEdit=!1);this._subscriptions.forEach(t=>t.applyUpdate(e)),await this.resend()}refresh(e){for(const t of this._tiles())this.unsubscribe(t),this.subscribe(t,e)}subscribe(e,t){const s=new ps(e,t);this._subscriptions.set(e.id,s)}unsubscribe(e){const t=this.get(e.id);m(t)&&t.abort(),this._subscriptions.delete(e.id)}createQuery(e={}){const t=this._queryInfo.historicMoment?new Date(this._queryInfo.historicMoment):null;return new St({...this._queryInfo,historicMoment:t,...e})}get(e){return this._subscriptions.has(e)?this._subscriptions.get(e):null}async queryLastEditDate(){throw new Error("Service does not support query type")}async query(e){throw new Error("Service does not support query")}*_tiles(){const e=Array.from(this._subscriptions.values());for(const t of e)yield t.tile}async edit(e,t){const s=Array.from(this._subscriptions.values()),r=s.map(({tile:a})=>a);for(const a of s)a.removeIds(t);if(e.length){const a=r.map(o=>{const h=this.createTileQuery(o);return h.objectIds=e,{tile:o,query:h}}).map(async({tile:o,query:h})=>({tile:o,result:await this.query(h),query:h})),n=(await wt(a)).map(async({tile:o,result:h})=>{if(!h.hasFeatures&&!t.length&&!e.length)return;const u=this._subscriptions.get(o.key.id);u&&u.edit(h,e)});await Ft(n)}this._didEdit=!0}}const _s=ie.getLogger("esri.views.2d.layers.features.sources.BaseFeatureSource"),ys=4;class qe extends ct{constructor(e){super(e),this.type="feature",this.mode="on-demand",this._adapter=hs(e.serviceInfo),this._queue=new xe({concurrency:8,process:async t=>{if(N(t),m(t.tile)){const s=t.tile.key.id,{signal:r}=t,a=D("esri-tiles-debug")?{tile:s.replace(/\//g,"."),depth:t.depth}:void 0,n=await this._adapter.executeQuery(t.query,{signal:r,query:{...a,...this._schema.customParameters}});return n.level=t.tile.key.level,n}return this._adapter.executeQuery(t.query,{...t,query:this._schema.customParameters})}}),this._patchQueue=new xe({concurrency:8,process:async t=>{if(N(t),m(t.tile)){const s=t.tile.key.id,{signal:r}=t,a=D("esri-tiles-debug")?{tile:s.replace(/\//g,"."),depth:t.depth}:void 0,n=await this._adapter.executeQuery(t.query,{signal:r,query:{...a,...this._schema.customParameters}});return n.level=t.tile.key.level,n}return this._adapter.executeQuery(t.query,{...t,query:this._schema.customParameters})}})}destroy(){super.destroy(),this._adapter.destroy(),this._queue.destroy(),this._patchQueue.destroy()}get updating(){return!!this._queue.length||Array.from(this._subscriptions.values()).some(e=>!e.done)}get maxRecordCountFactor(){const{query:e}=this._serviceInfo.capabilities;return e.supportsMaxRecordCountFactor?ys:null}get maxPageSize(){var t;const{query:e}=this._serviceInfo.capabilities;return((t=e.maxRecordCount)!=null?t:8e3)*We(this.maxRecordCountFactor,1)}get pageSize(){return Math.min(8e3,this.maxPageSize)}enableEvent(e,t){}subscribe(e,t){super.subscribe(e,t);const s=this._subscriptions.get(e.id);this._fetchDataTile(e).catch(r=>{ge(r)||_s.error(new le("mapview-query-error","Encountered error when fetching tile",{tile:e,error:r}))}).then(()=>s.end())}unsubscribe(e){super.unsubscribe(e)}readers(e){return this._subscriptions.get(e).readers()}async query(e){return this._adapter.executeQuery(e,{query:this._schema.customParameters})}async queryLastEditDate(){const e=this._serviceInfo.source,t={...e.query,f:"json"};return(await Tt(e.path,{query:t,responseType:"json"})).data.editingInfo.lastEditDate}createTileQuery(e,t={}){var n;const s=this._serviceInfo.geometryType,r=this.createQuery(t);r.quantizationParameters=(n=t.quantizationParameters)!=null?n:e.getQuantizationParameters(),r.resultType="tile",r.geometry=e.extent,this._serviceInfo.capabilities.query.supportsQuantization?s==="esriGeometryPolyline"&&(r.maxAllowableOffset=e.resolution*D("feature-polyline-generalization-factor")):s!=="esriGeometryPolyline"&&s!=="esriGeometryPolygon"||(r.maxAllowableOffset=e.resolution,s==="esriGeometryPolyline"&&(r.maxAllowableOffset*=D("feature-polyline-generalization-factor")));const a=this._serviceInfo.capabilities.query;return r.defaultSpatialReferenceEnabled=a.supportsDefaultSpatialReference,r.compactGeometryEnabled=a.supportsCompactGeometry,r}async _executePatchQuery(e,t,s,r){const a=t.clone();a.outFields=[this._serviceInfo.objectIdField,...s],a.returnCentroid=!1,a.returnGeometry=!1;const n=m(a.start)?a.start/8e3:0,o=r.signal;return this._patchQueue.push({tile:e,query:a,signal:o,depth:n})}async _resend(e,t){const{query:s,message:r}=e,a=m(s.outFields)?s.outFields:[],n=this._queryInfo.outFields,o=n.filter(h=>!a.includes(h));if(G(r.addOrUpdate))this._onMessage({...r,type:"append"});else if(o.length)try{const h=this._subscriptions.get(r.id).tile,u=await this._executePatchQuery(h,s,o,t);N(t),s.outFields=n,r.addOrUpdate.joinAttributes(u),this._onMessage({...r,end:r.end,type:"append"})}catch{}else this._onMessage({...r,type:"append"})}async _resendSubscription(e){if(D("esri-2d-update-debug")&&console.debug(e.tile.id,"Resend Subscription"),e.empty)return this._onMessage({id:e.tile.id,addOrUpdate:null,end:!1,type:"append"});const t=e.signal;for(const s of e.requests.done)await this._resend(s,{signal:t});return m(e.edits)?this._onMessage(e.edits):void 0}async resend(){const e=Array.from(this._subscriptions.values());await Promise.all(e.map(t=>this._resendSubscription(t)))}}const Be=D("esri-mobile"),Ne={maxDrillLevel:Be?1:4,maxRecordCountFactor:Be?1:3};class ms extends qe{constructor(e){super(e)}async _fetchDataTile(e){const t=this._serviceInfo.capabilities.query.supportsMaxRecordCountFactor,s=this._subscriptions.get(e.key.id),r=s.signal,a=e.getQuantizationParameters();let n=0;const o=async(h,u)=>{const c=this._queryInfo,l=this.createTileQuery(h,{maxRecordCountFactor:t?Ne.maxRecordCountFactor:void 0,returnExceededLimitFeatures:!1,quantizationParameters:a});n++;try{const g=await this._queue.push({tile:e,query:l,signal:r,depth:u});if(n--,N(r),!g)return;if(c!==this._queryInfo)return void o(h,u);if(g.exceededTransferLimit&&u<Ne.maxDrillLevel){for(const p of h.createChildTiles())o(p,u+1);return}const d={id:e.id,addOrUpdate:g,end:n===0,type:"append"};s.add({query:l,message:d}),this._onMessage(d)}catch(g){ge(g)||this._onMessage({id:e.id,addOrUpdate:null,end:!0,type:"append"})}};o(e,0)}}const Is=2500;function vs(i,e){const t=i.weakClone();if(m(i.geometry)){const s=Ke(e,i.geometry.coords[0]),r=et(e,i.geometry.coords[1]);t.geometry=new Y([],[s,r])}return t}function bs(i){return i==="esriGeometryPoint"?vs:(e,t)=>{const s=e.weakClone(),r=new Y,a=!1,n=!1,o=Je(r,e.geometry,a,n,i,t,!1,!1);return s.geometry=o,s}}function xs(i){return i==="esriGeometryPoint"?e=>m(e.geometry)?{minX:e.geometry.coords[0],minY:e.geometry.coords[1],maxX:e.geometry.coords[0],maxY:e.geometry.coords[1]}:{minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}:e=>{let t=1/0,s=1/0,r=-1/0,a=-1/0;return m(e.geometry)&&e.geometry.forEachVertex((n,o)=>{t=Math.min(t,n),s=Math.min(s,o),r=Math.max(r,n),a=Math.max(a,o)}),{minX:t,minY:s,maxX:r,maxY:a}}}function Ss(i,e){const t=qt(9,xs(e));return t.load(i),t}function ws(i,e){return i.search({minX:e.bounds[0],minY:e.bounds[1],maxX:e.bounds[2],maxY:e.bounds[3]})}class Fs{constructor(e,t){this.onUpdate=e,this._geometryType=t,this._objectIdToFeature=new Map}get _features(){const e=[];return this._objectIdToFeature.forEach(t=>e.push(t)),e}add(e){this._objectIdToFeature.set(e.objectId,e),this._index=null}get(e){return this._objectIdToFeature.has(e)?this._objectIdToFeature.get(e):null}forEach(e){this._objectIdToFeature.forEach(e)}search(e){return this._index||(this._index=Ss(this._features,this._geometryType)),ws(this._index,e)}removeById(e){const t=this._objectIdToFeature.get(e);return t?(this._objectIdToFeature.delete(e),this._index=null,t):null}update(e,t){this.onUpdate(e,t)}get size(){return this._objectIdToFeature.size}}class Ts extends ct{constructor(e){super(e),this.type="geoevent",this._dataReceiveEventEnabled=!1,this._level=0,this._updateInfo={websocket:0,client:0};const{outSR:t}=e,{geometryType:s,objectIdField:r,timeInfo:a,purgeOptions:n,source:o,spatialReference:h,serviceFilter:u,maxReconnectionAttempts:c,maxReconnectionInterval:l,updateInterval:g,enableDataReceived:d,customParameters:p}=e.serviceInfo,f=new Fs(this._onUpdate.bind(this),s),b=new Vt(f,r,a,n),_=Xt(o,h,t,s,u,c,l,p);this._store=f,this._manager=b,this._connection=_,this._quantize=bs(s),this._dataReceiveEventEnabled=d,this._handles=[this._connection.on("feature",I=>this._onFeature(I)),Se(()=>_.connectionStatus,I=>this.events.emit("connectionStatus",I)),Se(()=>_.errorString,I=>this.events.emit("errorString",I))],this._initUpdateInterval=()=>{let I=performance.now();this._updateIntervalId=setInterval(()=>{const v=performance.now(),x=v-I;if(x>Is){I=v;const S=Math.round(this._updateInfo.client/(x/1e3)),y=Math.round(this._updateInfo.websocket/(x/1e3));this._updateInfo.client=0,this._updateInfo.websocket=0,this.events.emit("updateRate",{client:S,websocket:y})}e.canAcceptRequest()&&this._manager.checkForUpdates()},g)},this._initUpdateInterval()}destroy(){super.destroy(),this._clearUpdateInterval(),this._handles.forEach(e=>e.remove()),this._connection.destroy()}_fetchDataTile(){}pauseStream(){this._clearUpdateInterval()}resumeStream(){this._initUpdateInterval()}enableEvent(e,t){e==="data-received"&&(this._dataReceiveEventEnabled=t)}get updating(){return!1}subscribe(e,t){super.subscribe(e,t);const s=this._subscriptions.get(e.id);this._level=e.level;const r=this._getTileFeatures(e);this._onMessage({type:"append",id:e.key.id,addOrUpdate:r,end:!0}),s.didSend=!0}unsubscribe(e){super.unsubscribe(e)}*readers(e){const t=this._subscriptions.get(e),{tile:s}=t;yield this._getTileFeatures(s);for(const r of t.requests.stream.entries)m(r)&&m(r.addOrUpdate)&&(yield r.addOrUpdate)}createTileQuery(e){throw new Error("Service does not support tile  queries")}async resend(){this._subscriptions.forEach(e=>{const{tile:t}=e,s={type:"append",id:t.id,addOrUpdate:this._getTileFeatures(t),end:!0};this._onMessage(s)})}_getTileFeatures(e){const t=this._store.search(e).map(s=>this._quantize(s,e.transform));return V.fromOptimizedFeatures(t,this._serviceInfo,e.transform)}_onFeature(e){this._updateInfo.websocket++;try{this._dataReceiveEventEnabled&&this.events.emit("feature",e);const t=Ct(e,this._serviceInfo.geometryType,!1,!1,this._serviceInfo.objectIdField);this._manager.add(t)}catch{}}_clearUpdateInterval(){clearInterval(this._updateIntervalId),this._updateIntervalId=0}_onUpdate(e,t){m(e)&&(this._updateInfo.client+=e.length),this._subscriptions.forEach((s,r)=>{s.didSend&&s.tile.level===this._level&&this._onMessage({type:"append",id:r,addOrUpdate:null,clear:!0,end:!1})}),this._subscriptions.forEach((s,r)=>{if(!s.didSend||s.tile.level!==this._level)return;const a=s.tile,n={type:"append",id:r,addOrUpdate:this._getTileFeatures(a),remove:[],end:!0,status:$.empty()};s.requests.stream.enqueue(n),this._onMessage(n)})}}const Cs=ie.getLogger("esri.views.2d.layers.features.sources.FeatureSource");class qs extends qe{constructor(e){super(e)}async _fetchDataTile(e){const r=this._subscriptions.get(e.key.id);let a=!1,n=0,o=0;const h=(l,g)=>{o--,N(r);const d=e.id,p=l.reader,f=l.query;if(!p.exceededTransferLimit){if(a=!0,g!==0&&!p.hasFeatures){const I={id:d,addOrUpdate:p,end:o===0,type:"append"};return r.add({message:I,query:f}),void this._onMessage(I)}const _={id:d,addOrUpdate:p,end:o===0,type:"append"};return r.add({message:_,query:f}),void this._onMessage(_)}const b={id:d,addOrUpdate:p,end:a&&o===0,type:"append"};r.add({message:b,query:f}),this._onMessage(b)};let u=0,c=0;for(;!a&&c++<20;){let l;for(let g=0;g<u+1;g++){const d=n++;o++,l=this._fetchDataTilePage(e,d,r).then(p=>p&&h(p,d)).catch(p=>{a=!0,ge(p)||(Cs.error(new le("mapview-query-error","Encountered error when fetching tile",{tile:e,error:p})),this._onMessage({id:e.id,addOrUpdate:null,end:a,type:"append"}))})}await l,N(r),u=Math.min(u+2,6)}}async _fetchDataTilePage(e,t,s){N(s);const r=this._queryInfo,a={start:this.pageSize*t,num:this.pageSize,returnExceededLimitFeatures:!0,quantizationParameters:e.getQuantizationParameters()};m(this.maxRecordCountFactor)&&(a.maxRecordCountFactor=this.maxRecordCountFactor);const n=this.createTileQuery(e,a);try{const o=s.signal,h=await this._queue.push({tile:e,query:n,signal:o,depth:t});return N(s),h?r!==this._queryInfo?this._fetchDataTilePage(e,t,s):{reader:h,query:n}:null}catch(o){return we(o),null}}}const Ms=ie.getLogger("esri.views.2d.layers.features.sources.SnapshotFeatureSource");function ks(i,e,t){const s=i.getXHydrated(),r=i.getYHydrated(),a=e.getColumnForX(s),n=Math.floor(e.normalizeCol(a));return`${t}/${Math.floor(e.getRowForY(r))}/${n}`}function me(i,e){if(G(i))return null;const t=e.transform,s=i.getQuantizationTransform();if(G(s)){const[b,_]=t.scale,[I,v]=t.translate,x=-I/b,S=1/b,y=v/_,T=1/-_;return i.transform(x,y,S,T)}const[r,a]=s.scale,[n,o]=s.translate,[h,u]=t.scale,[c,l]=t.translate,g=r/h,d=(n-c)/h,p=a/u,f=(-o+l)/u;return i.transform(d,f,g,p)}class Rs extends qe{constructor(e){super(e),this.mode="snapshot",this._loading=!0,this._controller=new AbortController,this._downloadPromise=null,this._didSendEnd=!1,this._queries=new Array,this._invalidated=!1,this._hasAggregates=!1,this._random=new Mt(1e3),this._store=e.store,this._markedIdsBufId=this._store.storage.createBitset()}destroy(){super.destroy(),this._controller.abort()}get loading(){return this._loading}get _signal(){return this._controller.signal}update(e,t){super.update(e,t),this._hasAggregates=e.targets.aggregate}async resend(e=!1){if(await this._downloadPromise,this._invalidated||e){const s=Ue(this._schema.featureCount,"Expected featureCount to be defined");return this._invalidated=!1,this._subscriptions.forEach(r=>r.clear()),this._downloadPromise=this._download(s),void await this._downloadPromise}const t=this._queries.map(({query:s,reader:r})=>this._sendPatchQuery(s,r));await Promise.all(t),this._subscriptions.forEach(s=>{s.requests.done.forEach(r=>this._onMessage(r.message))})}async refresh(){await this.resend(!0)}async _sendPatchQuery(e,t){const s=m(e.outFields)?e.outFields:[],r=this._queryInfo.outFields,a=r.filter(u=>!s.includes(u));if(!a.length)return;const n=e.clone(),o=this._signal;n.returnGeometry=!1,n.returnCentroid=!1,n.outFields=a,e.outFields=r;const h=await this._queue.push({query:n,depth:0,signal:o});N({signal:o}),t.joinAttributes(h)}async _fetchDataTile(e){if(!this._downloadPromise){const h=Ue(this._schema.featureCount,"Expected featureCount to be defined");this._downloadPromise=this._download(h)}const t=this._store.search(e),s=this._subscriptions.get(e.key.id),r=t.length-1;for(let h=0;h<r;h++){const u=me(t[h],e),c={type:"append",id:e.id,addOrUpdate:u,end:!1,status:$.empty()};s.add({query:null,message:c}),this._hasAggregates||await tt(1),this._onMessage(c)}const a=me(r>=0?t[r]:null,e),n=this._didSendEnd,o={type:"append",id:e.id,addOrUpdate:a,end:n,status:$.empty()};s.add({query:null,message:o}),this._onMessage(o)}async _download(e){try{await this.whenInitialized();const t=this._store.storage.getBitset(this._markedIdsBufId),s=new Set;t.clear();const r=Math.ceil(e/this.pageSize),a=Array.from({length:r},(n,o)=>o).sort((n,o)=>this._random.getInt()-this._random.getInt()).map(n=>this._downloadPage(n,t,s));await Promise.all(a),this._store.sweepFeatures(t,this._store.storage),this._store.sweepFeatureSets(s)}catch(t){Ms.error("mapview-snapshot-source","Encountered and error when downloading feature snapshot",t)}this._sendEnd(),this._loading=!1}async _downloadPage(e,t,s){const r=this.pageSize,a={start:e*r,num:r,cacheHint:!0};m(this.maxRecordCountFactor)&&(a.maxRecordCountFactor=this.maxRecordCountFactor);const n=this.createQuery(a),o=this._signal,h=await this._queue.push({query:n,depth:e,signal:o});N({signal:o}),this._queries.push({query:n,reader:h}),this._store.insert(h),s.add(h.instance);const u=h.getCursor();for(;u.next();)t.set(u.getDisplayId());this._send(h)}_send(e){if(!this._subscriptions.size)return;let t=null;const s=new Map,r=new Set,a=new Map;this._subscriptions.forEach(n=>{var g;const o=n.tile;s.set(o.key.id,null),t=o.tileInfoView,r.add(o.level);const{row:h,col:u}=o.key,c=`${o.level}/${h}/${u}`,l=(g=a.get(c))!=null?g:[];l.push(n),a.set(c,l)});for(const n of r){const o=t.getLODInfoAt(n),h=e.getCursor();for(;h.next();){const u=ks(h,o,n),c=h.getIndex();if(a.has(u))for(const l of a.get(u)){const g=l.tile.id;let d=s.get(g);G(d)&&(d=[],s.set(g,d)),d.push(c)}}}s.forEach((n,o)=>{if(m(n)){const h=this._subscriptions.get(o),u={type:"append",id:o,addOrUpdate:me(Bt.from(e,n),h.tile),end:!1,status:$.empty()};h.add({query:null,message:u}),this._onMessage(u)}})}_sendEnd(){this._subscriptions.forEach(e=>{const t={type:"append",id:e.tile.id,addOrUpdate:null,end:!0,status:$.empty()};e.add({query:null,message:t}),this._onMessage(t)}),this._didSendEnd=!0}}function As(i,e,t,s,r,a){const n=Es(i,e,t,s,r,a);switch(n.type){case"feature":switch(n.origin){case"hosted":case"local":return new qs(n);case"snapshot":return new Rs(n);case"unknown":return new ms(n)}case"geoevent":return new Ts(n)}}function Es(i,e,t,s,r,a){switch(i.type){case"snapshot":return{type:"feature",origin:"snapshot",featureCount:We(i.featureCount,0),serviceInfo:i,onMessage:s,outSR:e,tileInfoView:t,canAcceptRequest:r,store:a};case"stream":return{type:"geoevent",serviceInfo:i,onMessage:s,outSR:e,canAcceptRequest:r};case"memory":case"on-demand":return{type:"feature",serviceInfo:i,onMessage:s,outSR:e,origin:n(i.source),tileInfoView:t,canAcceptRequest:r}}function n(o){return Array.isArray(o)?"local":"path"in o&&kt(o.path)?"hosted":"unknown"}}function Us(i,e){let t=-90,s=90,r=-180,a=180;for(let n=0;n<e;n++){const o=Math.ceil((n+1)/2),h=Math.floor((n+1)/2),u=1-n%2,c=30-(3*o+2*h),l=30-(2*o+3*h),g=3*u+2*(1-u),d=2*u+3*(1-u),p=3*u+7*(1-u)<<l,f=(7*u+3*(1-u)<<c&i.geohashX)>>c,b=(p&i.geohashY)>>l;for(let _=g-1;_>=0;_--){const I=(r+a)/2,v=f&1<<_?1:0;r=(1-v)*r+v*I,a=(1-v)*I+v*a}for(let _=d-1;_>=0;_--){const I=(t+s)/2,v=b&1<<_?1:0;t=(1-v)*t+v*I,s=(1-v)*I+v*s}}return[r,t,a,s]}function Fe(i,e,t,s){s%2&&(s+=1);let r=0,a=0,n=-90,o=90,h=-180,u=180;for(let c=0;c<s/2;c++){for(let l=0;l<5;l++){const g=(h+u)/2,d=t>g?1:0;r|=d<<29-(l+5*c),h=(1-d)*h+d*g,u=(1-d)*g+d*u}for(let l=0;l<5;l++){const g=(n+o)/2,d=e>g?1:0;a|=d<<29-(l+5*c),n=(1-d)*n+d*g,o=(1-d)*g+d*o}}i.geohashX=r,i.geohashY=a}function de(i,e,t,s,r){r%2&&(r+=1);let a=0,n=0,o=-90,h=90,u=-180,c=180;for(let l=0;l<r/2;l++){for(let g=0;g<5;g++){const d=(u+c)/2,p=s>d?1:0;a|=p<<29-(g+5*l),u=(1-p)*u+p*d,c=(1-p)*d+p*c}for(let g=0;g<5;g++){const d=(o+h)/2,p=t>d?1:0;n|=p<<29-(g+5*l),o=(1-p)*o+p*d,h=(1-p)*d+p*h}}i[2*e]=a,i[2*e+1]=n}class dt{constructor(e=[],t,s=8096){this.onRelease=r=>{},this._nodes=0,this._root=new Ie(this,0,0,0),this._statisticFields=e,this._pool=s?new ut(8096):null,this._serviceInfo=t}destroy(){this.clear()}_acquire(e,t,s){this._nodes++;let r=null;return m(this._pool)&&(r=this._pool.dequeue()),m(r)?r.realloc(e,t,s):r=new Ie(this,e,t,s),r}_release(e){this.onRelease(e),this._nodes--,m(this._pool)&&this._pool.enqueue(e)}get count(){return this._root.count}get size(){return this._nodes}get poolSize(){return st(this._pool,0,e=>e.size)}get depth(){let e=0;return this.forEach(t=>e=Math.max(e,t.depth)),e}dropLevels(e){this.forEach(t=>{if(t.depth>=e)for(let s=0;s<t.children.length;s++){const r=t.children[s];r&&this._release(r)}}),this.forEach(t=>{if(t.depth>=e)for(let s=0;s<t.children.length;s++)t.children[s]=null})}clear(){this.forEach(e=>this._release(e)),this._root=new Ie(this,0,0,0)}insert(e,t,s=0){const r=V.fromOptimizedFeatures([e],this._serviceInfo).getCursor();r.next();const a=r.readGeometry();if(!a)return;const[n,o]=a.coords,h=e.geohashX,u=e.geohashY;this.insertCursor(r,e.displayId,n,o,h,u,t,s)}insertCursor(e,t,s,r,a,n,o,h=0){let u=this._root,c=0,l=0,g=0;for(;u!==null;){if(u.depth>=h&&(u.count+=1,u.xTotal+=s,u.yTotal+=r,u.xGeohashTotal+=a,u.yGeohashTotal+=n,u.referenceId=t,this._updateStatisticsCursor(e,u,1)),c>=o)return void u.add(t);const d=Math.ceil((c+1)/2),p=Math.floor((c+1)/2),f=1-c%2,b=30-(3*d+2*p),_=30-(2*d+3*p),I=(a&7*f+3*(1-f)<<b)>>b,v=(n&3*f+7*(1-f)<<_)>>_,x=I+v*(8*f+4*(1-f));l=l<<3*f+2*(1-f)|I,g=g<<2*f+3*(1-f)|v,u.children[x]==null&&(u.children[x]=this._acquire(l,g,c+1)),c+=1,u=u.children[x]}}remove(e,t){const s=V.fromOptimizedFeatures([e],this._serviceInfo).getCursor();s.next();const r=s.readGeometry();if(!r)return;const[a,n]=r.coords,o=e.geohashX,h=e.geohashY;this.removeCursor(s,a,n,o,h,t)}removeCursor(e,t,s,r,a,n){let o=this._root,h=0;for(;o!==null;){if(o.count-=1,o.xTotal-=t,o.yTotal-=s,o.xGeohashTotal-=r,o.yGeohashTotal-=a,this._updateStatisticsCursor(e,o,-1),h>=n)return void o.remove(e.getDisplayId());const u=Math.ceil((h+1)/2),c=Math.floor((h+1)/2),l=1-h%2,g=30-(3*u+2*c),d=30-(2*u+3*c),p=((r&7*l+3*(1-l)<<g)>>g)+((a&3*l+7*(1-l)<<d)>>d)*(8*l+4*(1-l)),f=o.children[p];f.count===1&&(this._release(f),o.children[p]=null),h+=1,o=f}}forEach(e){let t=this._root;for(;t!==null;){const s=this._linkChildren(t)||t.next;e(t),t=s}}find(e,t,s){return this._root.find(e,t,s,0,0,0)}findIf(e){let t=null;return this.forEach(s=>{e(s)&&(t=s)}),t}findAllIf(e){const t=[];return this.forEach(s=>{e(s)&&t.push(s)}),t}findSingleOccupancyNode(e,t,s,r,a){let n=this._root;for(;n!==null;){const o=n.depth,h=n.xNode,u=n.yNode,c=1-o%2,l=n.xGeohashTotal/n.count,g=n.yGeohashTotal/n.count;if(n.count===1&&e<l&&l<=s&&t<g&&g<=r)return n;if(o>=a){n=n.next;continue}const d=Math.ceil((o+1)/2),p=Math.floor((o+1)/2),f=30-(3*d+2*p),b=30-(2*d+3*p),_=~((1<<f)-1),I=~((1<<b)-1),v=(e&_)>>f,x=(t&I)>>b,S=(s&_)>>f,y=(r&I)>>b,T=h<<3*c+2*(1-c),M=u<<2*c+3*(1-c),w=T+8*c+4*(1-c),q=M+4*c+8*(1-c),F=Math.max(T,v),O=Math.max(M,x),L=Math.min(w,S),A=Math.min(q,y);let k=null,E=null;for(let U=O;U<=A;U++)for(let R=F;R<=L;R++){const C=R-T+(U-M)*(8*c+4*(1-c)),P=n.children[C];P&&(k||(k=P,k.next=n.next),E&&(E.next=P),E=P,P.next=n.next)}n=k||n.next}return null}getRegionDisplayIds(e,t,s,r,a){let n=this._root;const o=[];for(;n!==null;){const h=n.depth,u=n.xNode,c=n.yNode;if(h>=a){const E=n.xGeohashTotal/n.count,U=n.yGeohashTotal/n.count;e<=E&&E<=s&&t<=U&&U<=r&&n.displayIds.forEach(R=>o.push(R)),n=n.next;continue}const l=Math.ceil((h+1)/2),g=Math.floor((h+1)/2),d=1-h%2,p=30-(3*l+2*g),f=30-(2*l+3*g),b=~((1<<p)-1),_=~((1<<f)-1),I=(e&b)>>p,v=(t&_)>>f,x=(s&b)>>p,S=(r&_)>>f,y=u<<3*d+2*(1-d),T=c<<2*d+3*(1-d),M=y+8*d+4*(1-d),w=T+4*d+8*(1-d),q=Math.max(y,I),F=Math.max(T,v),O=Math.min(M,x),L=Math.min(w,S);let A=null,k=null;for(let E=F;E<=L;E++)for(let U=q;U<=O;U++){const R=U-y+(E-T)*(8*d+4*(1-d)),C=n.children[R];C&&(A||(A=C,A.next=n.next),k&&(k.next=C),k=C,C.next=n.next)}n=A||n.next}return o}getRegionStatistics(e,t,s,r,a){let n=this._root,o=0,h=0,u=0;const c={};let l=0;for(;n!==null;){const g=n.depth,d=n.xNode,p=n.yNode;if(g>=a){const P=n.xGeohashTotal/n.count,H=n.yGeohashTotal/n.count;e<P&&P<=s&&t<H&&H<=r&&(o+=n.count,h+=n.xTotal,u+=n.yTotal,n.count===1&&(l=n.referenceId),this._aggregateStatistics(c,n.statistics)),n=n.next;continue}const f=Math.ceil((g+1)/2),b=Math.floor((g+1)/2),_=1-g%2,I=30-(3*f+2*b),v=30-(2*f+3*b),x=~((1<<I)-1),S=~((1<<v)-1),y=(e&x)>>I,T=(t&S)>>v,M=(s&x)>>I,w=(r&S)>>v,q=d<<3*_+2*(1-_),F=p<<2*_+3*(1-_),O=q+8*_+4*(1-_),L=F+4*_+8*(1-_),A=Math.max(q,y),k=Math.max(F,T),E=Math.min(O,M),U=Math.min(L,w);let R=null,C=null;for(let P=k;P<=U;P++)for(let H=A;H<=E;H++){const lt=H-q+(P-F)*(8*_+4*(1-_)),B=n.children[lt];if(B){if(P!==k&&P!==U&&H!==A&&H!==E){const ke=B.xGeohashTotal/B.count,Re=B.yGeohashTotal/B.count;e<ke&&ke<=s&&t<Re&&Re<=r&&(o+=B.count,h+=B.xTotal,u+=B.yTotal,n.count===1&&(l=n.referenceId),this._aggregateStatistics(c,B.statistics));continue}R||(R=B,R.next=n.next),C&&(C.next=B),C=B,B.next=n.next}}n=R||n.next}return{count:o,attributes:this.normalizeStatistics(c,o),xTotal:h,yTotal:u,referenceId:l}}getBins(e,t,s,r,a){const n=[];let o=this._root;for(;o!==null;){const h=o.depth,u=o.xNode,c=o.yNode;if(h>=a){n.push(o),o=o.next;continue}const l=Math.ceil((h+1)/2),g=Math.floor((h+1)/2),d=1-h%2,p=30-(3*l+2*g),f=30-(2*l+3*g),b=~((1<<p)-1),_=~((1<<f)-1),I=(e&b)>>p,v=(t&_)>>f,x=(s&b)>>p,S=(r&_)>>f,y=u<<3*d+2*(1-d),T=c<<2*d+3*(1-d),M=y+8*d+4*(1-d),w=T+4*d+8*(1-d),q=Math.max(y,I),F=Math.max(T,v),O=Math.min(M,x),L=Math.min(w,S);let A=null,k=null;for(let E=F;E<=L;E++)for(let U=q;U<=O;U++){const R=U-y+(E-T)*(8*d+4*(1-d)),C=o.children[R];C&&(A||(A=C,A.next=o.next),k&&(k.next=C),k=C,C.next=o.next)}o=A||o.next}return n}_linkChildren(e){let t=null,s=null;for(let r=0;r<=e.children.length;r++){const a=e.children[r];a&&(t||(t=a,t.next=e.next),s&&(s.next=a),s=a,a.next=e.next)}return t}_updateStatisticsCursor(e,t,s){for(const r of this._statisticFields){const a=r.name,n=r.inField?e.readAttribute(r.inField):e.getComputedNumericAtIndex(r.inFieldIndex);switch(r.statisticType){case"norm":{t.statistics[a]||(t.statistics[a]={});const o=r.inNormalizationField,h=e.readAttribute(o),u=t.statistics[a].onStatisticField||0,c=t.statistics[a].onStatisticNormalizationField||0;n==null||isNaN(n)||h==null||h===0||isNaN(h)||(t.statistics[a].onStatisticField=u+s*n,t.statistics[a].onStatisticNormalizationField=c+s*h);break}case"sum":case"avg":{t.statistics[a]||(t.statistics[a]={value:0,nanCount:0});const o=t.statistics[a].value,h=t.statistics[a].nanCount;n==null||isNaN(n)?t.statistics[a].nanCount=h+s:t.statistics[a].value=o+s*n;break}case"avg_angle":{t.statistics[a]||(t.statistics[a]={x:0,y:0,nanCount:0});const o=t.statistics[a].x,h=t.statistics[a].y,u=t.statistics[a].nanCount,c=Math.PI/180;n==null||isNaN(n)?t.statistics[a].nanCount=u+s:(t.statistics[a].x=o+s*Math.cos(n*c),t.statistics[a].y=h+s*Math.sin(n*c));break}case"mode":{t.statistics[a]||(t.statistics[a]={});const o=t.statistics[a][n]||0;t.statistics[a][n]=o+s;break}}}}_aggregateStatistics(e,t){for(const s of this._statisticFields){const r=s.name;switch(s.statisticType){case"sum":case"avg":case"avg_angle":case"mode":case"norm":e[r]||(e[r]={});for(const a in t[r]){const n=e[r][a]||0;e[r][a]=n+t[r][a]}}}}normalizeStatistics(e,t){const s={};for(const r of this._statisticFields){const a=r.name;switch(r.statisticType){case"norm":{const n=e[a];if(t&&n.onStatisticNormalizationField==null)break;if(t&&n.onStatisticNormalizationField){s[a]=n.onStatisticField/n.onStatisticNormalizationField;break}s[a]=0;break}case"sum":{if(!t)break;const{value:n,nanCount:o}=e[a];if(!(t-o))break;s[a]=n;break}case"avg":{if(!t)break;const{value:n,nanCount:o}=e[a];if(!(t-o))break;s[a]=n/(t-o);break}case"avg_angle":{if(!t)break;const{x:n,y:o,nanCount:h}=e[a];if(!(t-h))break;const u=n/(t-h),c=o/(t-h),l=180/Math.PI,g=Math.atan2(c,u)*l;s[a]=g;break}case"mode":{const n=e[a];let o=0,h=null;for(const u in n){const c=n[u];c>o&&(o=c,h=u)}s[a]=h==="null"?null:h;break}}}return s}}class Ie{constructor(e,t,s,r){this.count=0,this.xTotal=0,this.yTotal=0,this.statistics={},this.displayId=0,this.referenceId=0,this.displayIds=new Set,this.next=null,this.depth=0,this.xNode=0,this.yNode=0,this.xGeohashTotal=0,this.yGeohashTotal=0,this._tree=e,this.children=new Array(32);for(let a=0;a<this.children.length;a++)this.children[a]=null;this.xNode=t,this.yNode=s,this.depth=r}realloc(e,t,s){for(let r=0;r<this.children.length;r++)this.children[r]=null;return this.xNode=e,this.yNode=t,this.depth=s,this.next=null,this.xGeohashTotal=0,this.yGeohashTotal=0,this.displayId=0,this.referenceId=0,this.xTotal=0,this.yTotal=0,this.count=0,this.statistics={},this.displayIds.clear(),this}get id(){return`${this.xNode}.${this.yNode}`}add(e){this.displayIds.add(e)}remove(e){this.displayIds.delete(e)}getAttributes(){const e=this._tree.normalizeStatistics(this.statistics,this.count);return e.aggregateId=this.id,e.aggregateCount=this.count,e}getGeometry(e,t){const s=this.getLngLatBounds(),[r,a,n,o]=s,h=se({rings:[[[r,a],[r,o],[n,o],[n,a],[r,a]]]},J.WGS84,e),u=rt(new Y,h,!1,!1);return m(t)?Je(new Y,u,!1,!1,"esriGeometryPolygon",t,!1,!1):u}getLngLatBounds(){const e=this.depth,t=Math.ceil(e/2),s=Math.floor(e/2),r=30-(3*t+2*s),a=30-(2*t+3*s),n=this.xNode<<r,o=this.yNode<<a;return Us({geohashX:n,geohashY:o},this.depth)}find(e,t,s,r,a,n){if(r>=s)return this;const o=1-r%2,h=3*o+2*(1-o),u=2*o+3*(1-o),c=30-a-h,l=30-n-u,g=((e&7*o+3*(1-o)<<c)>>c)+((t&3*o+7*(1-o)<<l)>>l)*(8*o+4*(1-o)),d=this.children[g];return d==null?null:d.find(e,t,s,r+1,a+h,n+u)}}const ve=ie.getLogger("esri.view.2d.layers.features.support.BinStore"),Qe=12,Gs=64,Ls=5;function je(i){return 57.29577951308232*i}class Os extends ht{constructor(e,t,s,r){super(e,s),this._geohashLevel=Ls,this._geohashBuf=[],this._serviceInfo=r,this.geometryInfo=e.geometryInfo,this._spatialReference=t,this._projectionSupportCheck=it(t,J.WGS84),this._bitsets.geohash=s.getBitset(s.createBitset()),this._bitsets.inserted=s.getBitset(s.createBitset())}destroy(){this._tree&&this._tree.destroy()}async updateSchema(e,t){const s=this._schema;try{await super.updateSchema(e,t),await this._projectionSupportCheck}catch{}const r=he(s,t);t&&(!G(r)||e.source||e.storage.filters)?((ue(r,"params.fields")||ue(r,"params")||!this._tree||e.source)&&(this._tree&&this._tree.destroy(),this._tree=new dt(this._statisticFields,this._serviceInfo),this._tree.onRelease=a=>a.displayId&&this._storage.releaseDisplayId(a.displayId),this._geohashLevel=this._schema.params.fixedBinLevel,this._rebuildTree(),D("esri-2d-update-debug")&&ve.info("Aggregate mesh needs update due to tree changing")),D("esri-2d-update-debug")&&ve.info("Aggregate mesh needs update due to tree changing"),e.targets[t.name]=!0,e.mesh=!1):s&&(e.mesh=!0)}clear(){this._rebuildTree()}sweepFeatures(e,t){this._bitsets.inserted.forEachSet(s=>{if(!e.has(s)){const r=t.lookupByDisplayIdUnsafe(s);this._remove(r)}})}sweepAggregates(e,t,s){}onTileData(e,t,s,r,a=!0){if(!this._schema||G(t.addOrUpdate))return t;const n=this._getTransforms(e,this._spatialReference);{const h=t.addOrUpdate.getCursor();for(;h.next();)this._update(h,r)}if(t.status.mesh||!a)return t;const o=new Array;this._getBinsForTile(o,e,n,s),t.addOrUpdate=V.fromOptimizedFeatures(o,{...this._serviceInfo,geometryType:"esriGeometryPolygon"}),t.addOrUpdate.attachStorage(s),t.clear=!0,t.end=!0;{const h=t.addOrUpdate.getCursor();for(;h.next();){const u=h.getDisplayId();this._bitsets.computed.unset(u),this.setComputedAttributes(s,h,u,e.scale)}}return t}forEach(e){this._tree.forEach(e)}onTileUpdate(e){}getAggregate(e){const t=Yt(e,!0),s=this._tree.findIf(r=>r.displayId===t);return re(s,r=>this._toAggregateGraphic(r))}getAggregates(){return this._tree.findAllIf(e=>e.depth===this._geohashLevel).map(this._toAggregateGraphic.bind(this))}getDisplayId(e){const t=this._tree.findIf(s=>s.id===e);return re(t,s=>s.displayId)}getFeatureDisplayIdsForAggregate(e){const t=this._tree.findIf(s=>s.id===e);return st(t,[],s=>Array.from(s.displayIds))}getDisplayIdForReferenceId(e){const t=this._tree.findIf(s=>s.displayIds.size===1&&s.displayIds.has(e));return re(t,s=>s.displayId)}_toAggregateGraphic(e){const t=this._spatialReference;return{referenceId:null,objectId:e.id,displayId:e.displayId,attributes:e.getAttributes(),geometry:Ce(e.getGeometry(t),"esriGeometryPolygon",!1,!1),centroid:null}}_rebuildTree(){this._bitsets.computed.clear(),this._bitsets.inserted.clear(),this._tree&&this._tree.clear()}_remove(e){const t=e.getDisplayId(),s=e.getXHydrated(),r=e.getYHydrated(),a=this._geohashBuf[2*t],n=this._geohashBuf[2*t+1];this._bitsets.inserted.has(t)&&(this._bitsets.inserted.unset(t),this._tree.removeCursor(e,s,r,a,n,this._geohashLevel))}_update(e,t){const s=e.getDisplayId(),r=this._bitsets.inserted,a=t.isVisible(s);if(a===r.has(s))return;if(!a)return void this._remove(e);const n=e.getXHydrated(),o=e.getYHydrated();if(!this._setGeohash(s,n,o))return;const h=this._geohashBuf[2*s],u=this._geohashBuf[2*s+1];this._tree.insertCursor(e,s,n,o,h,u,this._geohashLevel),r.set(s)}_setGeohash(e,t,s){if(this._bitsets.geohash.has(e))return!0;const r=this._geohashBuf;if(this._spatialReference.isWebMercator){const a=je(t/W.radius),n=a-360*Math.floor((a+180)/360),o=je(Math.PI/2-2*Math.atan(Math.exp(-s/W.radius)));de(r,e,o,n,Qe)}else{const a=se({x:t,y:s},this._spatialReference,J.WGS84);if(!a)return!1;de(r,e,a.y,a.x,Qe)}return this._bitsets.geohash.set(e),!0}_getBinsForTile(e,t,s,r){try{const{xLL:a,yLL:n,xTR:o,yTR:h,level:u}=this._getGeohashBounds(t),c=this._tree.getBins(a,n,o,h,u);for(const l of c){l.displayId||(l.displayId=r.createDisplayId(!0));const g=l.getGeometry(this._spatialReference,s.tile),d=new Te(g,l.getAttributes());d.objectId=l.id,d.displayId=l.displayId,e.push(d)}}catch{return void ve.error("Unable to get bins for tile",t.key.id)}}_getGeohash(e,t,s){const r={geohashX:0,geohashY:0};return Fe(r,t,e,s),r}_getGeohashBounds(e){const t=this._getGeohashLevel(e.key.level),s=[e.extent.xmin,e.extent.ymin,e.extent.xmax,e.extent.ymax],r=Rt.fromExtent(At.fromBounds(s,this._spatialReference)),a=se(r,this._spatialReference,J.WGS84,{densificationStep:e.resolution*Gs}),n=rt(new Y,a,!1,!1),o=n.coords.filter((f,b)=>!(b%2)),h=n.coords.filter((f,b)=>b%2),u=Math.min(...o),c=Math.min(...h),l=Math.max(...o),g=Math.max(...h),d=this._getGeohash(u,c,t),p=this._getGeohash(l,g,t);return{xLL:d.geohashX,yLL:d.geohashY,xTR:p.geohashX,yTR:p.geohashY,level:t}}_getGeohashLevel(e){return this._schema.params.fixedBinLevel}_getTransforms(e,t){const s={originPosition:"upperLeft",scale:[e.resolution,e.resolution],translate:[e.bounds[0],e.bounds[3]]},r=at(t);if(!r)return{tile:s,left:null,right:null};const[a,n]=r.valid;return{tile:s,left:{...s,translate:[n,e.bounds[3]]},right:{...s,translate:[a-n+e.bounds[0],e.bounds[3]]}}}}const be=12,Ve=1;class Me extends Et{constructor(e,t,s,r,a){super(new Y([],[t,s]),r,null,e),this.geohashBoundsInfo=a}get count(){return this.attributes.cluster_count}static create(e,t,s,r,a,n,o,h){const u=new Me(t,s,r,n,o);return u.displayId=e.createDisplayId(!0),u.referenceId=h,u.tileLevel=a,u}update(e,t,s,r,a,n){return this.geometry.coords[0]=e,this.geometry.coords[1]=t,this.tileLevel=s,this.attributes=r,this.geohashBoundsInfo=a,this.referenceId=null,this.referenceId=n,this}toJSON(){return{objectId:this.objectId,referenceId:this.attributes.cluster_count===1?this.referenceId:null,attributes:{...this.attributes,clusterId:this.objectId},geometry:{x:this.geometry.coords[0],y:this.geometry.coords[1]}}}}function te(i){return 57.29577951308232*i}class Ps extends ht{constructor(e,t,s,r){super(e,s),this.events=new Ze,this._geohashLevel=0,this._tileLevel=0,this._aggregateValueRanges={},this._aggregateValueRangesChanged=!1,this._geohashBuf=[],this._clusters=new Map,this._tiles=new Map,this._serviceInfo=r,this.geometryInfo=e.geometryInfo,this._spatialReference=t,this._projectionSupportCheck=it(t,J.WGS84),this._bitsets.geohash=s.getBitset(s.createBitset()),this._bitsets.inserted=s.getBitset(s.createBitset())}destroy(){this._tree.destroy()}async updateSchema(e,t){const s=this._schema;try{await super.updateSchema(e,t),await this._projectionSupportCheck}catch{}const r=he(s,t);t&&(!G(r)||e.source||e.storage.filters)?((ue(r,"params.fields")||!this._tree||e.source)&&(this._tree&&this._tree.destroy(),this._tree=new dt(this._statisticFields,this._serviceInfo),this._rebuildTree(),D("esri-2d-update-debug")&&console.debug("Aggregate mesh needs update due to tree changing")),D("esri-2d-update-debug")&&console.debug("Applying Update - ClusterStore:",r),e.targets[t.name]=!0,e.mesh=!1,this._aggregateValueRanges={}):s&&(e.mesh=!0)}clear(){this._rebuildTree()}sweepFeatures(e,t){this._bitsets.inserted.forEachSet(s=>{if(!e.has(s)){const r=t.lookupByDisplayIdUnsafe(s);this._remove(r)}})}sweepAggregates(e,t,s){this._clusters.forEach((r,a)=>{r&&r.tileLevel!==s&&(e.releaseDisplayId(r.displayId),t.unsetAttributeData(r.displayId),this._clusters.delete(a))})}onTileData(e,t,s,r,a=!0){if(!this._schema||G(t.addOrUpdate))return t;const n=this._getTransforms(e,this._spatialReference);{const u=t.addOrUpdate.getCursor();for(;u.next();)this._update(u,r)}if(t.status.mesh||!a)return t;const o=new Array,h=this._schema.params.clusterRadius;this._getClustersForTile(o,e,h,s,n),t.addOrUpdate=V.fromOptimizedFeatures(o,this._serviceInfo),t.addOrUpdate.attachStorage(s),t.clear=!0,t.end=!0;{const u=t.addOrUpdate.getCursor();for(;u.next();){const c=u.getDisplayId();this._bitsets.computed.unset(c),this.setComputedAttributes(s,u,c,e.scale)}}return this._aggregateValueRangesChanged&&t.end&&(this.events.emit("valueRangesChanged",{valueRanges:this._aggregateValueRanges}),this._aggregateValueRangesChanged=!1),t}onTileUpdate({added:e,removed:t}){if(e.length){const r=e[0].level;this._tileLevel=r,this._setGeohashLevel(r)}if(!this._schema)return;const s=this._schema.params.clusterRadius;t.forEach(r=>{this._tiles.delete(r.key.id),this._markTileClustersForDeletion(r,s)})}getAggregate(e){for(const t of this._clusters.values())if(((t==null?void 0:t.displayId)&Oe)==(e&Oe))return t.toJSON();return null}getAggregates(){const e=[];for(const t of this._clusters.values())(t==null?void 0:t.tileLevel)===this._tileLevel&&e.push(t.toJSON());return e}getDisplayId(e){const t=this._clusters.get(e);return t?t.displayId:null}getFeatureDisplayIdsForAggregate(e){const t=this._clusters.get(e);if(!t)return[];const s=t.geohashBoundsInfo;return this._tree.getRegionDisplayIds(s.xLL,s.yLL,s.xTR,s.yTR,s.level)}getDisplayIdForReferenceId(e){for(const t of this._clusters.values())if((t==null?void 0:t.referenceId)===e)return t.displayId;return null}getAggregateValueRanges(){return this._aggregateValueRanges}forEach(e){for(const[t,s]of this._clusters)s&&e(s,t)}size(){let e=0;return this.forEach(t=>e++),e}_rebuildTree(){this._bitsets.computed.clear(),this._bitsets.inserted.clear(),this._tree&&this._tree.clear()}_remove(e){const t=e.getDisplayId(),s=e.getXHydrated(),r=e.getYHydrated(),a=this._geohashBuf[2*t],n=this._geohashBuf[2*t+1];this._bitsets.inserted.has(t)&&(this._bitsets.inserted.unset(t),this._tree.removeCursor(e,s,r,a,n,this._geohashLevel))}_update(e,t){const s=e.getDisplayId(),r=this._bitsets.inserted,a=t.isVisible(s);if(a===r.has(s))return;if(!a)return void this._remove(e);const n=e.getXHydrated(),o=e.getYHydrated();if(!this._setGeohash(s,n,o))return;const h=this._geohashBuf[2*s],u=this._geohashBuf[2*s+1];this._tree.insertCursor(e,s,n,o,h,u,this._geohashLevel),r.set(s)}_setGeohash(e,t,s){if(this._bitsets.geohash.has(e))return!0;const r=this._geohashBuf;if(this._spatialReference.isWebMercator){const a=te(t/W.radius),n=a-360*Math.floor((a+180)/360),o=te(Math.PI/2-2*Math.atan(Math.exp(-s/W.radius)));de(r,e,o,n,be)}else{const a=se({x:t,y:s},this._spatialReference,J.WGS84);if(!a)return!1;de(r,e,a.y,a.x,be)}return this._bitsets.geohash.set(e),!0}_getClustersForTile(e,t,s,r,a,n=!0){const o=this._schema.params.clusterPixelBuffer,h=2*s,u=this._getGeohashLevel(t.key.level),c=Math.ceil(2**t.key.level*Q/h),l=Math.ceil(o/h)+0,g=Math.ceil(Q/h),{row:d,col:p}=t.key,f=p*Q,b=d*Q,_=Math.floor(f/h)-l,I=Math.floor(b/h)-l,v=_+g+2*l,x=I+g+2*l,S=t.tileInfoView.getLODInfoAt(t.key.level);for(let y=_;y<=v;y++)for(let T=I;T<=x;T++){let M=y;S.wrap&&(M=y<0?y+c:y%c);const w=S.wrap&&y<0,q=S.wrap&&y%c!==y,F=this._lookupCluster(r,S,t.key.level,M,T,u);if(m(F)){const O=re(a,L=>w?L.left:q?L.right:L.tile);if(n&&G(O)||!F.count)continue;if(m(O)&&n){const L=F.geometry.clone();let A=F.attributes;L.coords[0]=Ke(O,L.coords[0]),L.coords[1]=et(O,L.coords[1]),F.count===1&&m(F.referenceId)&&(A={...F.attributes,referenceId:F.referenceId});const k=new Te(L,A);k.displayId=F.displayId,e.push(k)}}}}_getGeohashLevel(e){return Math.min(Math.ceil(e/2+2),be)}_setGeohashLevel(e){const t=this._getGeohashLevel(e),s=(Math.floor(t/Ve)+1)*Ve-1;if(this._geohashLevel!==s)return this._geohashLevel=s,this._rebuildTree(),void this._bitsets.geohash.clear()}_getTransforms(e,t){const s={originPosition:"upperLeft",scale:[e.resolution,e.resolution],translate:[e.bounds[0],e.bounds[3]]},r=at(t);if(!r)return{tile:s,left:null,right:null};const[a,n]=r.valid;return{tile:s,left:{...s,translate:[n,e.bounds[3]]},right:{...s,translate:[a-n+e.bounds[0],e.bounds[3]]}}}_getClusterId(e,t,s){return(15&e)<<28|(16383&t)<<14|16383&s}_markForDeletion(e,t,s){const r=this._getClusterId(e,t,s);this._clusters.delete(r)}_getClusterBounds(e,t,s){const r=this._schema.params.clusterRadius,a=2*r;let n=s%2?t*a:t*a-r;const o=s*a;let h=n+a;const u=o-a,c=2**e.level*Q;e.wrap&&n<0&&(n=0),e.wrap&&h>c&&(h=c);const l=n/Q,g=o/Q,d=h/Q,p=u/Q;return[e.getXForColumn(l),e.getYForRow(g),e.getXForColumn(d),e.getYForRow(p)]}_lookupCluster(e,t,s,r,a,n){const o=this._getClusterId(s,r,a),h=this._clusters.get(o),[u,c,l,g]=this._getClusterBounds(t,r,a),d={x:u,y:c},p={x:l,y:g};let f=0,b=0,_=0,I=0;if(this._spatialReference.isWebMercator){{const C=te(d.x/W.radius);f=C-360*Math.floor((C+180)/360),b=te(Math.PI/2-2*Math.atan(Math.exp(-d.y/W.radius)))}{const C=te(p.x/W.radius);_=C-360*Math.floor((C+180)/360),I=te(Math.PI/2-2*Math.atan(Math.exp(-p.y/W.radius)))}}else{const C=se(d,this._spatialReference,J.WGS84),P=se(p,this._spatialReference,J.WGS84);if(!C||!P)return null;f=C.x,b=C.y,_=P.x,I=P.y}const v={geohashX:0,geohashY:0},x={geohashX:0,geohashY:0};Fe(v,b,f,n),Fe(x,I,_,n);const S=v.geohashX,y=v.geohashY,T=x.geohashX,M=x.geohashY,w={xLL:S,yLL:y,xTR:T,yTR:M,level:n},q=this._tree.getRegionStatistics(S,y,T,M,n),{count:F,xTotal:O,yTotal:L,referenceId:A}=q,k=F?O/F:0,E=F?L/F:0;if(F===0)return this._clusters.set(o,null),null;const U={cluster_count:F,...q.attributes},R=m(h)?h.update(k,E,s,U,w,A):Me.create(e,o,k,E,s,U,w,A);return F===0&&(R.geometry.coords[0]=(u+l)/2,R.geometry.coords[1]=(c+g)/2),this._clusters.set(o,R),this._updateAggregateValueRangeForCluster(R,R.tileLevel),R}_updateAggregateValueRangeForCluster(e,t){const s=this._aggregateValueRanges[t]||{minValue:1/0,maxValue:0},r=s.minValue,a=s.maxValue;s.minValue=Math.min(r,e.count),s.maxValue=Math.max(a,e.count),this._aggregateValueRanges[t]=s,r===s.minValue&&a===s.maxValue||(this._aggregateValueRangesChanged=!0)}_markTileClustersForDeletion(e,t){const s=2*t,r=Math.ceil(Q/s),{row:a,col:n}=e.key,o=n*Q,h=a*Q,u=Math.floor(o/s),c=Math.floor(h/s);for(let l=u;l<u+r;l++)for(let g=c;g<c+r;g++)this._markForDeletion(e.key.level,l,g)}}const Ds=5e3,$s="tileRenderer.featuresView.attributeView.initialize",zs="tileRenderer.featuresView.attributeView.requestUpdate",Bs="tileRenderer.featuresView.requestRender";function Ns(i){return i.name==="worker:port-closed"}function Z(i){if(!ge(i)&&!Ns(i))throw i}function Xe(i){return i.type==="feature"&&i.mode==="snapshot"}let X=class extends ot{constructor(){super(...arguments),this._storage=new Qt,this._markedIdsBufId=this._storage.createBitset(),this._lastCleanup=performance.now(),this._cleanupNeeded=!1,this._invalidated=!1,this._tileToResolver=new Map,this._didEdit=!1,this._updateVersion=1,this.tileStore=null,this.config=null,this.processor=null,this.remoteClient=null,this.service=null}initialize(){this._initStores(),this._initSource(),this._updateQueue=new xe({concurrency:this._source.type==="geoevent"?1:4,process:(i,e)=>this._onTileMessage(i,{signal:e})}),this.handles.add([this.tileStore.on("update",this.onTileUpdate.bind(this)),Ut(()=>!this.updating,()=>this.onIdle())]),this._checkUpdating=setInterval(()=>this.notifyChange("updating"),300)}_initSource(){const i=this.tileStore.tileScheme,e=()=>this._updateQueue.length<50,t=(s,r)=>(this._invalidated=!0,this._patchTile(s,r));this._source=As(this.service,this.spatialReference,i,t,e,this.featureStore),this._proxyEvents()}_proxyEvents(){if(this._source.type==="geoevent"){const i=this._source.events;this.handles.add([i.on("connectionStatus",e=>this.remoteClient.invoke("setProperty",{propertyName:"connectionStatus",value:e}).catch(Z)),i.on("errorString",e=>this.remoteClient.invoke("setProperty",{propertyName:"errorString",value:e}).catch(Z)),i.on("feature",e=>this.remoteClient.invoke("emitEvent",{name:"data-received",event:{attributes:e.attributes,centroid:e.centroid,geometry:e.geometry}}).catch(Z)),i.on("updateRate",e=>this.remoteClient.invoke("emitEvent",{name:"update-rate",event:{...e}}).catch(Z))])}}_initAttributeStore(i){this.attributeStore?this.attributeStore.invalidateResources():this.attributeStore=new jt({type:"remote",initialize:(e,t)=>ne(this.remoteClient.invoke($s,e,{signal:t}).catch(Z)),update:(e,t)=>ne(this.remoteClient.invoke(zs,e,{signal:t}).catch(Z)),render:e=>ne(this.remoteClient.invoke(Bs,void 0,{signal:e}).catch(Z))},i,()=>this.notifyChange("updating"))}_initStores(){const i=this.service.type==="snapshot"?"snapshot":"on-demand",e={geometryInfo:{geometryType:this.service.geometryType,hasM:!1,hasZ:!1},spatialReference:this.spatialReference,fieldsIndex:this.fieldsIndex,fields:this.service.fields};this.featureStore=new Nt(e,this._storage,i)}_initQueryEngine(i){var t;const e=this;(t=this.queryEngine)==null||t.destroy(),this.queryEngine=new zt({definitionExpression:i.schema.source.definitionExpression,fields:this.service.fields,geometryType:this.service.geometryType,objectIdField:this.service.objectIdField,hasM:!1,hasZ:!1,spatialReference:this.spatialReference.toJSON(),cacheSpatialQueries:!0,featureStore:this.featureStore,aggregateAdapter:{getFeatureObjectIds(s){return G(e.aggregateStore)?[]:e.aggregateStore.getFeatureDisplayIdsForAggregate(s).map(r=>e.getObjectId(r))}},timeInfo:this.service.timeInfo})}destroy(){this._updateQueue.destroy(),this._source.destroy(),this.queryEngine.destroy(),this.attributeStore&&this.attributeStore.destroy();for(const i of this.tileStore.tiles)this._source.unsubscribe(i);clearInterval(this._checkUpdating)}get fieldsIndex(){return new Gt(this.service.fields)}get spatialReference(){return this.tileStore.tileScheme.spatialReference}get updating(){return this.isUpdating()}isUpdating(){const i=this._source.updating,e=!!this._updateQueue.length,t=!this.attributeStore||this.attributeStore.isUpdating(),s=i||e||t;return D("esri-2d-log-updating")&&console.log(`Updating FeatureController2D: ${s}
  -> updatingSource ${i}
  -> updateQueue ${e}
  -> updatingAttributeStore ${t}
`),s}enableEvent(i){this._source.enableEvent(i.name,i.value)}pause(){this._updateQueue.pause(),this._updateQueue.clear()}resume(){this._updateQueue.resume()}pauseStream(){this._source.type==="geoevent"&&this._source.pauseStream()}resumeStream(){this._source.type==="geoevent"&&this._source.resumeStream()}_initAggregateStore(i){var r,a;const e={geometryInfo:{geometryType:this.service.geometryType,hasM:!1,hasZ:!1},spatialReference:this.spatialReference,fieldsIndex:this.fieldsIndex,fields:this.service.fields},t=(a=(r=i.schema.targets)==null?void 0:r.aggregate)==null?void 0:a.type;if(re(this.config,n=>{var o,h;return(h=(o=n.schema.targets)==null?void 0:o.aggregate)==null?void 0:h.type})!==t&&(m(this.aggregateStore)&&(this.handles.remove("valueRangesChanged"),this.aggregateStore.destroy(),this.aggregateStore=null),t)){switch(t){case"cluster":this.aggregateStore=new Ps(e,this.spatialReference,this._storage,this.service),this.handles.add(this.aggregateStore.events.on("valueRangesChanged",n=>{this.remoteClient.invoke("emitEvent",{name:"valueRangesChanged",event:{valueRanges:n.valueRanges}}).catch(Z)}),"valueRangesChanged");break;case"bin":this.aggregateStore=new Os(e,this.spatialReference,this._storage,this.service)}this.aggregateStore.onTileUpdate({added:this.tileStore.tiles,removed:[]})}}async update(i,e){this._updateVersion++,this._initQueryEngine(e),this._initAttributeStore(e),this.pause(),await Promise.all([this._source.update(i,e.schema.source),this.featureStore.updateSchema(i,e.schema.targets.feature),this.attributeStore.update(i,e),this.attributeStore.updateFilters(i,e,this)]),this._initAggregateStore(e),m(this.aggregateStore)&&await this.aggregateStore.updateSchema(i,e.schema.targets.aggregate),D("esri-2d-update-debug")&&i.describe(),this._set("config",e)}async applyUpdate(i){i.version=this._updateVersion,D("esri-2d-update-debug")&&console.debug(`Applying update ${i.version}`),i.mesh&&this.clearTiles(),this._updateQueue.resume(),await this._source.applyUpdate(i),this.notifyChange("updating"),await ae(()=>!this.updating),m(this.aggregateStore)&&(await tt(10),await ae(()=>!this.updating))}async onEdits({edits:i}){D("esri-2d-update-debug")&&console.debug("Applying Edit:",i),this._didEdit=!0;try{const e=i.removed.map(s=>s.objectId&&s.objectId!==-1?s.objectId:this._lookupObjectIdByGlobalId(s.globalId)),t=i.addOrModified.map(({objectId:s})=>s);this.featureStore.invalidate(),await this._source.edit(t,e),this.clearTiles(),this.notifyChange("updating"),m(this.aggregateStore)&&this.aggregateStore.clear(),await this._source.resend(),await ae(()=>!this.updating)}catch{}}async refresh(i){if(!i){const e=$.empty();return e.storage.filters=!0,this.applyUpdate(e)}this.featureStore.invalidate(),this.clearTiles(),this._source.refresh(this._updateVersion),this._cleanupNeeded=!0,this.notifyChange("updating"),await ae(()=>!this.updating)}clearTiles(){for(const i of this.tileStore.tiles)this.processor.onTileClear(i)}onTileUpdate(i){m(this.aggregateStore)&&this.aggregateStore.onTileUpdate(i);for(const e of i.added)this._source.subscribe(e,this._updateVersion),this._level=e.level;for(const e of i.removed)this._source.unsubscribe(e),this._cleanupNeeded=!0,this._tileToResolver.has(e.id)&&(this._tileToResolver.get(e.id).resolve(),this._tileToResolver.delete(e.id));this.notifyChange("updating")}async onIdle(){this._invalidated&&(this._invalidated=!1,(m(this.aggregateStore)||this.processor.type==="heatmap")&&await this._repushCurrentLevelTiles()),this._markAndSweep()}async querySummaryStatistics({query:i,params:e}){return this.queryEngine.executeQueryForSummaryStatistics(i,e)}async queryUniqueValues({query:i,params:e}){return this.queryEngine.executeQueryForUniqueValues(i,e)}async queryClassBreaks({query:i,params:e}){return this.queryEngine.executeQueryForClassBreaks(i,e)}async queryHistogram({query:i,params:e}){return this.queryEngine.executeQueryForHistogram(i,e)}queryExtent(i){return this.queryEngine.executeQueryForExtent(i)}queryFeatures(i){return this.queryEngine.executeQuery(i)}async queryVisibleFeatures(i){const e=await this.queryEngine.executeQuery(i),t=e.objectIdFieldName;return e.features=e.features.filter(s=>{const r=s.attributes[t],a=this.getDisplayId(r);return re(a,n=>this.attributeStore.isVisible(n))}),e}queryFeatureCount(i){return this.queryEngine.executeQueryForCount(i)}queryLatestObservations(i){return this.queryEngine.executeQueryForLatestObservations(i)}queryObjectIds(i){return this.queryEngine.executeQueryForIds(i)}async queryStatistics(){return this.featureStore.storeStatistics}getObjectId(i){return this.featureStore.lookupObjectId(i,this._storage)}getDisplayId(i){if(m(this.aggregateStore)){const e=this.aggregateStore.getDisplayId(i);if(G(e)){const t=this.featureStore.lookupDisplayId(i);return this.aggregateStore.getDisplayIdForReferenceId(t)}return e}return this.featureStore.lookupDisplayId(i)}getFeatures(i){const e=[],t=[];for(const s of i){const r=m(this.aggregateStore)?this.getAggregate(s):null;if(m(r))if(m(r.referenceId)){const a=this.getFeature(r.referenceId);m(a)&&e.push(a)}else t.push(r);else{const a=this.getFeature(s);m(a)&&e.push(a)}}return{features:e,aggregates:t}}getFeature(i){const e=this.featureStore.lookupFeatureByDisplayId(i,this._storage);if(G(e))return null;const t=e.readHydratedGeometry(),s=Ce(t,e.geometryType,e.hasZ,e.hasM);return{attributes:e.readAttributes(),geometry:s}}getAggregate(i){return G(this.aggregateStore)?null:this.aggregateStore.getAggregate(i)}getAggregates(){return G(this.aggregateStore)?[]:this.aggregateStore.getAggregates()}async setHighlight(i){const e=Lt(i.map(t=>this.getDisplayId(t)));return this.attributeStore.setHighlight(i,e)}_lookupObjectIdByGlobalId(i){const e=this.service.globalIdField;if(G(e))throw new Error("Expected globalIdField to be defined");let t=null;if(this.featureStore.forEach(s=>{i===s.readAttribute(e)&&(t=s.getObjectId())}),G(t))throw new Error(`Expected to find a feature with globalId ${i}`);return t}async _repushCurrentLevelTiles(){const i=this.tileStore.tiles.filter(e=>e.level===this._level).map(async e=>this._patchTile({type:"append",id:e.key.id,addOrUpdate:V.fromOptimizedFeatures([],this.service),remove:[],end:!0,status:$.empty()}));await Promise.all(i)}_maybeForceCleanup(){performance.now()-this._lastCleanup>Ds&&this._markAndSweep()}_patchTile(i,e){const t=this._updateQueue.push(i,e).then(()=>{this.notifyChange("updating")}).catch(s=>{this.notifyChange("updating")});return this.notifyChange("updating"),t}async _onTileMessage(i,e){N(e);const t=this.tileStore.get(i.id);if(!t)return;if(i.clear)return this.processor.onTileClear(t);const s=i.status;this._cleanupNeeded=!0;const r=[];for(const a of i.remove){const n=this.featureStore.lookupDisplayId(a);n&&r.push(n)}i.remove=r;try{if(G(i.addOrUpdate))return void this.processor.onTileMessage(t,{...i,addOrUpdate:null},m(this.aggregateStore),e).catch(we);if(i.addOrUpdate.setArcadeSpatialReference(this.spatialReference),this.featureStore.hasInstance(i.addOrUpdate.instance)&&s.targets.feature||(s.targets.feature=!0,this.featureStore.onTileData(t,i)),(!s.storage.data||!s.storage.filters)&&(s.storage.data=!0,s.storage.filters=!0,this.attributeStore.onTileData(t,i),this._source.type==="geoevent"||this._didEdit?(await this.attributeStore.sendUpdates(),N(e)):this.attributeStore.sendUpdates()),m(this.aggregateStore)&&!s.targets.aggregate){s.targets.aggregate=!0;const a=Xe(this._source)&&this._source.loading,n=!Xe(this._source)||a||i.end;if(this.aggregateStore.onTileData(t,i,this._storage,this.attributeStore,n),!n)return;s.mesh||(this.attributeStore.onTileData(t,i),await this.attributeStore.sendUpdates())}s.mesh||(s.mesh=!0,await this.processor.onTileMessage(t,i,m(this.aggregateStore),e),N(e)),this._maybeForceCleanup()}catch(a){we(a)}}_mark(i,e,t){const s=(4294901760&this._storage.getInstanceId(i))>>>16;i&&(e.add(s),t.set(i))}_markAndSweep(){if(this._lastCleanup=performance.now(),!(!(this._source.type==="feature"&&this._source.mode==="snapshot")&&(this._source.type==="geoevent"||this._cleanupNeeded)))return;this._cleanupNeeded=!1;const i=this._storage.getBitset(this._markedIdsBufId),e=new Set;i.clear();for(const t of this.tileStore.tiles)for(const s of this._source.readers(t.id)){const r=s.getCursor();for(;r.next();){let a=r.getDisplayId();if(!a){const n=r.getObjectId();a=this.featureStore.lookupDisplayId(n)}this._mark(a,e,i)}}this.processor.type==="symbol"&&this.processor.forEachBufferId(t=>{this._mark(t,e,i)}),this._updateQueue.forEach(t=>{for(const s of t.remove){const r=this.featureStore.lookupDisplayId(s);this._mark(r,e,i)}}),m(this.aggregateStore)&&(this.aggregateStore.sweepFeatures(i,this.featureStore),"sweepAggregates"in this.aggregateStore&&this.aggregateStore.sweepAggregates(this._storage,this.attributeStore,this._level)),this.featureStore.sweepFeatures(i,this._storage,this.attributeStore),this.featureStore.sweepFeatureSets(e)}};z([j({constructOnly:!0})],X.prototype,"tileStore",void 0),z([j()],X.prototype,"config",void 0),z([j({readOnly:!0})],X.prototype,"fieldsIndex",null),z([j()],X.prototype,"processor",void 0),z([j({constructOnly:!0})],X.prototype,"remoteClient",void 0),z([j({constructOnly:!0})],X.prototype,"service",void 0),z([j()],X.prototype,"spatialReference",null),z([j()],X.prototype,"updating",null),X=z([nt("esri.views.2d.layers.features.controllers.FeatureController2D")],X);const Qs=X;let K=class extends ot{constructor(){super(...arguments),this.controller=null,this.processor=null,this.remoteClient=null,this.tileStore=null,this.service=null,this.viewState=null,this._paused=!1,this._pendingTileUpdates=[]}initialize(){this.handles.add(Se(()=>this.updating,i=>{this.remoteClient.invoke("setUpdating",i).catch(e=>{})}))}destroy(){var i,e;this.stop(),(i=this.controller)==null||i.destroy(),(e=this.processor)==null||e.destroy(),this.controller=this.processor=this.tileStore=this.remoteClient=null}get updating(){return!this.controller||this.controller.updating}stop(){var i,e,t;this._paused=!0,Array.isArray((i=this.service)==null?void 0:i.source)&&(this.service.source.forEach(s=>s.close()),this.service.source.length=0),(e=this.tileStore)==null||e.updateTiles({added:[],removed:this.tileStore.tiles.map(s=>s.id)}),(t=this.tileStore)==null||t.destroy(),this.tileStore=null,this._pendingTileUpdates.length=0}async startup({service:i,config:e,tileInfo:t,tiles:s}){var r,a,n;if(this._paused=!0,Array.isArray((r=this.service)==null?void 0:r.source)&&(this.service.source.forEach(o=>o.close()),this.service.source.length=0),this.service=i,!this.tileStore||!Ot(this.tileStore.tileScheme.spatialReference,t.spatialReference)){const o=new Pt(Dt.fromJSON(t));s.added.length=s.removed.length=0,(a=this.tileStore)==null||a.updateTiles({added:[],removed:this.tileStore.tiles.map(h=>h.id)}),(n=this.tileStore)==null||n.destroy(),this.tileStore=new $t(o),this._pendingTileUpdates.length=0}for(await this._createProcessorAndController(e),await this.update({config:e}),this.controller.resume(),this.tileStore.clear(),this.tileStore.updateTiles(s),this._paused=!1;this._pendingTileUpdates.length;)this.tileStore.updateTiles(this._pendingTileUpdates.pop())}async updateTiles(i){this._paused?this._pendingTileUpdates.push(i):this.tileStore.updateTiles(i)}async update({config:i}){const e=$.empty();return await Promise.all([this.processor.update(e,i),this.controller.update(e,i)]),e.toJSON()}async applyUpdate(i){return this.controller.applyUpdate($.create(i))}async _createProcessorAndController(i){await Promise.all([this._handleControllerConfig(i),this._handleProcessorConfig(i)]),this.controller.processor=this.processor}async _handleControllerConfig(i){return this._createController(this.service,i)}async _handleProcessorConfig(i){return this._createProcessor(this.service,i)}async _createController(i,e){this.controller&&this.controller.destroy();const{tileStore:t,remoteClient:s}=this,r=new Qs({service:i,tileStore:t,remoteClient:s});return this.controller=r,r}async _createProcessor(i,e){const t=e.schema.processors[0].type,s=(await Ht(t)).default,{remoteClient:r,tileStore:a}=this,n=new s({service:i,config:e,tileStore:a,remoteClient:r});return this.processor&&this.processor.destroy(),this.processor=n,n}};z([j()],K.prototype,"controller",void 0),z([j()],K.prototype,"processor",void 0),z([j()],K.prototype,"updating",null),z([j()],K.prototype,"viewState",void 0),K=z([nt("esri.views.2d.layers.features.Pipeline")],K);const ur=K;export{ur as default};
