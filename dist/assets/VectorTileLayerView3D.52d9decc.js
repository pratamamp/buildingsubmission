import{lf as B,lg as V,ex as N,l as _,ae as A,bd as G,lh as U,li as j,lj as F,cB as x,by as W,cC as p,w as Q,s as K,lk as Y,ll as J,aT as X,eQ as Z,z as P,e as y,g as C,n as ee}from"./index.ce207a0f.js";import{r as te,i as ie,l as se,c as re}from"./SymbolRepository.7097c419.js";import{i as k,a as m}from"./StyleDefinition.5774ff26.js";import{y as le}from"./brushes.f31c87da.js";import{o as ae}from"./VTLMaterialManager.5b63309b.js";import{l as H}from"./StyleRepository.cd679e58.js";import{n as ne}from"./LayerView3D.a40b21a8.js";import{c as oe}from"./TiledLayerView3D.0ddcfe97.js";import{u as he}from"./LayerView.77dd4a59.js";import"./BidiEngine.ec67919b.js";import"./CIMSymbolHelper.196421e9.js";import"./enums.05a6ea95.js";import"./alignmentUtils.63b4d661.js";import"./definitions.8fc39ccc.js";import"./number.08b65821.js";import"./GeometryUtils.814cb798.js";import"./pixelUtils.ec04186c.js";import"./Utils.7465a4f2.js";import"./ProgramTemplate.5b362e40.js";import"./MaterialKey.861b2374.js";import"./utils.124a4cde.js";import"./GeometryUtils.8166011b.js";import"./programUtils.8e8c66cf.js";import"./Geometry.b68345ae.js";class ce{constructor(e,i){this.lockedSchemaPixelSize=e,this.isGCS=i}getLevelRowColumn(e){return this.isGCS?[e[0],e[1]>>1,e[2]>>1]:this.lockedSchemaPixelSize===256&&e[0]>0?[e[0]-1,e[1]>>1,e[2]>>1]:e}adjustLevel(e){return this.isGCS?e:this.lockedSchemaPixelSize===256?e>0?e-1:0:e}getShift(e,i){let s=0,l=0;return(this.lockedSchemaPixelSize===256||this.isGCS)&&(e[2]%2&&(s=i),e[1]%2&&(l=i)),[s,l]}getScale(e){if(this.isGCS){if(this.lockedSchemaPixelSize===512)return 4}else if(this.lockedSchemaPixelSize===256&&e===0)return 1;return 2}}function de(a,e){const i=[],s=new te(4096,i,()=>{const r=new B;return r.show=!1,r.parts.push({startTime:0,startOpacity:0,targetOpacity:0,show:!1}),r.parts.push({startTime:0,startOpacity:0,targetOpacity:0,show:!1}),r}),l=new ie(i,s,(r,t,o)=>new se(r,t,o,a.styleRepository,a.key.level,0),(r,t)=>{V(r,t,!1)},()=>0,r=>{const t=e.getStyleLayerByUID(r).getLayoutProperty("visibility");return!t||t.getValue()!==k.NONE});i.push(a),s.add(a),l.setScreenSize(512,512),l.continue(1/0)}class I extends re{constructor(e,i,s,l,r){super(e,i,s),this._memCache=l,this._loader=r,this._ongoingTileRequests=new Map,this._ongoingRequestToController=new Map}destroy(){this._ongoingRequestToController.forEach(e=>e.abort()),this._ongoingRequestToController.clear(),this._ongoingTileRequests.clear()}async getVectorTile(e,i,s,l){const r=new N(e,i,s,0);let t=this._memCache.get(r.id);if(_(t))return t.retain(),t;const o=await this._getVectorTileData(r);if(A(l),!this._layer)return null;if(t=this._memCache.get(r.id),_(t))return t.retain(),t;const c=this._layer.tileInfo.getTileBounds(G(),r);return t=new U(r,c[0],c[3],512,512,this._styleRepository,this._memCache),_(o)?(t.setData(o),t.retain(),this._memCache.put(r.id,t,t.memoryUsage*t.referenced,j)):t.setData(null),t.neededForCoverage=!0,t.transforms.tileUnitsToPixels=F(1/8,0,0,0,1/8,0,0,0,1),de(t,this._styleRepository),t}_getVectorTileData(e){const i=e.id;if(this._ongoingTileRequests.has(i))return this._ongoingTileRequests.get(i);const s=new AbortController,l={signal:s.signal},r=this._getParsedVectorTileData(e,l).then(t=>(this._ongoingTileRequests.delete(i),this._ongoingRequestToController.delete(i),t)).catch(()=>(this._ongoingTileRequests.delete(i),this._ongoingRequestToController.delete(i),null));return this._ongoingTileRequests.set(i,r),this._ongoingRequestToController.set(i,s),r}_getParsedVectorTileData(e,i){return this.fetchTileData(e,i).then(s=>this.parseTileData({key:e,data:s},i))}request(e,i){return this._loader.request(e,"binary",i)}}const M=1e-6;class E{constructor(e,i){this.spriteMosaic=e,this.glyphMosaic=i,this._brushCache=new Map,this._vtlMaterialManager=new ae}dispose(){this._brushCache&&(this._brushCache.forEach(e=>e.dispose()),this._brushCache=null),this._vtlMaterialManager=x(this._vtlMaterialManager),this.spriteMosaic.dispose(),this.glyphMosaic.dispose()}get vectorTilesMaterialManager(){return this._vtlMaterialManager}drawTile(e,i,s){const{context:l}=e,r=s.layers;s.backgroundBucketIds.length>0&&(e.renderPass="background",s.backgroundBucketIds.forEach(t=>this._renderStyleLayer(s.getLayerById(t),e,i,!0))),l.setBlendingEnabled(!1),l.setDepthTestEnabled(!0),l.setDepthWriteEnabled(!0),l.setDepthFunction(W.LEQUAL),e.renderPass="opaque";for(let t=r.length-1;t>=0;t--)this._renderStyleLayer(r[t],e,i,!1);l.setDepthWriteEnabled(!1),l.setBlendingEnabled(!0),l.setBlendFunctionSeparate(p.ONE,p.ONE_MINUS_SRC_ALPHA,p.ONE,p.ONE_MINUS_SRC_ALPHA),e.renderPass="translucent";for(let t=0;t<r.length;t++)this._renderStyleLayer(r[t],e,i,!1);l.setDepthTestEnabled(!1),e.renderPass="symbol";for(let t=0;t<r.length;t++)this._renderStyleLayer(r[t],e,i,!1);l.bindVAO()}_renderStyleLayer(e,i,s,l=!1){if(!(l||e&&s.layerData.has(e.uid)))return;const r=e.getLayoutProperty("visibility");if(r&&r.getValue()===k.NONE)return;const{renderPass:t}=i;let o;switch(e.type){case m.BACKGROUND:if(t!=="background")return;o="vtlBackground";break;case m.FILL:if(t!=="opaque"&&i.renderPass!=="translucent")return;o="vtlFill";break;case m.LINE:if(t!=="translucent")return;o="vtlLine";break;case m.CIRCLE:if(t!=="symbol")return;o="vtlCircle";break;case m.SYMBOL:if(t!=="symbol")return;o="vtlSymbol"}const c=i.displayLevel;e.minzoom!==void 0&&e.minzoom>c+M||e.maxzoom!==void 0&&e.maxzoom<=c-M||(i.styleLayerUID=e.uid,i.styleLayer=e,this._drawWithBrush(i,s,o))}_drawWithBrush(e,i,s){if(!this._brushCache.has(s)){const l=le[s];this._brushCache.set(s,new l)}this._brushCache.get(s).drawMany(e,[i])}}let u=class extends oe(ne(he)){constructor(){super(...arguments),this.type="vector-tile-3d"}initialize(){if(Q(this.layer.fullExtent))return void this.addResolvingPromise(Promise.reject(new K("vectortilelayerview:full-extent-undefined","This layer view's layer does not define a fullExtent.")));const{basemapTerrain:a,spatialReference:e,state:i,viewingMode:s}=this.view,{pixelRatio:l}=i,r=s==="local"&&!Y(e)||J.force512VTL,t=this.layer.tileInfo.spatialReference.isGeographic,o=r?this.layer.tileInfo:this.layer.tileInfo.getOrCreateCompatible(256,t?1:2),c=this._getTileInfoSupportError(o,this.layer.fullExtent);if(_(c))return this.addResolvingPromise(Promise.reject(c));const $=X(()=>{var n,d;return(d=(n=this.view)==null?void 0:n.basemapTerrain)==null?void 0:d.tilingSchemeLocked}).then(()=>{const n=a.tilingScheme,d=n.pixelSize;let h;if(this.schemaHelper=new ce(d,a.spatialReference.isGeographic),d===256){const f=this.layer.tileInfo.spatialReference.isGeographic;h=this.layer.tileInfo.getOrCreateCompatible(256,f?1:2)}else h=this.view.spatialReference.isGeographic?this.layer.tileInfo.getOrCreateCompatible(512,.5):this.layer.tileInfo;const g=this._getTileInfoCompatibilityError(h,n);if(g)throw g;this.tileInfo=h});this._tileHandlerController=new AbortController;const w=this.view.resourceController;this._memCache=w.memoryController.newCache(this.layer.uid,n=>{n.release()});const q=new H(this.layer.currentStyleInfo.style),b=a.mapTileRequester;this._tileHandler=new I(this.layer,q,l,this._memCache,b);const v=this._tileHandlerController.signal,S=n=>w.schedule(n),T=this._tileHandler.start({signal:v,schedule:S}),R=this._tileHandler.spriteMosaic;R.then(n=>{!Z(v)&&this._tileHandler&&(this.painter=new E(n,this._tileHandler.glyphMosaic))}),T.then(()=>this._tileHandlerController=null),this.updatingHandles.add(()=>{var n;return{style:this.layer.currentStyleInfo.style,newPixelRatio:(n=this.view.state)==null?void 0:n.pixelRatio}},({style:n})=>{this._tileHandlerController&&this._tileHandlerController.abort(),this._tileHandlerController=new AbortController,this._memCache.clear();const d=new H(n),h=new I(this.layer,d,l,this._memCache,b),g=h.start({signal:this._tileHandlerController.signal,schedule:S}),f=h.spriteMosaic;g.then(()=>this._tileHandlerController=null),this.updatingHandles.addPromise(Promise.all([g,f]).then(([,O])=>{const z=this._tileHandler,L=this.painter;this.painter=new E(O,h.glyphMosaic),this._tileHandler=h,this.emit("data-changed"),z.destroy(),L&&L.dispose()}))});const D=Promise.all([$,T,R]);this.addResolvingPromise(D)}destroy(){this.painter=x(this.painter),this._tileHandlerController&&(this._tileHandlerController.abort(),this._tileHandlerController=null),P(this._tileHandler),this._memCache=P(this._memCache),this._tileHandler=null}get dataLevelRange(){const a=this.tileInfo.lods,e=a[0].scale,i=a[a.length-1].scale,s=this.levelRangeFromScaleRange(e,i);return s.minLevel===1&&this.tileInfo.size[0]===256&&(s.minLevel=0),s}async fetchTile(a,e,i,s){return this._tileHandler.getVectorTile(a,e,i,s)}};y([C()],u.prototype,"layer",void 0),y([C()],u.prototype,"dataLevelRange",null),y([C()],u.prototype,"updatingProgressValue",void 0),u=y([ee("esri.views.3d.layers.VectorTileLayerView3D")],u);const De=u;export{De as default};
