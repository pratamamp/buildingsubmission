import{nP as Pe,nQ as ve,j6 as b,nR as N,j5 as ye,kn as V,nS as Ve,j7 as d,l as a,j2 as re,kk as B,nT as xe,cS as ae,gb as p,dw as oe,gM as Ee,j8 as le,_ as ce,j9 as he,ja as de,jc as ue,jm as _e,cC as A,je as pe,jq as we,at as u,aU as R,cD as fe,w as o,cz as De,g_ as Le,ct as Se,cF as Ce,i6 as Re,e as w,jl as D,ji as Ae,lK as q,j3 as Me,nU as T,km as x,nV as F,jb as $e,nm as Te,nn as I,hz as ge,kw as ze,nW as Ie,nX as qe,bw as H,aq as m,nY as M,nZ as Oe,jh as Ue,cB as W,fU as G,gJ as y,i3 as je,nw as Ne,lA as z,lB as Be,aW as k,ns as Fe,n_ as He,nt as We,nu as Ge,nv as ke,n$ as me,mo as Xe,mP as Ye,o0 as Je,mW as X,o1 as Ze,aL as Ke,F as Qe,o2 as et,gg as tt,I as it,h as nt,hc as Y,m1 as J,hX as Z,o3 as st,o4 as rt,de as at,o5 as ot,aV as K,gC as lt,hY as ct,hU as ht,mV as Q,g9 as dt,o6 as ut}from"./index.ffdd6b96.js";function be(r,e){r.extensions.add("GL_OES_standard_derivatives");const t=r.fragment;t.include(Pe),r.include(ve),t.uniforms.add([new b("globalAlpha",i=>i.globalAlpha),new N("glowColor",i=>i.glowColor),new b("glowWidth",(i,n)=>i.glowWidth*n.camera.pixelRatio),new b("glowFalloff",i=>i.glowFalloff),new N("innerColor",i=>i.innerColor),new b("innerWidth",(i,n)=>i.innerWidth*n.camera.pixelRatio),new ye("depthMap",(i,n)=>n.linearDepthTexture),new V("nearFar",(i,n)=>n.camera.nearFar),new Ve("frameColor")]),t.code.add(d`vec4 blendPremultiplied(vec4 source, vec4 dest) {
float oneMinusSourceAlpha = 1.0 - source.a;
return vec4(
source.rgb + dest.rgb * oneMinusSourceAlpha,
source.a + dest.a * oneMinusSourceAlpha
);
}`),t.code.add(d`vec4 premultipliedColor(vec3 rgb, float alpha) {
return vec4(rgb * alpha, alpha);
}`),t.code.add(d`vec4 laserlineProfile(float dist) {
if (dist > glowWidth) {
return vec4(0.0);
}
float innerAlpha = (1.0 - smoothstep(0.0, innerWidth, dist));
float glowAlpha = pow(max(0.0, 1.0 - dist / glowWidth), glowFalloff);
return blendPremultiplied(
premultipliedColor(innerColor, innerAlpha),
premultipliedColor(glowColor, glowAlpha)
);
}`),t.code.add(d`bool laserlineReconstructFromDepth(out vec3 pos, out vec3 normal, out float depthDiscontinuityAlpha) {
float depth = linearDepthFromTexture(depthMap, uv, nearFar);
if (-depth == nearFar[0]) {
return false;
}
pos = reconstructPosition(gl_FragCoord.xy, depth);
normal = normalize(cross(dFdx(pos), dFdy(pos)));
float ddepth = fwidth(depth);
depthDiscontinuityAlpha = 1.0 - smoothstep(0.0, 0.01, -ddepth / depth);
return true;
}`),e.contrastControlEnabled?(t.uniforms.add(new b("globalAlphaContrastBoost",i=>a(i.globalAlphaContrastBoost)?i.globalAlphaContrastBoost:1)),t.code.add(d`float rgbToLuminance(vec3 color) {
return dot(vec3(0.2126, 0.7152, 0.0722), color);
}
vec4 laserlineOutput(vec4 color) {
float backgroundLuminance = rgbToLuminance(texture2D(frameColor, uv).rgb);
float alpha = clamp(globalAlpha * max(backgroundLuminance * globalAlphaContrastBoost, 1.0), 0.0, 1.0);
return color * alpha;
}`)):t.code.add(d`vec4 laserlineOutput(vec4 color) {
return color * globalAlpha;
}`)}function _t(r){const e=new re;e.include(be,r);const{vertex:t,fragment:i}=e;return t.uniforms.add([new B("modelView",(n,s)=>xe(ft,s.camera.viewMatrix,n.origin)),new B("proj",(n,s)=>s.camera.projectionMatrix),new b("glowWidth",(n,s)=>n.glowWidth*s.camera.pixelRatio),new V("pixelToNDC",(n,s)=>ae(pt,2/s.camera.fullViewport[2],2/s.camera.fullViewport[3]))]),e.attributes.add(p.START,"vec3"),e.attributes.add(p.END,"vec3"),e.attributes.add(p.UP,"vec3"),e.attributes.add(p.EXTRUDE,"vec2"),e.varyings.add("uv","vec2"),e.varyings.add("vViewStart","vec3"),e.varyings.add("vViewEnd","vec3"),e.varyings.add("vViewPlane","vec4"),t.code.add(d`void main() {
vec3 pos = mix(start, end, extrude.x);
vec4 viewPos = modelView * vec4(pos, 1);
vec4 projPos = proj * viewPos;
vec2 ndcPos = projPos.xy / projPos.w;
vec3 viewUp = (modelView * vec4(extrude.y * up, 0)).xyz;
vec4 projPosUp = proj * vec4(viewPos.xyz + viewUp, 1);
vec2 projExtrudeDir = normalize(projPosUp.xy / projPosUp.w - ndcPos);
vec2 lxy = abs(sign(projExtrudeDir) - ndcPos);
ndcPos += length(lxy) * projExtrudeDir;
vec3 worldPlaneNormal = normalize(cross(up, normalize(end - start)));
vec3 viewPlaneNormal = (modelView * vec4(worldPlaneNormal, 0)).xyz;
vViewStart = (modelView * vec4(start, 1)).xyz;
vViewEnd = (modelView * vec4(end, 1)).xyz;
vViewPlane = vec4(viewPlaneNormal, -dot(viewPlaneNormal, vViewStart));
float xPaddingPixels = sign(dot(viewPlaneNormal, viewPos.xyz)) * (extrude.x * 2.0 - 1.0) * glowWidth;
ndcPos.x += xPaddingPixels * pixelToNDC.x;
uv = ndcPos * 0.5 + 0.5;
gl_Position = vec4(ndcPos, 0, 1);
}`),i.uniforms.add(new b("perScreenPixelRatio",(n,s)=>s.camera.perScreenPixelRatio)),i.code.add(d`float planeDistancePixels(vec4 plane, vec3 pos, vec3 start, vec3 end) {
vec3 origin = mix(start, end, 0.5);
vec3 basis = end - origin;
vec3 posAtOrigin = pos - origin;
float x = dot(normalize(basis), posAtOrigin);
float y = dot(plane.xyz, posAtOrigin);
float dx = max(abs(x) - length(basis), 0.0);
float dy = y;
float dist = length(vec2(dx, dy));
float width = fwidth(y);
float maxPixelDistance = length(pos) * perScreenPixelRatio * 2.0;
float pixelDist = dist / min(width, maxPixelDistance);
return abs(pixelDist);
}
void main() {
vec3 pos;
vec3 normal;
float depthDiscontinuityAlpha;
if (!laserlineReconstructFromDepth(pos, normal, depthDiscontinuityAlpha)) {
discard;
}
float distance = planeDistancePixels(vViewPlane, pos, vViewStart, vViewEnd);
vec4 color = laserlineProfile(distance);
float alpha = 1.0 - smoothstep(0.995, 0.999, abs(dot(normal, vViewPlane.xyz)));
gl_FragColor = laserlineOutput(color * alpha * depthDiscontinuityAlpha);
}`),e}const pt=oe(),ft=Ee(),gt=Object.freeze(Object.defineProperty({__proto__:null,build:_t},Symbol.toStringTag,{value:"Module"}));class v extends he{initializeProgram(e){const t=v.shader.get().build(this.configuration);return new de(e.rctx,t,v.attributeLocations)}initializePipeline(){return ue({blending:_e(A.ONE,A.ONE_MINUS_SRC_ALPHA),colorWrite:pe})}}v.shader=new le(gt,()=>ce(()=>import("./LaserlinePath.glsl.20f85e0b.js"),["assets/LaserlinePath.glsl.20f85e0b.js","assets/index.ffdd6b96.js","assets/index.2c2ebad2.css"])),v.attributeLocations=new Map([[p.START,0],[p.END,1],[p.UP,2],[p.EXTRUDE,3]]);class ee{constructor(e){this._renderCoordsHelper=e,this._buffers=null,this._origin=u(),this._dirty=!1,this._count=0,this._vao=null}set vertices(e){const t=new Float64Array(3*e.length);let i=0;for(const n of e)t[i++]=n[0],t[i++]=n[1],t[i++]=n[2];this.buffers=[t]}set buffers(e){if(this._buffers=e,this._buffers.length>0){const t=this._buffers[0],i=3*Math.floor(t.length/3/2);R(this._origin,t[i+0],t[i+1],t[i+2])}else R(this._origin,0,0,0);this._dirty=!0}get origin(){return this._origin}draw(e){const t=this._ensureVAO(e);a(t)&&(e.bindVAO(t),e.drawArrays(fe.TRIANGLES,0,this._count))}dispose(){a(this._vao)&&this._vao.dispose()}_ensureVAO(e){return o(this._buffers)?null:(o(this._vao)&&(this._vao=this._createVAO(e,this._buffers)),this._ensureVertexData(this._vao,this._buffers),this._vao)}_createVAO(e,t){const i=this._createDataBuffer(t);return this._dirty=!1,new De(e,v.attributeLocations,{data:Le(ie)},{data:Se.createVertex(e,Ce.STATIC_DRAW,i)})}_ensureVertexData(e,t){if(!this._dirty)return;const i=this._createDataBuffer(t);e.vertexBuffers.data.setData(i),this._dirty=!1}_numberOfRenderVertices(e){return 3*(2*(e.length/3-1))}_createDataBuffer(e){const t=e.reduce((l,c)=>l+this._numberOfRenderVertices(c),0);this._count=t;const i=ie.createBuffer(t),n=this._origin;let s=0,_=0;for(const l of e){for(let c=0;c<l.length;c+=3){const g=R(te,l[c+0],l[c+1],l[c+2]);c===0?_=this._renderCoordsHelper.getAltitude(g):this._renderCoordsHelper.setAltitude(g,_);const f=this._renderCoordsHelper.worldUpAtPosition(g,mt),h=s+2*c,j=Re(te,g,n);if(c<l.length-3){i.up.setVec(h,f),i.up.setVec(h+3,f),i.up.setVec(h+5,f);for(let P=0;P<6;P++)i.start.setVec(h+P,j);i.extrude.setValues(h+0,0,-1),i.extrude.setValues(h+1,1,-1),i.extrude.setValues(h+2,1,1),i.extrude.setValues(h+3,0,-1),i.extrude.setValues(h+4,1,1),i.extrude.setValues(h+5,0,1)}if(c>0){i.up.setVec(h-2,f),i.up.setVec(h-4,f),i.up.setVec(h-5,f);for(let P=-6;P<0;P++)i.end.setVec(h+P,j)}}s+=this._numberOfRenderVertices(l)}return i.buffer}}const mt=u(),te=u(),ie=we().vec3f(p.START).vec3f(p.END).vec3f(p.UP).vec2f(p.EXTRUDE);class O extends Ae{constructor(){super(...arguments),this.contrastControlEnabled=!1}}w([D()],O.prototype,"contrastControlEnabled",void 0);const U=q(6);function bt(r){const e=new re;e.extensions.add("GL_OES_standard_derivatives"),e.include(Me),e.include(be,r);const t=e.fragment;return r.heightManifoldEnabled&&t.uniforms.add(new T("heightPlane")),r.pointDistanceEnabled&&t.uniforms.add(new T("pointDistanceSphere")),r.lineVerticalPlaneEnabled&&(t.uniforms.add(new T("lineVerticalPlane")),t.uniforms.add(new x("lineVerticalStart")),t.uniforms.add(new x("lineVerticalEnd"))),(r.heightManifoldEnabled||r.pointDistanceEnabled||r.lineVerticalPlaneEnabled)&&t.uniforms.add(new F("maxPixelDistance")),(r.lineVerticalPlaneEnabled||r.heightManifoldEnabled)&&t.code.add(d`float planeDistancePixels(vec4 plane, vec3 pos) {
float dist = dot(plane.xyz, pos) + plane.w;
float width = fwidth(dist);
dist /= min(width, maxPixelDistance);
return abs(dist);
}`),r.pointDistanceEnabled&&t.code.add(d`float sphereDistancePixels(vec4 sphere, vec3 pos) {
float dist = distance(sphere.xyz, pos) - sphere.w;
float width = fwidth(dist);
dist /= min(width, maxPixelDistance);
return abs(dist);
}`),r.intersectsLineEnabled&&(t.uniforms.add(new x("intersectsLineStart")),t.uniforms.add(new x("intersectsLineEnd")),t.uniforms.add(new x("intersectsLineDirection")),t.uniforms.add(new F("intersectsLineRadius")),t.uniforms.add(new b("perScreenPixelRatio",(i,n)=>n.camera.perScreenPixelRatio)),t.code.add(d`float lineDistancePixels(vec3 start, vec3 dir, float radius, vec3 pos) {
float dist = length(cross(dir, pos - start)) / (length(pos) * perScreenPixelRatio);
return abs(dist) - radius;
}`)),(r.lineVerticalPlaneEnabled||r.intersectsLineEnabled)&&t.code.add(d`bool pointIsWithinLine(vec3 pos, vec3 start, vec3 end) {
vec3 dir = end - start;
float t2 = dot(dir, pos - start);
float l2 = dot(dir, dir);
return t2 >= 0.0 && t2 <= l2;
}`),t.code.add(d`void main() {
vec3 pos;
vec3 normal;
float depthDiscontinuityAlpha;
if (!laserlineReconstructFromDepth(pos, normal, depthDiscontinuityAlpha)) {
discard;
}
vec4 color = vec4(0, 0, 0, 0);`),r.heightManifoldEnabled&&(t.uniforms.add(new V("angleCutoff",i=>C(i))),t.code.add(d`{
float heightManifoldAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, abs(dot(normal, heightPlane.xyz)));
vec4 heightManifoldColor = laserlineProfile(planeDistancePixels(heightPlane, pos));
color = max(color, heightManifoldColor * heightManifoldAlpha);
}`)),r.pointDistanceEnabled&&(t.uniforms.add(new V("angleCutoff",i=>C(i))),t.code.add(d`{
float pointDistanceSphereDistance = sphereDistancePixels(pointDistanceSphere, pos);
vec4 pointDistanceSphereColor = laserlineProfile(pointDistanceSphereDistance);
float pointDistanceSphereAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, abs(dot(normal, normalize(pos - pointDistanceSphere.xyz))));
color = max(color, pointDistanceSphereColor * pointDistanceSphereAlpha);
}`)),r.lineVerticalPlaneEnabled&&(t.uniforms.add(new V("angleCutoff",i=>C(i))),t.code.add(d`{
if (pointIsWithinLine(pos, lineVerticalStart, lineVerticalEnd)) {
float lineVerticalDistance = planeDistancePixels(lineVerticalPlane, pos);
vec4 lineVerticalColor = laserlineProfile(lineVerticalDistance);
float lineVerticalAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, abs(dot(normal, lineVerticalPlane.xyz)));
color = max(color, lineVerticalColor * lineVerticalAlpha);
}
}`)),r.intersectsLineEnabled&&(t.uniforms.add(new V("angleCutoff",i=>C(i))),t.code.add(d`{
if (pointIsWithinLine(pos, intersectsLineStart, intersectsLineEnd)) {
float intersectsLineDistance = lineDistancePixels(intersectsLineStart, intersectsLineDirection, intersectsLineRadius, pos);
vec4 intersectsLineColor = laserlineProfile(intersectsLineDistance);
float intersectsLineAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, 1.0 - abs(dot(normal, intersectsLineDirection)));
color = max(color, intersectsLineColor * intersectsLineAlpha);
}
}`)),t.code.add(d`gl_FragColor = laserlineOutput(color * depthDiscontinuityAlpha);
}`),e}function C(r){const e=a(r.angleCutoff)?r.angleCutoff:U;return ae(Pt,Math.cos(e),Math.cos(Math.max(0,e-q(2))))}const Pt=oe(),vt=Object.freeze(Object.defineProperty({__proto__:null,defaultAngleCutoff:U,build:bt},Symbol.toStringTag,{value:"Module"}));class $ extends he{initializeProgram(e){const t=$.shader.get().build(this.configuration);return new de(e.rctx,t,$e)}initializePipeline(){return ue({blending:_e(A.ONE,A.ONE_MINUS_SRC_ALPHA),colorWrite:pe})}}$.shader=new le(vt,()=>ce(()=>import("./Laserlines.glsl.f7a48433.js"),["assets/Laserlines.glsl.f7a48433.js","assets/index.ffdd6b96.js","assets/index.2c2ebad2.css"]));class L extends O{constructor(){super(...arguments),this.heightManifoldEnabled=!1,this.pointDistanceEnabled=!1,this.lineVerticalPlaneEnabled=!1,this.intersectsLineEnabled=!1}}w([D()],L.prototype,"heightManifoldEnabled",void 0),w([D()],L.prototype,"pointDistanceEnabled",void 0),w([D()],L.prototype,"lineVerticalPlaneEnabled",void 0),w([D()],L.prototype,"intersectsLineEnabled",void 0);const yt=u(),Vt=ge(),xt={glowColor:[1,.5,0],glowWidth:8,glowFalloff:8,innerColor:[1,1,1],innerWidth:1,globalAlpha:.75,angleCutoff:q(6),globalAlphaContrastBoost:2,__tagStrict:"NoParameters"};function ne(r,e,t,i){const n=yt,s=Vt;y(n,e,i),m(s,t),s[3]=0,me(s,s,i),Xe(n,s,r)}class Et{constructor(e,t={},i={contrastControlEnabled:!1}){this._renderCoordsHelper=e,this._config=i,this._technique=null,this._heightManifoldEnabled=!1,this._heightManifoldTarget=u(),this._pointDistanceEnabled=!1,this._pointDistanceOrigin=u(),this._pointDistanceTarget=u(),this._lineVerticalPlaneEnabled=!1,this._lineVerticalPlaneSegment=I(),this._intersectsLineEnabled=!1,this._intersectsLineSegment=I(),this._intersectsLineRadius=3,this._intersectsLineInfinite=!1,this._pathVerticalPlaneEnabled=!1,this._pathVerticalPlaneData=null,this._pathTechnique=null,this.canRender=!0,this._tempNormal=u(),this._tempDir=u(),this._tempUp=u(),this._tempVec3A=u(),this._tempVec3B=u(),this._tempVec4=ge(),this._tempPlane=ze(),this._tempSphere=Ie(),this._parameters=qe(t,xt)}get renderSlots(){return[this._config.contrastControlEnabled?H.LASERLINES_CONTRAST_CONTROL:H.LASERLINES]}get needsLinearDepth(){return!0}get heightManifoldEnabled(){return this._heightManifoldEnabled}set heightManifoldEnabled(e){this._heightManifoldEnabled!==e&&(this._heightManifoldEnabled=e,this._requestRender())}get heightManifoldTarget(){return this._heightManifoldTarget}set heightManifoldTarget(e){m(this._heightManifoldTarget,e),this._requestRender()}get pointDistanceEnabled(){return this._pointDistanceEnabled}set pointDistanceEnabled(e){e!==this._pointDistanceEnabled&&(this._pointDistanceEnabled=e,this._requestRender())}get pointDistanceTarget(){return this._pointDistanceTarget}set pointDistanceTarget(e){m(this._pointDistanceTarget,e),this._requestRender()}get pointDistanceOrigin(){return this._pointDistanceOrigin}set pointDistanceOrigin(e){m(this._pointDistanceOrigin,e),this._requestRender()}get lineVerticalPlaneEnabled(){return this._lineVerticalPlaneEnabled}set lineVerticalPlaneEnabled(e){e!==this._lineVerticalPlaneEnabled&&(this._lineVerticalPlaneEnabled=e,this._requestRender())}get lineVerticalPlaneSegment(){return this._lineVerticalPlaneSegment}set lineVerticalPlaneSegment(e){M(e,this._lineVerticalPlaneSegment),this._requestRender()}get intersectsLineEnabled(){return this._intersectsLineEnabled}set intersectsLineEnabled(e){e!==this._intersectsLineEnabled&&(this._intersectsLineEnabled=e,this._requestRender())}get intersectsLineSegment(){return this._intersectsLineSegment}set intersectsLineSegment(e){M(e,this._intersectsLineSegment),this._requestRender()}get intersectsLineRadius(){return this._intersectsLineRadius}set intersectsLineRadius(e){e!==this._intersectsLineRadius&&(this._intersectsLineRadius=e,this._requestRender())}get intersectsLineInfinite(){return this._intersectsLineInfinite}set intersectsLineInfinite(e){e!==this._intersectsLineInfinite&&(this._intersectsLineInfinite=e,this._requestRender())}get pathVerticalPlaneEnabled(){return this._pathVerticalPlaneEnabled}set pathVerticalPlaneEnabled(e){e!==this._pathVerticalPlaneEnabled&&(this._pathVerticalPlaneEnabled=e,a(this._pathVerticalPlaneData)&&this._requestRender())}set pathVerticalPlaneVertices(e){o(this._pathVerticalPlaneData)&&(this._pathVerticalPlaneData=new ee(this._renderCoordsHelper)),this._pathVerticalPlaneData.vertices=e,this.pathVerticalPlaneEnabled&&this._requestRender()}set pathVerticalPlaneBuffers(e){o(this._pathVerticalPlaneData)&&(this._pathVerticalPlaneData=new ee(this._renderCoordsHelper)),this._pathVerticalPlaneData.buffers=e,this.pathVerticalPlaneEnabled&&this._requestRender()}setParameters(e){Oe(this._parameters,e)&&this._requestRender()}initializeRenderContext(e){this._context=e;const t=e.renderContext.rctx;this._quadVAO=Ue(t),this._techniqueRepository=e.shaderTechniqueRepository,this._techniqueConfig=new L;const i=new O;i.contrastControlEnabled=this._config.contrastControlEnabled,this._pathTechnique=this._techniqueRepository.acquire(v,i)}uninitializeRenderContext(){this._quadVAO=W(this._quadVAO),this._technique=G(this._technique),this._pathVerticalPlaneData=W(this._pathVerticalPlaneData),this._pathTechnique=G(this._pathTechnique)}prepareTechnique(){return this.heightManifoldEnabled||this.pointDistanceEnabled||this.lineVerticalPlaneSegment||this.intersectsLineEnabled?(this._techniqueConfig.heightManifoldEnabled=this.heightManifoldEnabled,this._techniqueConfig.lineVerticalPlaneEnabled=this.lineVerticalPlaneEnabled,this._techniqueConfig.pointDistanceEnabled=this.pointDistanceEnabled,this._techniqueConfig.intersectsLineEnabled=this.intersectsLineEnabled,this._techniqueConfig.contrastControlEnabled=this._config.contrastControlEnabled,this._technique=this._techniqueRepository.releaseAndAcquire($,this._techniqueConfig,this._technique),this._technique):this._pathTechnique}render(e,t){(this.heightManifoldEnabled||this.pointDistanceEnabled||this.lineVerticalPlaneSegment||this.intersectsLineEnabled)&&this._renderUnified(e,t),this.pathVerticalPlaneEnabled&&this._renderPath(e)}_renderUnified(e,t){const i=e.rctx,n=i.bindTechnique(t,this._parameters,e.bindParameters);this._bindGlobalUniforms(e,n),this._bindHeightManifoldUniforms(e,n),this._bindPointDistanceUniforms(e,n),this._bindLineVerticalPlaneUniforms(e,n),this._bindIntersectsLineUniforms(e,n),i.bindVAO(this._quadVAO),i.drawArrays(fe.TRIANGLE_STRIP,0,4)}_renderPath(e){if(o(this._pathVerticalPlaneData)||o(this._pathTechnique))return;const t=e.rctx,i=this._pathTechnique,n=t.bindTechnique(i,{...this._parameters,origin:this._pathVerticalPlaneData.origin},e.bindParameters);this._bindGlobalUniforms(e,n),this._pathVerticalPlaneData.draw(e.rctx)}_bindHeightManifoldUniforms(e,t){if(!this.heightManifoldEnabled)return;const i=this._tempVec3A,n=this._tempPlane,s=e.bindParameters.camera;this._renderCoordsHelper.worldUpAtPosition(this._heightManifoldTarget,i),ne(n,this._heightManifoldTarget,i,s.viewMatrix),t.setUniform4fv("heightPlane",n)}_bindPointDistanceUniforms(e,t){if(!this._pointDistanceEnabled)return;const i=e.bindParameters.camera,n=this._tempSphere;m(n,this._pointDistanceOrigin),y(n,n,i.viewMatrix),n[3]=je(this._pointDistanceOrigin,this._pointDistanceTarget),t.setUniform4f("pointDistanceSphere",n[0],n[1],n[2],n[3])}_bindLineVerticalPlaneUniforms(e,t){if(!this._lineVerticalPlaneEnabled)return;const i=this._renderCoordsHelper,n=e.bindParameters.camera,s=this._tempPlane,_=this._tempVec3A,l=this._tempUp,c=this._tempDir,g=this._tempNormal;Ne(this._lineVerticalPlaneSegment,.5,_),i.worldUpAtPosition(_,l),z(c,this._lineVerticalPlaneSegment.vector),Be(g,l,c),z(g,g),ne(s,this._lineVerticalPlaneSegment.origin,g,n.viewMatrix),t.setUniform4fv("lineVerticalPlane",s);const f=this._tempVec3A;m(f,this._lineVerticalPlaneSegment.origin),i.setAltitude(f,0),y(f,f,n.viewMatrix),t.setUniform3fv("lineVerticalStart",f);const h=this._tempVec3B;k(h,this._lineVerticalPlaneSegment.origin,this._lineVerticalPlaneSegment.vector),i.setAltitude(h,0),y(h,h,n.viewMatrix),t.setUniform3fv("lineVerticalEnd",h)}_bindIntersectsLineUniforms(e,t){if(!this._intersectsLineEnabled)return;const i=wt,n=Dt,s=e.bindParameters.camera;if(this._intersectsLineInfinite){if(Fe(He(this._intersectsLineSegment.origin,this._intersectsLineSegment.vector),E),E.c0=-Number.MAX_VALUE,!We(s.frustum,E))return;Ge(E,i),ke(E,n)}else m(i,this._intersectsLineSegment.origin),k(n,this._intersectsLineSegment.origin,this._intersectsLineSegment.vector);const _=this._tempVec3A;y(_,i,s.viewMatrix),t.setUniform3fv("intersectsLineStart",_);const l=this._tempVec4;m(l,this._intersectsLineSegment.vector),this._tempVec4[3]=0,me(this._tempVec4,this._tempVec4,s.viewMatrix),y(n,n,s.viewMatrix),t.setUniform3fv("intersectsLineEnd",n),z(l,l),t.setUniform3f("intersectsLineDirection",l[0],l[1],l[2]),t.setUniform1f("intersectsLineRadius",this._intersectsLineRadius)}_bindGlobalUniforms(e,t){const i=e.bindParameters.camera;this._heightManifoldEnabled?t.setUniform1f("maxPixelDistance",2*i.computeScreenPixelSizeAt(this._heightManifoldTarget)):this._pointDistanceEnabled?t.setUniform1f("maxPixelDistance",2*i.computeScreenPixelSizeAt(this._pointDistanceTarget)):this._lineVerticalPlaneEnabled&&t.setUniform1f("maxPixelDistance",2*i.computeScreenPixelSizeAt(this._lineVerticalPlaneSegment.origin)),t.bindTexture("frameColor",e.offscreenRenderingHelper.mainColorTexture)}_requestRender(){this._context&&this._context.requestRender()}}const E=Te(),wt=u(),Dt=u();class At extends Ye{constructor(e){super(e.view),this._angleCutoff=U,this._style={},this._heightManifoldTarget=u(),this._heightManifoldEnabled=!1,this._intersectsLine=I(),this._intersectsLineEnabled=!1,this._intersectsLineInfinite=!1,this._lineVerticalPlaneSegment=null,this._pathVerticalPlaneBuffers=null,this._pointDistanceLine=null,this.applyProps(e)}get testData(){return this.renderer}createResources(){this._ensureRenderer()}destroyResources(){this._disposeRenderer()}updateVisibility(){this._syncRenderer(),this._syncHeightManifold(),this._syncIntersectsLine(),this._syncPathVerticalPlane(),this._syncLineVerticalPlane(),this._syncPointDistance()}get angleCutoff(){return this._angleCutoff}set angleCutoff(e){this._angleCutoff!==e&&(this._angleCutoff=e,this._syncAngleCutoff())}get style(){return this._style}set style(e){this._style=e,this._syncStyle()}get heightManifoldTarget(){return this._heightManifoldEnabled?this._heightManifoldTarget:null}set heightManifoldTarget(e){a(e)?(m(this._heightManifoldTarget,e),this._heightManifoldEnabled=!0):this._heightManifoldEnabled=!1,this._syncRenderer(),this._syncHeightManifold()}set intersectsWorldUpAtLocation(e){if(o(e))return void(this.intersectsLine=null);const t=this.view.renderCoordsHelper.worldUpAtPosition(e,Lt);this.intersectsLine=Je(e,t),this.intersectsLineInfinite=!0}get intersectsLine(){return this._intersectsLineEnabled?this._intersectsLine:null}set intersectsLine(e){a(e)?(M(e,this._intersectsLine),this._intersectsLineEnabled=!0):this._intersectsLineEnabled=!1,this._syncIntersectsLine(),this._syncRenderer()}get intersectsLineInfinite(){return this._intersectsLineInfinite}set intersectsLineInfinite(e){this._intersectsLineInfinite=e,this._syncIntersectsLineInfinite()}get lineVerticalPlaneSegment(){return this._lineVerticalPlaneSegment}set lineVerticalPlaneSegment(e){this._lineVerticalPlaneSegment=a(e)?M(e):null,this._syncLineVerticalPlane(),this._syncRenderer()}get pathVerticalPlane(){return this._pathVerticalPlaneBuffers}set pathVerticalPlane(e){this._pathVerticalPlaneBuffers=e,this._syncPathVerticalPlane(),this._syncLineVerticalPlane(),this._syncPointDistance(),this._syncRenderer()}get pointDistanceLine(){return this._pointDistanceLine}set pointDistanceLine(e){this._pointDistanceLine=a(e)?{origin:X(e.origin),target:X(e.target)}:null,this._syncPointDistance(),this._syncRenderer()}_syncRenderer(){this.attached&&this.visible&&(this._intersectsLineEnabled||this._heightManifoldEnabled||a(this._pointDistanceLine)||a(this._pathVerticalPlaneBuffers))?this._ensureRenderer():this._disposeRenderer()}_ensureRenderer(){a(this.renderer)||(this.renderer=new Et(this.view.renderCoordsHelper,void 0,{contrastControlEnabled:!0}),this._syncStyle(),this._syncHeightManifold(),this._syncIntersectsLine(),this._syncIntersectsLineInfinite(),this._syncPathVerticalPlane(),this._syncLineVerticalPlane(),this._syncPointDistance(),this._syncAngleCutoff(),this.view._stage&&this.view._stage.addRenderPlugin(this.renderer.renderSlots,this.renderer))}_syncStyle(){o(this.renderer)||(this.renderer.setParameters(this._style),this._style.intersectsLineRadius!=null&&(this.renderer.intersectsLineRadius=this._style.intersectsLineRadius))}_syncAngleCutoff(){o(this.renderer)||this.renderer.setParameters({angleCutoff:this._angleCutoff})}_syncHeightManifold(){o(this.renderer)||(this.renderer.heightManifoldEnabled=this._heightManifoldEnabled&&this.visible,this._heightManifoldEnabled&&(this.renderer.heightManifoldTarget=this._heightManifoldTarget))}_syncIntersectsLine(){o(this.renderer)||(this.renderer.intersectsLineEnabled=this._intersectsLineEnabled&&this.visible,this._intersectsLineEnabled&&(this.renderer.intersectsLineSegment=this._intersectsLine))}_syncIntersectsLineInfinite(){o(this.renderer)||(this.renderer.intersectsLineInfinite=this._intersectsLineInfinite)}_syncPathVerticalPlane(){o(this.renderer)||(this.renderer.pathVerticalPlaneEnabled=a(this._pathVerticalPlaneBuffers)&&this.visible,a(this._pathVerticalPlaneBuffers)&&(this.renderer.pathVerticalPlaneBuffers=this._pathVerticalPlaneBuffers))}_syncLineVerticalPlane(){o(this.renderer)||(this.renderer.lineVerticalPlaneEnabled=a(this._lineVerticalPlaneSegment)&&this.visible,a(this._lineVerticalPlaneSegment)&&(this.renderer.lineVerticalPlaneSegment=this._lineVerticalPlaneSegment))}_syncPointDistance(){o(this.renderer)||(this.renderer.pointDistanceEnabled=a(this._pointDistanceLine)&&this.visible,a(this._pointDistanceLine)&&(this.renderer.pointDistanceOrigin=this._pointDistanceLine.origin,this.renderer.pointDistanceTarget=this._pointDistanceLine.target))}_disposeRenderer(){a(this.renderer)&&this.view._stage&&(this.view._stage.removeRenderPlugin(this.renderer),this.renderer=null)}}const Lt=u();class St{constructor(e){this.resourceFactory=e,this._resources=null,this._visible=!0,this._attached=!1}destroy(){this._destroyResources()}get object(){return a(this._resources)?this._resources.object:null}get resources(){return a(this._resources)?this._resources.external:null}get visible(){return this._visible}set visible(e){e!==this._visible&&(this._visible=e,this._syncVisible())}get attached(){return this._attached}set attached(e){e!==this._attached&&(this._attached=e,this._createOrDestroyResources())}recreate(){this.attached&&this._createResources()}recreateGeometry(){if(!this.resourceFactory.recreateGeometry)return void this.recreate();const e=this.resourceFactory.view._stage;if(o(this._resources)||!e)return;const t=this._resources.object;this._resources.external.forEach(n=>{n.type===Ze.Geometry&&e.remove(n)}),t.removeAllGeometries();const i=this.resourceFactory.recreateGeometry(this._resources.external,t,this._resources.layer);e.addMany(i)}_createOrDestroyResources(){this._attached?this._resources||this._createResources():this._destroyResources()}_createResources(){this._destroyResources();const e=this.resourceFactory,t=e.view,i=t._stage;if(!i)return;const n=new Ke({isPickable:!1,updatePolicy:Qe.SYNC});i.add(n);const s=new et({castShadow:!1}),_=e.createResources(s,n);_.forEach(c=>{i.add(c),c instanceof tt&&i.loadImmediate(c)}),i.add(s),n.add(s);const l=e.cameraChanged?it(()=>t.state.camera,c=>e.cameraChanged(c),nt):null;this._resources={layer:n,object:s,external:_,cameraHandle:l},this._syncVisible()}_destroyResources(){if(o(this._resources))return;const e=this.resourceFactory.view._stage;e==null||e.remove(this._resources.object),e==null||e.remove(this._resources.layer),this._resources.external.forEach(t=>{e==null||e.remove(t),"dispose"in t&&t.dispose()}),this._resources.object.dispose(),this._resources.cameraHandle&&this._resources.cameraHandle.remove(),this._resources=null}_syncVisible(){o(this._resources)||this._resources.object.setVisible(this._visible)}}class Mt{constructor(e){this.view=null,this._geometry=null,this._size=3,this._color=Y(1,0,1,1),this._pixelSnappingEnabled=!0,this._primitive="square",this._outlineSize=1,this._outlineColor=Y(1,1,1,1),this._elevationInfo=null,this.resources=new St({view:e.view,createResources:i=>this._createResources(i),recreateGeometry:(i,n)=>(i.geometry=this._recreateGeometry(n,i.material),a(i.geometry)?[i.geometry]:[])});let t=!0;for(const i in e)i in this?i==="attached"?t=e[i]:this[i]=e[i]:console.error("Cannot set unknown property",i);this.attached=t}destroy(){this.resources.destroy()}get visible(){return this.resources.visible}set visible(e){this.resources.visible=e}get attached(){return this.resources.attached}set attached(e){this.resources.attached=e}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this.resources.recreateGeometry()}get size(){return this._size}set size(e){if(e!==this._size){const t=this.preferredTextureSize;this._size=e,t<this.preferredTextureSize?a(this.resources)&&this.resources.recreate():this._updateSizeAttribute()}}get color(){return this._color}set color(e){J(e,this._color)||(Z(this._color,e),this._updateMaterial())}get pixelSnappingEnabled(){return this._pixelSnappingEnabled}set pixelSnappingEnabled(e){this._pixelSnappingEnabled!==e&&(this._pixelSnappingEnabled=e,this._updateMaterial())}get primitive(){return this._primitive}set primitive(e){this._primitive!==e&&(this._primitive=e,a(this.resources)&&this.resources.recreate())}get outlineSize(){return this._outlineSize}set outlineSize(e){e!==this._outlineSize&&(this._outlineSize=e,this._updateMaterial())}get outlineColor(){return this._outlineColor}set outlineColor(e){J(e,this._outlineColor)||(Z(this._outlineColor,e),this._updateMaterial())}get elevationInfo(){return this._elevationInfo}set elevationInfo(e){this._elevationInfo=e,this.resources&&this.resources.recreateGeometry()}_updateMaterial(){const e=this.resources.resources;o(e)||e.material.setParameters(this._materialParameters(e.texture.id))}_updateSizeAttribute(){const e=this.resources.resources,t=this.resources.object;if(o(e)||o(t))return;const i=e.geometry;if(o(i))return;const n=i.getMutableAttribute(p.SIZE).data,s=this.geometrySize;n[0]=s,n[1]=s,t.geometryVertexAttrsUpdated(t.geometryRecords[0])}_materialParameters(e){return{color:this._color,textureIsSignedDistanceField:!0,distanceFieldBoundingBox:Ct,occlusionTest:!1,outlineColor:this._outlineColor,outlineSize:this._outlineSize,textureId:e,polygonOffset:!1,shaderPolygonOffset:0,drawInSecondSlot:!0,depthEnabled:!1,pixelSnappingEnabled:this.pixelSnappingEnabled}}get geometrySize(){return this._size/S}_recreateGeometry(e,t){const i=this._createRenderGeometry();return a(i)&&e.addGeometry(i,t),i}_createResources(e){const t=st(this._primitive,this.preferredTextureSize),i=new rt(this._materialParameters(t.id)),n=this._recreateGeometry(e,i);return{material:i,texture:t,geometry:n,forEach(s){s(t),s(i),a(this.geometry)&&s(this.geometry)}}}get preferredTextureSize(){return at(ot(2*this.geometrySize),16,128)}calculateMapBounds(e){if(o(this.resources.resources)||o(this.resources.resources.geometry))return!1;const t=this.resources.resources.geometry.vertexAttributes.get(p.POSITION);return K(t.data,this.view.renderCoordsHelper.spatialReference,se,this.view.spatialReference),lt(e,se),!0}_createRenderGeometry(){const e=this.geometry;if(o(e))return null;const{renderCoordsHelper:t,elevationProvider:i}=this.view,n=ct(e,i,ht.fromElevationInfo(this.elevationInfo),t),s=R(Q.get(),e.x,e.y,n),_=Q.get();K(s,e.spatialReference,_,t.spatialReference);const l=this.geometrySize;return dt.createPointGeometry(null,_,null,[l,l],[0,0,0,1])}}const S=ut,Ct=[S/2,S/2,1-S/2,1-S/2],se=u();export{Mt as S,At as _,U as h,bt as m,St as u,_t as v};
