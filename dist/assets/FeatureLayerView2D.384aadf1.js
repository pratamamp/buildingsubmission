import{e as l,g as h,n as T,i as P,y as D,ag as S,b5 as C,_ as N,cQ as G,pJ as K,eE as W,ne as w,lq as Z,cI as X,ex as A,pK as Y,l as p,ai as ee,c9 as te,ey as J,I as U,s as k,j as ie,b$ as H,aw as re,h as se,bH as ae,P as ne,H as x,gx as oe,w as le,dZ as he,aT as ue}from"./index.ffdd6b96.js";import{h as z}from"./EffectView.0490cca5.js";import{S as de}from"./definitions.8fc39ccc.js";import{f as ce}from"./LayerView2D.e0a079ad.js";import{d as pe,f as ye,x as fe,m as _e,c as ge,z as me,v as ve}from"./schemaUtils.fd4a2703.js";import{e as we}from"./util.22ece893.js";import{A as be}from"./FeatureLayerView.83b73246.js";import{u as Re}from"./LayerView.9aa60546.js";import{i as Se}from"./RefreshableLayerView.0f92f4aa.js";import"./Container.f7f0b23d.js";import"./Utils.60e9eab7.js";import"./number.08b65821.js";import"./enums.05a6ea95.js";import"./utils.94e58371.js";import"./MaterialKey.227f141a.js";import"./alignmentUtils.63b4d661.js";import"./visualVariablesUtils.811ff4ed.js";import"./createSymbolSchema.ae6755bd.js";import"./CIMSymbolHelper.d25c3642.js";import"./BidiEngine.ec67919b.js";import"./GeometryUtils.814cb798.js";import"./cimAnalyzer.950d7376.js";import"./ExpandedCIM.3e60089c.js";import"./MD5.97b39efc.js";import"./floorFilterUtils.69500d62.js";import"./popupUtils.6adfe864.js";let O=class extends P{constructor(){super(...arguments),this.isAggregate=!0}getEffectivePopupTemplate(e=!1){if(this.popupTemplate)return this.popupTemplate;const t=this.sourceLayer&&this.sourceLayer.featureReduction;return t&&"popupTemplate"in t&&t.popupEnabled?t.popupTemplate:null}getObjectId(){return this.objectId}};l([h({type:Boolean})],O.prototype,"isAggregate",void 0),l([h({type:[String,Number],json:{read:!0}})],O.prototype,"objectId",void 0),O=l([T("esri.AggregateGraphic")],O);const L=O;let f=class extends D{constructor(e){super(e),this._filter=null,this.duration=S("mapview-transitions-duration"),this._excludedEffectView=new z(e),this._includedEffectView=new z(e)}get excludedEffects(){return this._excludedEffectView.effects}set featureEffect(e){this._get("featureEffect")!==e&&this._transitionTo(e)}get filter(){var e;return this._filter||((e=C(this.featureEffect))==null?void 0:e.filter)||null}get hasEffects(){return this._excludedEffectView.hasEffects||this._includedEffectView.hasEffects}get includedEffects(){return this._includedEffectView.effects}set scale(e){this._set("scale",e),this._excludedEffectView.scale=e,this._includedEffectView.scale=e}get transitioning(){return this._excludedEffectView.transitioning||this._includedEffectView.transitioning}transitionStep(e,t){this._set("scale",t),this.transitioning?(this._includedEffectView.transitionStep(e,t),this._excludedEffectView.transitionStep(e,t),this.transitioning||(this._filter=null)):(this._excludedEffectView.scale=t,this._includedEffectView.scale=t)}end(){this._includedEffectView.end(),this._excludedEffectView.end(),this._filter=null}_transitionTo(e){const t=this._get("featureEffect"),i=C(e),r=C(i==null?void 0:i.includedEffect),s=C(i==null?void 0:i.excludedEffect),n=this._includedEffectView.canTransitionTo(r)&&this._excludedEffectView.canTransitionTo(s);this._includedEffectView.effect=r,this._excludedEffectView.effect=s,this._set("featureEffect",i),this._filter=(i==null?void 0:i.filter)||(t==null?void 0:t.filter)||null,n||this.end()}};l([h()],f.prototype,"_filter",void 0),l([h()],f.prototype,"_excludedEffectView",void 0),l([h()],f.prototype,"_includedEffectView",void 0),l([h()],f.prototype,"duration",void 0),l([h()],f.prototype,"excludedEffects",null),l([h()],f.prototype,"featureEffect",null),l([h()],f.prototype,"filter",null),l([h()],f.prototype,"hasEffects",null),l([h()],f.prototype,"includedEffects",null),l([h({value:0})],f.prototype,"scale",null),l([h()],f.prototype,"transitioning",null),f=l([T("esri.layers.effects.FeatureEffectView")],f);const Ee=f;async function xe(e,t){if(!e)return null;switch(e.type){case"symbol":return new(await N(()=>import("./SymbolTileRenderer.cb5e02cb.js"),["assets/SymbolTileRenderer.cb5e02cb.js","assets/index.ffdd6b96.js","assets/index.2c2ebad2.css","assets/CircularArray.9d2ce0e4.js","assets/Utils.60e9eab7.js","assets/number.08b65821.js","assets/enums.05a6ea95.js","assets/FeatureContainer.52076b2a.js","assets/definitions.8fc39ccc.js","assets/visualVariablesUtils.eb305834.js","assets/visualVariablesUtils.811ff4ed.js","assets/TileContainer.2b6a32f6.js","assets/WGLContainer.a9c5afdc.js","assets/brushes.4486185e.js","assets/pixelUtils.f561b50e.js","assets/ProgramTemplate.7079fa72.js","assets/MaterialKey.227f141a.js","assets/alignmentUtils.63b4d661.js","assets/utils.94e58371.js","assets/StyleDefinition.5774ff26.js","assets/GeometryUtils.8166011b.js","assets/Container.f7f0b23d.js","assets/EffectView.0490cca5.js","assets/schemaUtils.fd4a2703.js","assets/createSymbolSchema.ae6755bd.js","assets/CIMSymbolHelper.d25c3642.js","assets/BidiEngine.ec67919b.js","assets/GeometryUtils.814cb798.js","assets/cimAnalyzer.950d7376.js","assets/ExpandedCIM.3e60089c.js","assets/MD5.97b39efc.js","assets/util.22ece893.js","assets/BaseTileRenderer.c9a2e482.js"])).default(t);case"heatmap":return new(await N(()=>import("./HeatmapTileRenderer.8142089c.js"),["assets/HeatmapTileRenderer.8142089c.js","assets/index.ffdd6b96.js","assets/index.2c2ebad2.css","assets/BitmapTileContainer.ca36eaa9.js","assets/Bitmap.e7ca0f0b.js","assets/brushes.4486185e.js","assets/pixelUtils.f561b50e.js","assets/definitions.8fc39ccc.js","assets/Utils.60e9eab7.js","assets/number.08b65821.js","assets/enums.05a6ea95.js","assets/ProgramTemplate.7079fa72.js","assets/MaterialKey.227f141a.js","assets/alignmentUtils.63b4d661.js","assets/utils.94e58371.js","assets/StyleDefinition.5774ff26.js","assets/GeometryUtils.8166011b.js","assets/TileContainer.2b6a32f6.js","assets/WGLContainer.a9c5afdc.js","assets/Container.f7f0b23d.js","assets/EffectView.0490cca5.js","assets/BaseTileRenderer.c9a2e482.js"])).default(t)}}function $(e){return e.some(t=>t.globalId)}function q(e){return e.filter(t=>!t.error).map(t=>{var i;return(i=t.objectId)!=null?i:t.globalId})}function j(e,t){const i=new Set(e);for(const r of t.values())i.add(r);return i}function Q(e,t){const i=new Set(e);for(const r of t.values())i.delete(r);return i}let V=class extends D{constructor(e){super(e),this._hasGlobalIds=!1}normalizeCtorArgs(e){return this._queueProcessor=new G({concurrency:1,process:e.process}),{}}destroy(){this.clear()}get updating(){return this._queueProcessor.length>0}clear(){this._queueProcessor.clear()}push(e){const t=this._queueProcessor,i=t.last();switch(e.type){case"update":case"refresh":if((i==null?void 0:i.type)===e.type)return;t.push(e).finally(()=>this.notifyChange("updating"));break;case"edit":{const r=(i==null?void 0:i.type)==="processed-edit"?i:null;r&&t.popLast();const s=this._mergeEdits(r,e);for(const n of s)t.push(n).finally(()=>this.notifyChange("updating"));break}}this.notifyChange("updating")}_mergeEdits(e,t){var c,u;const{addedFeatures:i,deletedFeatures:r,updatedFeatures:s}=t.edits;if(this._hasGlobalIds=this._hasGlobalIds||$(i)||$(s)||$(r),this._hasGlobalIds)return[e,{type:"processed-edit",edits:{addOrModified:[...i,...s],removed:r}}];const n=new Set(q((c=e==null?void 0:e.edits.addOrModified)!=null?c:[])),a=new Set(q((u=e==null?void 0:e.edits.removed)!=null?u:[])),d=new Set([...q(i),...q(s)]),o=new Set(q(r));return[{type:"processed-edit",edits:{addOrModified:Array.from(j(Q(n,o),d)).map(_=>({objectId:_})),removed:Array.from(j(Q(a,d),o)).map(_=>({objectId:_}))}}]}};l([h({readOnly:!0})],V.prototype,"updating",null),V=l([T("esri.views.2d.layers.support.FeatureCommandQueue")],V);const qe=V;function Ie(e){return Array.isArray(e)}let E=class extends K{constructor(e){super(e),this._startupResolver=W(),this.isReady=!1}initialize(){this._controller=new AbortController,this.addResolvingPromise(this._startWorker(this._controller.signal))}destroy(){this._controller.abort(),this._connection&&this._connection.close()}set tileRenderer(e){this.client.tileRenderer=e}get closed(){return this._connection.closed}async startup(e,t,i,r){await this.when();const s=this._controller.signal,n=Ie(i.source)?{transferList:i.source,signal:s}:void 0,a={service:i,config:t,tileInfo:e.tileInfo.toJSON(),tiles:r};await this._connection.invoke("startup",a,n),this._startupResolver.resolve(),this._set("isReady",!0)}async updateTiles(e){return await this._startupResolver.promise,w(this._connection.invoke("updateTiles",e))}async update(e){const t={config:e};return await this._startupResolver.promise,this._connection.invoke("update",t)}async applyUpdate(e){return await this._startupResolver.promise,this._connection.invoke("applyUpdate",e)}async setHighlight(e){return await this._startupResolver.promise,w(this._connection.invoke("controller.setHighlight",e))}async stop(){if(await this._startupResolver.promise,!this.closed)return w(this._connection.invoke("stop"))}async refresh(e){return await this._startupResolver.promise,w(this._connection.invoke("controller.refresh",e))}async querySummaryStatistics(e,t,i){return await this._startupResolver.promise,this._connection.invoke("controller.querySummaryStatistics",{query:e.toJSON(),params:t},i)}async queryUniqueValues(e,t,i){return await this._startupResolver.promise,this._connection.invoke("controller.queryUniqueValues",{query:e.toJSON(),params:t},i)}async queryClassBreaks(e,t,i){return await this._startupResolver.promise,this._connection.invoke("controller.queryClassBreaks",{query:e.toJSON(),params:t},i)}async queryHistogram(e,t,i){return await this._startupResolver.promise,this._connection.invoke("controller.queryHistogram",{query:e.toJSON(),params:t},i)}async queryFeatures(e,t){return await this._startupResolver.promise,this._connection.invoke("controller.queryFeatures",e.toJSON(),t)}async queryVisibleFeatures(e,t){return await this._startupResolver.promise,this._connection.invoke("controller.queryVisibleFeatures",e.toJSON(),t)}async queryObjectIds(e,t){return await this._startupResolver.promise,this._connection.invoke("controller.queryObjectIds",e.toJSON(),t)}async queryFeatureCount(e,t){return await this._startupResolver.promise,this._connection.invoke("controller.queryFeatureCount",e.toJSON(),t)}async queryExtent(e,t){return this._connection.invoke("controller.queryExtent",e.toJSON(),t)}async queryLatestObservations(e,t){return await this._startupResolver.promise,this._connection.invoke("controller.queryLatestObservations",e.toJSON(),t)}async queryStatistics(e){return await this._startupResolver.promise,this._connection.invoke("controller.queryStatistics",e)}async getObjectId(e){return await this._startupResolver.promise,this._connection.invoke("controller.getObjectId",e)}async getDisplayId(e){return await this._startupResolver.promise,this._connection.invoke("controller.getDisplayId",e)}async getFeatures(e){return await this._startupResolver.promise,this._connection.invoke("controller.getFeatures",e)}async getAggregates(){return await this._startupResolver.promise,this._connection.invoke("controller.getAggregates")}async getAggregateValueRanges(){return await this._startupResolver.promise,this._connection.invoke("controller.getAggregateValueRanges")}async mapValidDisplayIds(e){return await this._startupResolver.promise,this._connection.invoke("controller.mapValidDisplayIds",e)}async onEdits(e){return await this._startupResolver.promise,w(this._connection.invoke("controller.onEdits",e))}async enableEvent(e,t){return await this._startupResolver.promise,w(this._connection.invoke("controller.enableEvent",{name:e,value:t}))}pauseStream(){return w(this._connection.invoke("controller.pauseStream"))}resumeStream(){return w(this._connection.invoke("controller.resumeStream"))}async _startWorker(e){try{this._connection=await Z("Pipeline",{client:this.client,strategy:"dedicated",signal:e})}catch(t){X(t)}}};l([h()],E.prototype,"isReady",void 0),l([h()],E.prototype,"client",void 0),l([h()],E.prototype,"tileRenderer",null),E=l([T("esri.views.2d.layers.support.FeatureLayerProxy")],E);const Ce=E,Oe=1e-6;class Te{constructor(t){this._tiles=new Map,this.buffer=0,this.acquireTile=t.acquireTile,this.releaseTile=t.releaseTile,this.tileInfoView=t.tileInfoView,this.buffer=t.buffer}destroy(){}clear(){this._tiles.forEach(t=>this._releaseTile(t))}tileKeys(){const t=[];return this._tiles.forEach((i,r)=>t.push(r)),t}update(t){const i=this.tileInfoView.getTileCoverage(t.state,this.buffer,"closest"),{spans:r,lodInfo:s}=i,{level:n}=s,a=[],d=[],o=new Set,c=new Set;for(const{row:u,colFrom:_,colTo:b}of r)for(let g=_;g<=b;g++){const m=A.getId(n,u,s.normalizeCol(g),s.getWorldForColumn(g)),v=this._getOrAcquireTile(a,m);o.add(m),v.isReady?v.visible=!0:c.add(v.key)}return c.forEach(u=>this._addPlaceholders(o,u)),this._tiles.forEach(u=>{o.has(u.key.id)||(d.push(u.key.id),this._releaseTile(u))}),Y.pool.release(i),{hasMissingTiles:c.size>0,added:a,removed:d}}_getOrAcquireTile(t,i){if(!this._tiles.has(i)){const r=this.acquireTile(new A(i));t.push(i),this._tiles.set(i,r),r.visible=!1}return this._tiles.get(i)}_getTile(t){return this._tiles.get(t)}_releaseTile(t){this._tiles.delete(t.key.id),this.releaseTile(t)}_addPlaceholders(t,i){const r=this._addPlaceholderChildren(t,i);Math.abs(1-r)<Oe||this._addPlaceholderParent(t,i)||(this._getTile(i.id).visible=!0)}_addPlaceholderChildren(t,i){let r=0;return this._tiles.forEach(s=>{r+=this._addPlaceholderChild(t,s,i)}),r}_addPlaceholderChild(t,i,r){return i.key.level<=r.level||!i.hasData||!r.contains(i.key)?0:(i.visible=!0,t.add(i.key.id),1/(1<<2*(i.key.level-r.level)))}_addPlaceholderParent(t,i){let r=i.getParentKey(),s=0,n=null;for(;p(r);){if(t.has(r.id))return!0;const a=this._getTile(r.id);if(a!=null&&a.isReady)return a.visible=!0,t.add(a.key.id),!0;(a==null?void 0:a.hasData)&&a.patchCount>s&&(s=a.patchCount,n=a),r=r.getParentKey()}return!!n&&(n.visible=!0,t.add(n.key.id),!0)}}function M(e){return e&&"openPorts"in e}const I=ee.getLogger("esri.views.2d.layers.FeatureLayerView2D");let y=class extends be(Se(ce(Re))){constructor(){super(...arguments),this._pipelineIsUpdating=!0,this._commandsQueue=new qe({process:e=>{switch(e.type){case"processed-edit":return this._doEdit(e);case"refresh":return this._doRefresh(e.dataChanged);case"update":return this._doUpdate()}}}),this._visibilityOverrides=new Set,this._highlightIds=new Map,this._updateHighlight=te(async()=>this._proxy.setHighlight(Array.from(this._highlightIds.keys()))),this._uploadsLocked=!1,this._needsClusterSizeUpdate=!1,this.featureEffectView=new Ee,this._lastDefinitionExpression=null}destroy(){var e;J(this._updateClusterSizeTask,t=>t.remove()),(e=this._proxy)==null||e.destroy(),this._commandsQueue.destroy()}initialize(){this.addResolvingPromise(Promise.all([this._initProxy(),this._initServiceOptions()])),this.handles.add([this.on("valueRangesChanged",e=>{this._set("_aggregateValueRanges",e.valueRanges)}),U(()=>this.featureEffect,e=>{this.featureEffectView.featureEffect=e},{initial:!0,sync:!0})])}async _initProxy(){const e=this.layer;if("isTable"in e&&e.isTable)throw new k("featurelayerview:table-not-supported","table feature layer can't be displayed",{layer:this.layer});const t=e.type==="feature"||e.type==="subtype-group",i="capabilities"in e&&e.capabilities.operations.supportsQuery;if(t&&!i)throw new k("featurelayerview:query-not-supported","layer view requires a layer with query capability",{layer:e});this._proxy&&this._proxy.destroy();const r=this._createClientOptions();return this._set("_proxy",new Ce({client:r})),this._proxy.when()}async _initServiceOptions(){return this._set("_serviceOptions",await this._createServiceOptions()),this._serviceOptions}get orderByFields(){return this._serviceOptions.type!=="stream"&&this._serviceOptions.orderByFields}get labelsVisible(){const e=this.layer.type==="subtype-group"?this.layer.sublayers.items:[this.layer];return!this.suspended&&e.some(t=>t.labelingInfo&&t.labelsVisible)}get queryMode(){return this._serviceOptions.type}get renderingConfigHash(){if(!this.layer)return null;const e=this.availableFields,t=this.layer,i=this.view.floors,{definitionExpression:r}=t,s=this.layer.type!=="subtype-group"&&this.layer.labelsVisible&&this.layer.labelingInfo,n="renderer"in t&&t.renderer,a=t.type==="feature"?t.gdbVersion:void 0,d=t.type==="feature"&&t.historicMoment?t.historicMoment.getTime():void 0,{timeExtent:o}=this,c="customParameters"in t?JSON.stringify(t.customParameters):void 0,u="apiKey"in t?t.apiKey:void 0,_=t.type==="stream"?`${JSON.stringify(t.geometryDefinition)}${t.definitionExpression}`:null,b=JSON.stringify(this.clips),g=t.featureReduction&&t.featureReduction.toJSON(),m="orderBy"in this.layer&&JSON.stringify(this.layer.orderBy),v="sublayers"in this.layer&&this.layer.sublayers.items.reduce((B,F)=>B+`${F.visible?1:0}.${JSON.stringify(F.renderer)}.${F.labelsVisible}
.${JSON.stringify(F.labelingInfo)}`,""),R="subtypeCode"in this.layer&&this.layer.subtypeCode;return JSON.stringify({orderBy:m,sublayerHash:v,subtypeCode:R,filterHash:p(this.filter)&&this.filter.toJSON(),effectHash:p(this.featureEffect)&&this.featureEffect.toJSON(),streamFilter:_,gdbVersion:a,definitionExpression:r,historicMoment:d,availableFields:e,renderer:n,labelingInfo:s,timeExtent:o,floors:i,clipsHash:b,featureReduction:g,customParameters:c,apiKey:u})}highlight(e){let t;return e instanceof P?t=[e.getObjectId()]:typeof e=="number"||typeof e=="string"?t=[e]:Array.isArray(e)&&e.length>0?t=typeof e[0]=="number"||typeof e[0]=="string"?e:e.map(i=>i==null?void 0:i.getObjectId()):ie.isCollection(e)&&e.length>0&&(t=e.map(i=>i==null?void 0:i.getObjectId()).toArray()),t=t==null?void 0:t.filter(i=>i!=null),t&&t.length?(this._addHighlight(t),{remove:()=>this._removeHighlight(t)}):{remove:()=>{}}}hasHighlight(){return!!this._highlightIds.size}async hitTest(e,t){if(!this.tileRenderer)return null;const i=await this.tileRenderer.hitTest(t);if(i.length===0)return null;const{features:r,aggregates:s}=await this._proxy.getFeatures(i);return[...s.map(n=>this._createGraphicHit(e,L.fromJSON(n))),...r.map(n=>this._createGraphicHit(e,P.fromJSON(n)))]}async queryAggregates(){return(await this._proxy.getAggregates()).map(e=>L.fromJSON(e))}queryStatistics(){return this._proxy.queryStatistics()}async querySummaryStatistics(e,t,i){const r={...t,scale:this.view.scale};return this._proxy.querySummaryStatistics(this._cleanUpQuery(e),r,i)}async queryUniqueValues(e,t,i){const r={...t,scale:this.view.scale};return this._proxy.queryUniqueValues(this._cleanUpQuery(e),r,i)}async queryClassBreaks(e,t,i){const r={...t,scale:this.view.scale};return this._proxy.queryClassBreaks(this._cleanUpQuery(e),r,i)}async queryHistogram(e,t,i){const r={...t,scale:this.view.scale};return this._proxy.queryHistogram(this._cleanUpQuery(e),r,i)}queryFeatures(e,t){return this.queryFeaturesJSON(e,t).then(i=>{const r=H.fromJSON(i);return r.features.forEach(s=>this._setLayersForFeature(s)),r})}queryVisibleFeatures(e,t){return this._proxy.queryVisibleFeatures(this._cleanUpQuery(e),t).then(i=>{const r=H.fromJSON(i);return r.features.forEach(s=>this._setLayersForFeature(s)),r})}queryFeaturesJSON(e,t){return this._proxy.queryFeatures(this._cleanUpQuery(e),t)}queryObjectIds(e,t){return this._proxy.queryObjectIds(this._cleanUpQuery(e),t)}queryFeatureCount(e,t){return this._proxy.queryFeatureCount(this._cleanUpQuery(e),t)}queryExtent(e,t){return this._proxy.queryExtent(this._cleanUpQuery(e),t).then(i=>({count:i.count,extent:re.fromJSON(i.extent)}))}setVisibility(e,t){t?this._visibilityOverrides.delete(e):this._visibilityOverrides.add(e),this._update()}update(e){if(!this._tileStrategy||!this.tileRenderer)return;const{hasMissingTiles:t,added:i,removed:r}=this._tileStrategy.update(e);(i.length||r.length)&&this._proxy.updateTiles({added:i,removed:r}),t&&this.requestUpdate(),this.notifyChange("updating")}attach(){this.view.timeline.record(`${this.layer.title} (FeatureLayer) Attach`),this._tileStrategy=new Te({acquireTile:e=>this._acquireTile(e),releaseTile:e=>this._releaseTile(e),tileInfoView:this.view.featuresTilingScheme,buffer:0}),this.handles.add(U(()=>this.renderingConfigHash,()=>this._update(),se),"attach"),this.layer.type!=="stream"&&this.handles.add(this.layer.on("edits",e=>this._edit(e)),"attach")}detach(){var e;this._commandsQueue.clear(),(e=this._proxy)==null||e.stop(),this.container.removeAllChildren(),this.handles.remove("attach"),this.tileRenderer&&(this.tileRenderer.uninstall(this.container),this.tileRenderer=null),this._tileStrategy&&(this._tileStrategy.destroy(),this._tileStrategy=null),this._tileRendererHash=null}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}isUpdating(){var d;const e="renderer"in this.layer&&this.layer.renderer!=null,t=this._commandsQueue.updating,i=this._updatingRequiredFieldsPromise!=null,r=!this._proxy||!this._proxy.isReady,s=this._pipelineIsUpdating,n=this.tileRenderer==null||((d=this.tileRenderer)==null?void 0:d.updating),a=e&&(t||i||r||s||n);return S("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${a}
  -> hasRenderer ${e}
  -> hasPendingCommand ${t}
  -> updatingRequiredFields ${i}
  -> updatingProxy ${r}
  -> updatingPipeline ${s}
  -> updatingTileRenderer ${n}
`),a}_createClientOptions(){return{setUpdating:e=>{this._set("_pipelineIsUpdating",e)},emitEvent:e=>{this.emit(e.name,e.event)}}}async _detectQueryMode(e){var n;const t="path"in e,i="editingInfo"in this.layer&&((n=this.layer.editingInfo)==null?void 0:n.lastEditDate),r=!!this.layer.refreshInterval,s=!i&&r;if(t&&(this.layer.type==="feature"||this.layer.type==="subtype-group")&&this.layer.geometryType==="point"&&this.layer.capabilities.query.supportsPagination&&!this.layer.capabilities.operations.supportsEditing&&!s&&S("featurelayer-snapshot-enabled"))try{const a=await this.layer.queryFeatureCount();if(a<=S("featurelayer-snapshot-point-min-threshold"))return{mode:"snapshot",featureCount:a};const d=S("featurelayer-snapshot-point-max-threshold"),o=S("featurelayer-snapshot-point-coverage"),c=this.view.extent,u=C(this.layer.fullExtent),_=u==null?void 0:u.clone().intersection(c),b=p(_)?_.width*_.height:0,g=(u==null?void 0:u.width)*(u==null?void 0:u.height),m=g===0?0:b/g;if(a<=d&&m>=o)return{mode:"snapshot",featureCount:a}}catch(a){I.warn("mapview-feature-layer","Encountered an error when querying for featureCount",{error:a})}return{mode:"on-demand"}}async _createServiceOptions(){var v;const e=this.layer;if(e.type==="stream")return null;const{capabilities:t,objectIdField:i}=e,r=e.fields.map(R=>R.toJSON()),s=p(e.fullExtent)&&e.fullExtent.toJSON(),n=we(e.geometryType),a=e.timeInfo&&e.timeInfo.toJSON()||null,d=e.spatialReference?e.spatialReference.toJSON():null,o=e.type==="feature"?e.globalIdField:null;let c;e.type==="ogc-feature"?c=e.source.getFeatureDefinition():M(e.source)?c=await e.source.openPorts():e.parsedUrl&&(c=ae(e.parsedUrl),"dynamicDataSource"in e&&e.dynamicDataSource&&(c.query={layer:JSON.stringify({source:e.dynamicDataSource})}));const u="datesInUnknownTimezone"in this.layer&&this.layer.datesInUnknownTimezone,_=(v="subtypeField"in this.layer&&this.layer.subtypeField)!=null?v:null,{mode:b,featureCount:g}=await this._detectQueryMode(c);let m=this.layer.objectIdField;if(this.layer.type==="feature"&&p(this.layer.orderBy)&&this.layer.orderBy.length){const R=!this.layer.orderBy[0].valueExpression&&this.layer.orderBy[0].field;R&&(m=R)}return{type:b,timeReferenceUnknownClient:u,subtypeField:_,featureCount:g,globalIdField:o,maxRecordCount:t.query.maxRecordCount,tileMaxRecordCount:t.query.tileMaxRecordCount,capabilities:t,fields:r,fullExtent:s,geometryType:n,objectIdField:i,source:c,timeInfo:a,spatialReference:d,orderByFields:m}}async _createMemoryServiceOptions(e){const t=await e.openPorts();return{...this._createServiceOptions(),type:"memory",source:t}}_cleanUpQuery(e){const t=ne.from(e)||this.createQuery();return t.outSpatialReference||(t.outSpatialReference=this.view.spatialReference),t}async _update(){return this._commandsQueue.push({type:"update"})}async _edit(e){return this.suspended?void this._clearTiles():this._validateEdit(e)?this._commandsQueue.push({type:"edit",edits:e}):void 0}async doRefresh(e){if(this._tileStrategy.tileKeys().length)return this.suspended&&e?void this._clearTiles():this._commandsQueue.push({type:"refresh",dataChanged:e})}_clearTiles(){this._tileStrategy.tileKeys().length&&(this._proxy.updateTiles({added:[],removed:this._tileStrategy.tileKeys()}),this._tileStrategy.clear(),this.requestUpdate(),this._commandsQueue.clear(),this._update())}_validateEdit(e){const t="globalIdField"in this.layer&&this.layer.globalIdField,i=e.deletedFeatures.some(s=>s.objectId===-1||!s.objectId),r=t&&this.availableFields.includes(t);return i&&!r?(I.error(new k("mapview-apply-edits",`Editing the specified service requires the layer's globalIdField, ${t} to be included the layer's outFields for updates to be reflected on the map`)),null):e}async _doUpdate(){try{if(this.destroyed||!this._hasRequiredSupport(this.layer)||!this._tileStrategy)return;const{featureEffectView:e,filter:t}=this;await this._updateRequiredFields();const{renderer:i}=this._getEffectiveRenderer();this._set("_effectiveRenderer",i);const r=this._createSchemaConfig(),s=this._createConfiguration(r,t,e.filter),n=this._lastDefinitionExpression!==s.schema.source.definitionExpression;this._lastDefinitionExpression=s.schema.source.definitionExpression;const a=s.schema.tileRenderer,d=this._createTileRendererHash(a);if(this._serviceOptions.type==="snapshot"&&(s.schema.source.featureCount=this._serviceOptions.featureCount),d!==this._tileRendererHash){await this._initTileRenderer(a,i);const o=this.layer,c=o.type==="stream"?await this._initServiceOptions():this._serviceOptions;this.tileRenderer.onConfigUpdate(i),o.type!=="stream"&&M(o.source)&&(c.source=await o.source.openPorts());const u={added:this._tileStrategy.tileKeys(),removed:[]};await this._proxy.startup(this.view.featuresTilingScheme,s,c,u),this.hasHighlight()&&await this._proxy.setHighlight(Array.from(this._highlightIds.keys())),await this._onceTilesUpdated(),this.tileRenderer.onConfigUpdate(i)}else{this._serviceOptions.type==="snapshot"&&n&&(s.schema.source.featureCount=await this.layer.queryFeatureCount());const o=await this._proxy.update(s);(o.mesh||o.targets.aggregate)&&this._lockGPUUploads();try{await this._proxy.applyUpdate(o)}catch(c){x(c)||I.error(c)}(o.mesh||o.targets.aggregate)&&this._unlockGPUUploads(),this.tileRenderer.onConfigUpdate(i),this._updateClusterSizeVariable(),this._forceAttributeTextureUpload()}this._tileRendererHash=d,this.tileRenderer.invalidateLabels(),this.requestUpdate()}catch{}}async _doEdit(e){try{await this._proxy.onEdits(e)}catch(t){x(t)}}async _doRefresh(e){var t;this._lockGPUUploads();try{await this._proxy.refresh(e)}catch(i){x(i)}this._unlockGPUUploads(),(t=this.layer)!=null&&t.featureReduction&&this._updateClusterSizeVariable()}_updateClusterSizeVariable(){this._needsClusterSizeUpdate&&(this.tileRenderer.onConfigUpdate(this._effectiveRenderer),this._needsClusterSizeUpdate=!1)}_createUpdateClusterSizeTask(e,t){return U(()=>this._aggregateValueRanges,i=>{this._updateClusterEffectiveRendererSizeVariable(e,t,i),this._needsClusterSizeUpdate=!0,this._uploadsLocked||this._updateClusterSizeVariable()})}async _updateClusterEffectiveRendererSizeVariable(e,t,i){if(e.dynamicClusterSize&&"visualVariables"in e&&e.visualVariables){const r=pe(e.visualVariables);if(p(r)&&r.field==="cluster_count"){const s=e.visualVariables.indexOf(r);e.visualVariables[s]=ye(t,i);const n=e.clone();n.dynamicClusterSize=!0,this._set("_effectiveRenderer",n)}}}_getEffectiveRenderer(){var i;const e="renderer"in this.layer&&this.layer.renderer,t=this.layer.featureReduction;if(p(this._updateClusterSizeTask)&&(this._updateClusterSizeTask.remove(),this._updateClusterSizeTask=null),t&&"renderer"in t&&t.renderer){const r=[];for(const s of(i=t.fields)!=null?i:[])fe(r,s);return{renderer:t.renderer,aggregateFields:r,featureReduction:t}}if(t&&t.type==="cluster"&&_e(e)){const r=t,s=[],n=ge(s,e,r,this._aggregateValueRanges);return J(this._updateClusterSizeTask,a=>a.remove()),this._updateClusterSizeTask=this._createUpdateClusterSizeTask(n,r),{renderer:n,aggregateFields:s,featureReduction:t}}return{renderer:e,aggregateFields:[],featureReduction:null}}_acquireTile(e){const t=this.tileRenderer.acquireTile(e);return t.once("attach",()=>{this.requestUpdate()}),t}_releaseTile(e){this.tileRenderer.releaseTile(e)}async _initTileRenderer(e,t){const i=await xe(e,{layerView:this,tileInfoView:this.view.featuresTilingScheme,layer:this.layer});return this.tileRenderer&&(this._tileStrategy.clear(),this.tileRenderer.uninstall(this.container),this.tileRenderer.destroy(),this.tileRenderer=null),this.destroyed?null:(this._proxy.tileRenderer=i,this._set("tileRenderer",i),this.tileRenderer.install(this.container),this.tileRenderer.onConfigUpdate(t),this.requestUpdate(),this.tileRenderer)}_createTileRendererHash(e){return`${e.type}`}get hasFilter(){const e=!!("floorInfo"in this.layer&&this.layer.floorInfo&&this.view.floors&&this.view.floors.length);return!!this.filter||e||!!this._visibilityOverrides.size||!!this.timeExtent}_injectOverrides(e){const t=p(e)?e.timeExtent:null,i=p(this.timeExtent)&&p(t)?this.timeExtent.intersection(t):this.timeExtent||t;let r=null;const s="floorInfo"in this.layer&&this.layer.floorInfo;if(s){const a=p(e)&&e.where;r=this._addFloorFilterClause(a)}if(!this._visibilityOverrides.size&&!i&&!s)return p(e)?e.toJSON():null;(e=p(e)&&e.clone()||new oe).timeExtent=i,r&&(e.where=r);const n=e.toJSON();return n.hiddenIds=Array.from(this._visibilityOverrides),n}_addFloorFilterClause(e){var r;const t=this.layer;let i=e||"";if("floorInfo"in t&&t.floorInfo){let s=this.view.floors;if(!s||!s.length)return i;(r=t.floorInfo.viewAllLevelIds)!=null&&r.length&&(s=t.floorInfo.viewAllLevelIds);const n=s.filter(o=>o!=="").map(o=>"'"+o+"'");n.push("''");const a=t.floorInfo.floorField;let d="("+a+" IN ({ids}) OR "+a+" IS NULL)";if(d=d.replace("{ids}",n.join(", ")),p(i)&&i.includes(a)){let o=new RegExp("AND \\("+a+".*NULL\\)","g");i=i.replace(o,""),o=new RegExp("\\("+a+".*NULL\\)","g"),i=i.replace(o,""),i=i.replace(/\s+/g," ").trim()}i=i!==""?"("+i+") AND "+d:d}return i!==""?i:null}_createConfiguration(e,t,i){const r=this.layer.type==="feature"&&this.layer.historicMoment?this.layer.historicMoment.getTime():void 0,s=this.layer.type==="feature"?this.layer.gdbVersion:void 0,n=new Array(de),a=this._injectOverrides(t);n[0]=a,n[1]=p(i)?i.toJSON():null;const d=me(e);if(le(d))return null;const o=he("2d");return{availableFields:this.availableFields,gdbVersion:s,historicMoment:r,devicePixelRatio:window.devicePixelRatio||1,filters:n,schema:d,supportsTextureFloat:o.supportsTextureFloat,maxTextureSize:o.maxTextureSize}}_hasRequiredSupport(e){return!("renderer"in e)||ve(e.renderer)}_onceTilesUpdated(){return this.requestUpdate(),ue(()=>!this._pipelineIsUpdating)}_lockGPUUploads(){this.tileRenderer&&(this._uploadsLocked=!0,this.tileRenderer.lockGPUUploads())}_unlockGPUUploads(){this.tileRenderer&&(this._uploadsLocked=!1,this.tileRenderer.unlockGPUUploads())}_forceAttributeTextureUpload(){this.tileRenderer&&this.tileRenderer.forceAttributeTextureUpload()}_createSchemaConfig(){const e=this.layer.type==="feature"?this.layer.historicMoment:null,t=this.layer.type==="feature"?this.layer.gdbVersion:null;return{renderer:"renderer"in this.layer&&this.layer.renderer,spatialReference:this.layer.spatialReference,timeExtent:this.layer.timeExtent,definitionExpression:this.layer.definitionExpression,featureReduction:this.layer.featureReduction,fields:this.layer.fields,geometryType:this.layer.geometryType,historicMoment:e,labelsVisible:"labelsVisible"in this.layer&&this.layer.labelsVisible,labelingInfo:"labelingInfo"in this.layer&&this.layer.labelingInfo,availableFields:this.availableFields,featureEffect:this.featureEffect,filter:this.filter,gdbVersion:t,pixelBuffer:0,orderBy:"orderBy"in this.layer&&this.layer.orderBy?this.layer.orderBy:null,customParameters:{..."customParameters"in this.layer?this.layer.customParameters:void 0,token:"apiKey"in this.layer?this.layer.apiKey:void 0},subtypeCode:"subtypeCode"in this.layer?this.layer.subtypeCode:void 0,subtypeField:"subtypeField"in this.layer?this.layer.subtypeField:void 0}}_addHighlight(e){for(const t of e)if(this._highlightIds.has(t)){const i=this._highlightIds.get(t);this._highlightIds.set(t,i+1)}else this._highlightIds.set(t,1);this._updateHighlight().catch(t=>{x(t)||I.error(t)})}_removeHighlight(e){for(const t of e)if(this._highlightIds.has(t)){const i=this._highlightIds.get(t)-1;i===0?this._highlightIds.delete(t):this._highlightIds.set(t,i)}this._updateHighlight().catch(t=>{x(t)||I.error(t)})}_setLayersForFeature(e){const t=this.layer;e.layer=t,e.sourceLayer=t}_createGraphicHit(e,t){return this._setLayersForFeature(t),p(t.geometry)&&(t.geometry.spatialReference=this.view.spatialReference),{type:"graphic",graphic:t,layer:this.layer,mapPoint:e}}};l([h()],y.prototype,"_serviceOptions",void 0),l([h()],y.prototype,"_proxy",void 0),l([h()],y.prototype,"_pipelineIsUpdating",void 0),l([h()],y.prototype,"_effectiveRenderer",void 0),l([h()],y.prototype,"_aggregateValueRanges",void 0),l([h()],y.prototype,"_commandsQueue",void 0),l([h()],y.prototype,"featureEffectView",void 0),l([h()],y.prototype,"labelsVisible",null),l([h({readOnly:!0})],y.prototype,"queryMode",null),l([h()],y.prototype,"renderingConfigHash",null),l([h()],y.prototype,"tileRenderer",void 0),l([h()],y.prototype,"updating",void 0),y=l([T("esri.views.2d.layers.FeatureLayerView2D")],y);const rt=y;export{rt as default};
