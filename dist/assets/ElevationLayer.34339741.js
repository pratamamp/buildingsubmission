import{h as g,r as c,s as w,e$ as _,f0 as S,f1 as T,f2 as $,f3 as x,f as b,aQ as E,U as d,eg as I,al as h,q as u,$ as s,a0 as o,er as D,f4 as V,f5 as L,a1 as O,f6 as A}from"./index.52935b46.js";import{s as j}from"./ArcGISCachedService.61d2d389.js";import{n as C}from"./WorkerHandle.a8d6acef.js";import"./TilemapCache.ae39b849.js";class y extends C{constructor(e=null){super("LercWorker","_decode",{_decode:r=>[r.buffer]},e,{strategy:"dedicated"}),this.schedule=e,this.ref=0}decode(e,r,i){return e&&e.byteLength!==0?this.invoke({buffer:e,options:r},i):Promise.resolve(null)}release(){--this.ref<=0&&(p.forEach((e,r)=>{e===this&&p.delete(r)}),this.destroy())}}const p=new Map;function P(t=null){let e=p.get(g(t));return e||(c(t)?(e=new y(r=>t.schedule(r)),p.set(t,e)):(e=new y,p.set(null,e))),++e.ref,e}const v=w.getLogger("esri.layers.ElevationLayer");let a=class extends j(_(S(T($(A))))){constructor(...t){super(...t),this.copyright=null,this.heightModelInfo=null,this.path=null,this.opacity=1,this.operationalLayerType="ArcGISTiledElevationServiceLayer",this.sourceJSON=null,this.type="elevation",this.url=null,this.version=null,this._lercDecoder=P()}normalizeCtorArgs(t,e){return typeof t=="string"?{url:t,...e}:t}destroy(){this._lercDecoder=x(this._lercDecoder)}set minScale(t){this.constructed&&v.warn(`${this.declaredClass}.minScale support has been removed (since 4.5)`)}get minScale(){}set maxScale(t){this.constructed&&v.warn(`${this.declaredClass}.maxScale support has been removed (since 4.5)`)}get maxScale(){}readVersion(t,e){let r=e.currentVersion;return r||(r=9.3),r}load(t){const e=c(t)?t.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"],supportsData:!1,validateItem:r=>{for(let i=0;i<r.typeKeywords.length;i++)if(r.typeKeywords[i].toLowerCase()==="elevation 3d layer")return!0;throw new b("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}' ",{type:"Image Service",expectedType:"Image Service Elevation 3D Layer"})}},t).catch(E).then(()=>this._fetchImageService(e))),Promise.resolve(this)}fetchTile(t,e,r,i){const n=c((i=i||{signal:null}).signal)?i.signal:i.signal=new AbortController().signal,m={responseType:"array-buffer",signal:n},f={noDataValue:i.noDataValue,returnFileInfo:!0};return this.load().then(()=>this._fetchTileAvailability(t,e,r,i)).then(()=>d(this.getTileUrl(t,e,r),m)).then(l=>this._lercDecoder.decode(l.data,f,n)).then(l=>({values:l.pixelData,width:l.width,height:l.height,maxZError:l.fileInfo.maxZError,noDataValue:l.noDataValue,minValue:l.minValue,maxValue:l.maxValue}))}getTileUrl(t,e,r){const i=!this.tilemapCache&&this.supportsBlankTile,n=I({...this.parsedUrl.query,blankTile:!i&&null});return`${this.parsedUrl.path}/tile/${t}/${e}/${r}${n?"?"+n:""}`}async queryElevation(t,e){const{ElevationQuery:r}=await h(()=>import("./ElevationQuery.7c5ad4b2.js"),["assets/ElevationQuery.7c5ad4b2.js","assets/index.52935b46.js","assets/index.be38f7b7.css"]);return u(e),new r().query(this,t,e)}async createElevationSampler(t,e){const{ElevationQuery:r}=await h(()=>import("./ElevationQuery.7c5ad4b2.js"),["assets/ElevationQuery.7c5ad4b2.js","assets/index.52935b46.js","assets/index.be38f7b7.css"]);return u(e),new r().createSampler(this,t,e)}_fetchTileAvailability(t,e,r,i){return this.tilemapCache?this.tilemapCache.fetchAvailability(t,e,r,i):Promise.resolve("unknown")}async _fetchImageService(t){if(this.sourceJSON)return this.sourceJSON;const e={query:{f:"json",...this.parsedUrl.query},responseType:"json",signal:t},r=await d(this.parsedUrl.path,e);r.ssl&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=r.data,this.read(r.data,{origin:"service",url:this.parsedUrl})}get hasOverriddenFetchTile(){return!this.fetchTile.__isDefault__}};s([o({json:{read:{source:"copyrightText"}}})],a.prototype,"copyright",void 0),s([o({readOnly:!0,type:V})],a.prototype,"heightModelInfo",void 0),s([o({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],a.prototype,"path",void 0),s([o({type:["show","hide"]})],a.prototype,"listMode",void 0),s([o({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],a.prototype,"minScale",null),s([o({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],a.prototype,"maxScale",null),s([o({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],a.prototype,"opacity",void 0),s([o({type:["ArcGISTiledElevationServiceLayer"]})],a.prototype,"operationalLayerType",void 0),s([o()],a.prototype,"sourceJSON",void 0),s([o({json:{read:!1},value:"elevation",readOnly:!0})],a.prototype,"type",void 0),s([o(L)],a.prototype,"url",void 0),s([o()],a.prototype,"version",void 0),s([D("version",["currentVersion"])],a.prototype,"readVersion",null),a=s([O("esri.layers.ElevationLayer")],a),a.prototype.fetchTile.__isDefault__=!0;const N=a;export{N as default};
