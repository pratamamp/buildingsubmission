import{mc as l,aU as h,aW as u,aX as m,md as f,me as p,mf as n,ft as a}from"./index.ffdd6b96.js";const U={readOnly:!0,get(){return l(this.view)}};var s;(function(t){t[t.Auto=0]="Auto",t[t.Euclidean=1]="Euclidean",t[t.Geodesic=2]="Geodesic"})(s||(s={}));function P(t,e){if(h(e,0,0,0),t.length>0){for(let r=0;r<t.length;++r)u(e,e,t[r]);m(e,e,1/t.length)}}function v(t,e,r,i){i.projectToRenderScreen(t,c),i.projectToRenderScreen(e,o),f(r,d,_),p(r,r)}const c=n(),_=c,o=n(),d=o;class z{constructor(e=null){this.spatialReference=e}get spatialReference(){return this._spatialReference}set spatialReference(e){e!==this._spatialReference&&(this._spatialReference=e,this._updateNormalizationFactors())}normalizeDistance(e){return e*this._metersPerDistanceUnit}normalizeElevation(e){return e*this._metersPerElevationUnit}normalizeArea(e){return e*this._squareMetersPerAreaUnit}_updateNormalizationFactors(){this._metersPerDistanceUnit=a(this._spatialReference,1),this._metersPerElevationUnit=a(this._spatialReference,1),this._squareMetersPerAreaUnit=this._metersPerDistanceUnit*this._metersPerDistanceUnit}}export{P as c,s as e,v as i,U as r,z as t};
