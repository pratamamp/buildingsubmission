import{ai as R,e as s,g as n,n as x,y as E,H as $,i as g,l as b,c9 as B,aw as k,w as q,C as D,b5 as I,I as c,Q as _,U as T,pN as z,J as P,j as V}from"./index.deeeec5f.js";import{y as A,d as U}from"./RasterVFDisplayObject.c4dbe1d6.js";import{f as C}from"./LayerView2D.8d224f69.js";import{a as F}from"./BaseGraphicContainer.30b6abe2.js";import{n as M}from"./HighlightGraphicContainer.c04cf1ad.js";import{f as O}from"./pixelUtils.c2c7174c.js";import{t as j}from"./BitmapContainer.17933f85.js";import{s as J}from"./Container.de644bec.js";import{i as H}from"./Bitmap.b3f0942b.js";import{S as N}from"./ExportStrategy.a2da4dd7.js";import{F as G}from"./rasterProjectionHelper.30b9d3c4.js";import{M as L,m as W}from"./dataUtils.e47ac8b7.js";import{m as Q}from"./brushes.cdb6e6bc.js";import{I as S}from"./Utils.6b087bd2.js";import{a as K}from"./WGLContainer.f52f7b24.js";import{m as X}from"./ImageryLayerView.669e5459.js";import{u as Y}from"./LayerView.01f05af6.js";import{i as Z}from"./RefreshableLayerView.92abe7be.js";import"./CIMSymbolHelper.2bc40e2c.js";import"./BidiEngine.ec67919b.js";import"./enums.05a6ea95.js";import"./alignmentUtils.63b4d661.js";import"./definitions.8fc39ccc.js";import"./number.08b65821.js";import"./GeometryUtils.814cb798.js";import"./normalizeUtilsSync.ca8a8b3b.js";import"./FeatureContainer.3c56815a.js";import"./visualVariablesUtils.d326aebf.js";import"./visualVariablesUtils.2bf407d6.js";import"./TileContainer.6a572bcb.js";import"./utils.fbbc4a0f.js";import"./MaterialKey.27dab64d.js";import"./Matcher.2e134730.js";import"./tileUtils.82ba7e93.js";import"./TileClipper.f6e92305.js";import"./Geometry.b68345ae.js";import"./GeometryUtils.8166011b.js";import"./cimAnalyzer.7a950ffb.js";import"./ExpandedCIM.2d2ac98b.js";import"./schemaUtils.7579904c.js";import"./createSymbolSchema.e77457a9.js";import"./MD5.97b39efc.js";import"./util.eeacce14.js";import"./ComputedAttributeStorage.61fc89b2.js";import"./centroid.6defcca4.js";import"./GraphicsView.e25f5bad.js";import"./EffectView.b3326d65.js";import"./ProgramTemplate.44aa5358.js";import"./StyleDefinition.5774ff26.js";import"./popupUtils.06b99c9e.js";const ee=R.getLogger("esri.views.2d.layers.imagery.ImageryView2D");let h=class extends E{constructor(){super(...arguments),this.attached=!1,this.container=new J,this.updateRequested=!1,this.type="imagery",this._bitmapView=new j}destroy(){this.attached&&(this.detach(),this.attached=!1),this.updateRequested=!1}get updating(){return!this.attached||this.isUpdating()}update(e){this.strategy.update(e).catch(t=>{$(t)||ee.error(t)})}hitTest(e){return new g({attributes:{},geometry:e.clone(),layer:this.layer})}attach(){this.container.addChild(this._bitmapView);const e=this.layer.version>=10,t=this.layer.version>=10.1?this.layer.imageMaxHeight:2048,i=this.layer.version>=10.1?this.layer.imageMaxWidth:2048;this.strategy=new N({container:this._bitmapView,imageNormalizationSupported:e,imageMaxHeight:t,imageMaxWidth:i,fetchSource:this._fetchImage.bind(this),requestUpdate:()=>this.requestUpdate()})}detach(){this.strategy.destroy(),this._bitmapView.removeAllChildren(),this.container.removeAllChildren(),this.updateRequested=!1}redraw(){this.strategy.updateExports(e=>{e.source instanceof HTMLImageElement?e.requestRender():this.layer.applyRenderer({pixelBlock:e.source.pixelBlock}).then(t=>{const i=e.source;i.pixelBlock=t.pixelBlock,i.filter=r=>this.layer.applyFilter(r),this.container.requestRender()})})}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.view.requestUpdate())}isUpdating(){return this.strategy.updating||this.updateRequested}getPixelData(){if(this.updating)return null;const e=this.strategy.bitmaps;if(e.length===1&&e[0].source)return{extent:e[0].source.extent,pixelBlock:e[0].source.originalPixelBlock};if(e.length>1){const t=this.view.extent,i=e.map(a=>a.source).filter(a=>a.extent&&a.extent.intersects(t)).map(a=>({extent:a.extent,pixelBlock:a.originalPixelBlock})),r=O(i,t);return b(r)?{extent:r.extent,pixelBlock:r.pixelBlock}:null}return null}_fetchImage(e,t,i,r){return(r=r||{}).timeExtent=this.timeExtent,r.requestAsImageElement=!0,this.layer.fetchImage(e,t,i,r).then(a=>a.imageElement?a.imageElement:this.layer.applyRenderer(a.pixelData,{signal:r.signal}).then(o=>{const l=new H(o.pixelBlock,o.extent.clone(),a.pixelData.pixelBlock);return l.filter=y=>this.layer.applyFilter(y),l}))}};s([n()],h.prototype,"attached",void 0),s([n()],h.prototype,"container",void 0),s([n()],h.prototype,"layer",void 0),s([n()],h.prototype,"strategy",void 0),s([n()],h.prototype,"timeExtent",void 0),s([n()],h.prototype,"view",void 0),s([n()],h.prototype,"updateRequested",void 0),s([n()],h.prototype,"updating",null),s([n()],h.prototype,"type",void 0),h=s([x("esri.views.2d.layers.imagery.ImageryView2D")],h);const te=h;class ie extends K{constructor(){super(...arguments),this.symbolTypes=["triangle"]}get requiresDedicatedFBO(){return!1}prepareRenderPasses(t){const i=t.registerRenderPass({name:"imagery (vf)",brushes:[Q],target:()=>this.children,drawPhase:S.MAP});return[...super.prepareRenderPasses(t),i]}doRender(t){this.visible&&t.drawPhase===S.MAP&&this.symbolTypes.forEach(i=>{t.renderPass=i,super.doRender(t)})}}const re=R.getLogger("esri.views.2d.layers.imagery.VectorFieldView2D");let d=class extends E{constructor(e){super(e),this.update=B((t,i)=>this._update(t,i).catch(r=>{$(r)||re.error(r)}))}get updating(){return!!this._loading}redraw(e){if(!this.container.children.length)return;const t=this.container.children[0];t.symbolizerParameters=e,t.invalidateVAO(),this.container.symbolTypes=e.style==="wind_speed"?["scalar","triangle"]:e.style==="simple_scalar"?["scalar"]:["triangle"],this.container.requestRender()}async _update(e,t,i){if(!e.stationary)return;const{extent:r,spatialReference:a}=e.state,o=new k({xmin:r.xmin,ymin:r.ymin,xmax:r.xmax,ymax:r.ymax,spatialReference:a}),[l,y]=e.state.size;this._loading=this.fetchPixels(o,l,y,i);const w=await this._loading;this._addToDisplay(w,t,e.state),this._loading=null}_addToDisplay(e,t,i){if(q(e.pixelBlock))return this.container.children.forEach(l=>l.destroy()),void this.container.removeAllChildren();const{extent:r,pixelBlock:a}=e,o=new A(a);o.offset=[0,0],o.symbolizerParameters=t,o.rawPixelData=e,o.invalidateVAO(),o.x=r.xmin,o.y=r.ymax,o.pixelRatio=i.pixelRatio,o.rotation=i.rotation,o.resolution=i.resolution,o.width=a.width*t.symbolTileSize,o.height=a.height*t.symbolTileSize,this.container.children.forEach(l=>l.destroy()),this.container.removeAllChildren(),this.container.symbolTypes=t.style==="wind_speed"?["scalar","triangle"]:t.style==="simple_scalar"?["scalar"]:["triangle"],this.container.addChild(o)}};s([n()],d.prototype,"fetchPixels",void 0),s([n()],d.prototype,"container",void 0),s([n()],d.prototype,"_loading",void 0),s([n()],d.prototype,"updating",null),d=s([x("esri.views.2d.layers.imagery.ImageryVFStrategy")],d);const se=d;let p=class extends D{constructor(){super(...arguments),this.attached=!1,this.container=new ie,this.type="imageryVF",this._dataParameters={exportParametersVersion:0,bbox:"",symbolTileSize:0,time:""},this._fetchpixels=async(e,t,i,r)=>{const a=await this._projectFullExtentPromise,{symbolTileSize:o}=this.layer.renderer,{extent:l,width:y,height:w}=L(e,t,i,o,a);if(b(a)&&!a.intersects(e))return{extent:l,pixelBlock:null};const v={bbox:`${l.xmin}, ${l.ymin}, ${l.xmax}, ${l.ymax}`,exportParametersVersion:this.layer.exportImageServiceParameters.version,symbolTileSize:o,time:JSON.stringify(this.timeExtent||"")};if(this._canReuseVectorFieldData(v)){const m=this.getPixelData();if(b(m)&&`${m.extent.xmin}, ${m.extent.ymin}, ${m.extent.xmax}, ${m.extent.ymax}`===v.bbox)return m}const{pixelData:f}=await this.layer.fetchImage(l,y,w,{timeExtent:this.timeExtent,requestAsImageElement:!1,signal:r});return this._dataParameters=v,q(f.pixelBlock)?{extent:l,pixelBlock:null}:{extent:l,pixelBlock:this.layer.rasterInfo.dataType==="vector-uv"?I(W(f.pixelBlock,"vector-uv")):f.pixelBlock}}}get updating(){return!this.attached||this._strategy.updating}attach(){this._projectFullExtentPromise=this._getProjectedFullExtent(this.view.spatialReference),this._strategy=new se({container:this.container,fetchPixels:this._fetchpixels}),this.handles.add(c(()=>this.layer.renderer,e=>this._updateSymbolizerParams(e),_),"vector-field-view-update")}detach(){this._strategy.destroy(),this.container.children.forEach(e=>e.destroy()),this.container.removeAllChildren(),this.handles.remove("vector-field-view-update"),this._strategy=this.container=this._projectFullExtentPromise=null}getPixelData(){if(this.updating||!this.container.children.length)return null;const{extent:e,pixelBlock:t}=this.container.children[0].rawPixelData;return{extent:e,pixelBlock:t}}hitTest(e){return new g({attributes:{},geometry:e.clone(),layer:this.layer})}update(e){this._strategy.update(e,this._symbolizerParams)}redraw(){this._updateSymbolizerParams(this.layer.renderer),this._strategy.redraw(this._symbolizerParams)}_canReuseVectorFieldData(e){const t=this._dataParameters.exportParametersVersion===e.exportParametersVersion,i=this._dataParameters.time===e.time,r=this._dataParameters.symbolTileSize===e.symbolTileSize,a=this._dataParameters.bbox===e.bbox;return t&&i&&r&&a}async _getProjectedFullExtent(e){try{return await G(this.layer.fullExtent,e)}catch{try{const i=(await T(this.layer.url,{query:{option:"footprints",outSR:e.wkid||JSON.stringify(e.toJSON()),f:"json"}})).data.featureCollection.layers[0].layerDefinition.extent;return i?k.fromJSON(i):null}catch{return null}}}_updateSymbolizerParams(e){e.type==="vector-field"&&(this._symbolizerParams=this.layer.symbolizer.generateWebGLParameters({pixelBlock:null}))}};s([n()],p.prototype,"attached",void 0),s([n()],p.prototype,"container",void 0),s([n()],p.prototype,"layer",void 0),s([n()],p.prototype,"timeExtent",void 0),s([n()],p.prototype,"type",void 0),s([n()],p.prototype,"view",void 0),s([n()],p.prototype,"updating",null),p=s([x("esri.views.2d.layers.imagery.VectorFieldView2D")],p);const ae=p;let u=class extends X(Z(C(Y))){constructor(){super(...arguments),this._exportImageVersion=-1,this._highlightGraphics=new z,this.subview=null}get pixelData(){return this.updating?null:"getPixelData"in this.subview?this.subview.getPixelData():null}get updating(){return!!(!this.subview||"updating"in this.subview&&this.subview.updating)}async hitTest(e,t){return this.subview?[{type:"graphic",graphic:this.subview.hitTest(e),layer:this.layer,mapPoint:e}]:null}update(e){var t;(t=this.subview)==null||t.update(e)}attach(){this.layer.increaseRasterJobHandlerUsage(),this._setSubView(),this.view&&(this._highlightView=new F({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new M(this.view.featuresTilingScheme)}),this.container.addChild(this._highlightView.container)),this.handles.add([c(()=>{var e;return(e=this.layer.blendMode)!=null?e:"normal"},e=>this.subview.container.blendMode=e,_),c(()=>{var e;return(e=this.layer.effect)!=null?e:null},e=>this.subview.container.effect=e,_),c(()=>this.layer.exportImageServiceParameters.version,e=>{e&&this._exportImageVersion!==e&&(this._exportImageVersion=e,this.requestUpdate())},P),c(()=>this.timeExtent,e=>{this.subview.timeExtent=e,"redraw"in this.subview?this.requestUpdate():this.subview.redrawOrRefetch()},P),this.layer.on("redraw",()=>{"redraw"in this.subview?this.subview.redraw():this.subview.redrawOrRefetch()}),c(()=>this.layer.renderer,()=>this._setSubView())],"imagerylayerview-update")}detach(){var e,t;this.layer.decreaseRasterJobHandlerUsage(),this.container.removeAllChildren(),this._detachSubview(this.subview),(e=this.subview)==null||e.destroy(),this.handles.remove("imagerylayerview-update"),this.subview=null,(t=this._highlightView)==null||t.destroy(),this._exportImageVersion=-1}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}highlight(e,t){if(!((Array.isArray(e)?e[0]:V.isCollection(e)?e.getItemAt(0):e)instanceof g))return{remove:()=>{}};let i=[];return Array.isArray(e)||V.isCollection(e)?i=e.map(r=>r.clone()):e instanceof g&&(i=[e.clone()]),this._highlightGraphics.addMany(i),{remove:()=>{this._highlightGraphics.removeMany(i)}}}async doRefresh(){this.requestUpdate()}isUpdating(){return!this.subview||this.subview.updating}_setSubView(){var i,r;if(!this.view)return;const e=(i=this.layer.renderer)==null?void 0:i.type;let t="imagery";if(e==="vector-field"?t="imageryVF":e==="flow"&&(t="flow"),this.subview){if(this.subview.type===t)return this._attachSubview(this.subview),void(this.subview.type==="flow"&&this.subview.redrawOrRefetch());this._detachSubview(this.subview),(r=this.subview)==null||r.destroy()}this.subview=t==="imagery"?new te({layer:this.layer,view:this.view,timeExtent:this.timeExtent}):t==="imageryVF"?new ae({layer:this.layer,view:this.view,timeExtent:this.timeExtent}):new U({layer:this.layer,layerView:this}),this._attachSubview(this.subview),this.requestUpdate()}_attachSubview(e){e&&!e.attached&&(e.attach(),e.attached=!0,this.container.addChildAt(e.container,0),e.container.blendMode=this.layer.blendMode,e.container.effect=this.layer.effect)}_detachSubview(e){e!=null&&e.attached&&(this.container.removeChild(e.container),e.detach(),e.attached=!1)}};s([n()],u.prototype,"pixelData",null),s([n({readOnly:!0})],u.prototype,"updating",null),s([n()],u.prototype,"subview",void 0),u=s([x("esri.views.2d.layers.ImageryLayerView2D")],u);const it=u;export{it as default};
