import{oF as w,j as S,c as T,U as _,aR as m,e as i,g as o,n as u,wj as O,fP as $,fQ as x,fR as L,vt as I,fS as M,wk as A,u as N,aH as b,J as j,eJ as J,e0 as P,l as U,w as D,wl as h,s as d,wm as K,wn as V,wo as R,wp as E,im as z,fW as F,vP as k,M as C}from"./index.ffdd6b96.js";import{f as y}from"./SceneModification.c6dd1acf.js";var a;let n=a=class extends w(S.ofType(y)){constructor(e){super(e),this.url=null}clone(){return new a({url:this.url,items:this.items.map(e=>e.clone())})}toJSON(e){return this.toArray().map(s=>s.toJSON(e)).filter(s=>!!s.geometry)}static fromJSON(e,s){const r=new a;for(const p of e)r.add(y.fromJSON(p,s));return r}static async fromUrl(e,s,r){const p={url:T(e),origin:"service"},v=await _(e,{responseType:"json",signal:m(r,"signal")}),g=s.toJSON(),l=[];for(const c of v.data)l.push(y.fromJSON({...c,geometry:{...c.geometry,spatialReference:g}},p));return new a({url:e,items:l})}};i([o({type:String})],n.prototype,"url",void 0),n=a=i([u("esri.layers.support.SceneModifications")],n);const f=n;let t=class extends O($(x(L(I(M(A(C))))))){constructor(...e){super(...e),this._handles=new N,this.geometryType="mesh",this.operationalLayerType="IntegratedMeshLayer",this.type="integrated-mesh",this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.profile="mesh-pyramids",this.modifications=null,this._modificationsSource=null,this.elevationInfo=null,this.path=null}destroy(){this._handles.destroy()}initialize(){this._handles.add(b(()=>this.modifications,"after-changes",()=>this.modifications=this.modifications,j))}normalizeCtorArgs(e,s){return typeof e=="string"?{url:e,...s}:e}readModifications(e,s,r){this._modificationsSource={url:J(e,r),context:r}}async load(e){return this.addResolvingPromise(this._doLoad(e)),this}async _doLoad(e){const s=m(e,"signal");try{await this.loadFromPortal({supportedTypes:["Scene Service"]},e)}catch(r){P(r)}if(await this._fetchService(s),U(this._modificationsSource)){const r=await f.fromUrl(this._modificationsSource.url,this.spatialReference,e);this.setAtOrigin("modifications",r,this._modificationsSource.context.origin),this._modificationsSource=null}await this._fetchIndexAndUpdateExtent(this.nodePages,s)}beforeSave(){if(!D(this._modificationsSource))return this.load().then(()=>{},()=>{})}async saveAs(e,s){return this._debouncedSaveOperations(h.SAVE_AS,{...s,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"};return this._debouncedSaveOperations(h.SAVE,e)}validateLayer(e){if(e.layerType&&e.layerType!=="IntegratedMesh")throw new d("integrated-mesh-layer:layer-type-not-supported","IntegratedMeshLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new d("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new d("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"})}_getTypeKeywords(){return["IntegratedMeshLayer"]}};i([o({type:String,readOnly:!0})],t.prototype,"geometryType",void 0),i([o({type:["show","hide"]})],t.prototype,"listMode",void 0),i([o({type:["IntegratedMeshLayer"]})],t.prototype,"operationalLayerType",void 0),i([o({json:{read:!1},readOnly:!0})],t.prototype,"type",void 0),i([o({type:K,readOnly:!0})],t.prototype,"nodePages",void 0),i([o({type:[V],readOnly:!0})],t.prototype,"materialDefinitions",void 0),i([o({type:[R],readOnly:!0})],t.prototype,"textureSetDefinitions",void 0),i([o({type:[E],readOnly:!0})],t.prototype,"geometryDefinitions",void 0),i([o({readOnly:!0})],t.prototype,"serviceUpdateTimeStamp",void 0),i([o({type:f}),z({origins:["web-scene","portal-item"],type:"resource",prefix:"modifications"})],t.prototype,"modifications",void 0),i([F(["web-scene","portal-item"],"modifications")],t.prototype,"readModifications",null),i([o(k)],t.prototype,"elevationInfo",void 0),i([o({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],t.prototype,"path",void 0),t=i([u("esri.layers.IntegratedMeshLayer")],t);const W=t;export{W as default};
