import{cq as l,eA as m,r as o,S as u,t as _,R as g,$ as n,a0 as d,a1 as w}from"./index.52935b46.js";import{b as f,h as y,O as k,g as v,a as M,c as V,D as G}from"./Stop.a21d58f2.js";import{f as I}from"./LayerView2D.9ada509f.js";import{i as F}from"./GraphicContainer.49102c35.js";import{a as H}from"./BaseGraphicContainer.4e263d20.js";import{u as C}from"./LayerView.5d769fe2.js";import"./utils.88e80f44.js";import"./EffectView.d573d8e0.js";import"./Utils.e2c1ea7d.js";import"./number.08b65821.js";import"./enums.05a6ea95.js";import"./enums.de935fa5.js";import"./Texture.7634927e.js";import"./VertexElementDescriptor.d386088d.js";import"./MaterialKey.60b69a2c.js";import"./alignmentUtils.63b4d661.js";import"./definitions.6dca4f7b.js";import"./CIMSymbolHelper.ae274396.js";import"./BidiEngine.ec67919b.js";import"./floatRGBA.5328f61e.js";import"./GeometryUtils.814cb798.js";import"./normalizeUtilsSync.ca14d31b.js";import"./VertexArrayObject.b7add78f.js";import"./FeatureContainer.dae5c06c.js";import"./TileContainer.16d059f5.js";import"./WGLContainer.3dee497f.js";import"./pixelUtils.2d74e066.js";import"./vec4f32.8f10672a.js";import"./ProgramTemplate.a2b1ea90.js";import"./StyleDefinition.5774ff26.js";import"./config.40d47db8.js";import"./GeometryUtils.8166011b.js";import"./earcut.d30cbec0.js";import"./visualVariablesUtils.53aa19cb.js";import"./visualVariablesUtils.baa0fa5a.js";import"./Matcher.336089a0.js";import"./tileUtils.a9ad5e9f.js";import"./TileClipper.99759c1f.js";import"./Geometry.b68345ae.js";import"./cimAnalyzer.8ff78478.js";import"./callExpressionWithFeature.30f2ad17.js";import"./ExpandedCIM.b6786c8d.js";import"./devEnvironmentUtils.8c6e6b72.js";import"./schemaUtils.d87fe48b.js";import"./createSymbolSchema.2d8e0797.js";import"./MD5.97b39efc.js";import"./util.7bf54bbf.js";import"./ComputedAttributeStorage.11eabc3d.js";import"./centroid.296f6ecc.js";import"./vec3f32.0772c8d8.js";const b=Object.freeze({remove(){},pause(){},resume(){}}),A=["route-info","direction-line","direction-point","polygon-barrier","polyline-barrier","point-barrier","stop"],a={graphic:null,property:null,oldValue:null,newValue:null};function c(t){return t instanceof f||t instanceof y||t instanceof k||t instanceof v||t instanceof M||t instanceof V||t instanceof G}function U(t){return l.isCollection(t)&&t.length&&c(t.getItemAt(0))}function $(t){return Array.isArray(t)&&t.length&&c(t[0])}let h=class extends I(C){constructor(){super(...arguments),this._graphics=new l,this._highlightIds=new Map,this._networkFeatureMap=new Map,this._networkGraphicMap=new Map}get _routeItems(){return new m({getCollections:()=>[o(this.layer.routeInfo)?new l([this.layer.routeInfo]):null,this.layer.directionLines,this.layer.directionPoints,this.layer.polygonBarriers,this.layer.polylineBarriers,this.layer.pointBarriers,this.layer.stops]})}initialize(){this.updatingHandles.addOnCollectionChange(()=>this._routeItems,t=>this._routeItemsChanged(t),u)}destroy(){this.handles.removeAll(),this.updatingHandles.removeAll(),this._networkFeatureMap.clear(),this._networkGraphicMap.clear(),this._graphics.removeAll()}attach(){this._createGraphicsView()}detach(){this._destroyGraphicsView()}async fetchPopupFeatures(t){return this._graphicsView.hitTest(t).filter(i=>!!i.popupTemplate)}highlight(t){let i;i=c(t)?[this._getNetworkFeatureUid(t)]:$(t)?t.map(r=>this._getNetworkFeatureUid(r)):U(t)?t.map(r=>this._getNetworkFeatureUid(r)).toArray():[t.uid];const e=i.filter(o);return e.length?(this._addHighlight(e),{remove:()=>this._removeHighlight(e)}):b}async hitTest(t,i){if(this.suspended)return null;const e=this._graphicsView.hitTest(t).filter(o).map(s=>this._networkGraphicMap.get(s));if(!e.length)return null;const{layer:r}=this;return e.reverse().map(s=>({type:"route",layer:r,mapPoint:t,networkFeature:s}))}isUpdating(){return this._graphicsView.updating}moveStart(){}moveEnd(){}update(t){this._graphicsView.processUpdate(t)}viewChange(){this._graphicsView.viewChange()}_addHighlight(t){for(const i of t)if(this._highlightIds.has(i)){const e=this._highlightIds.get(i);this._highlightIds.set(i,e+1)}else this._highlightIds.set(i,1);this._updateHighlight()}_createGraphic(t){const i=t.toGraphic();return i.layer=this.layer,i.sourceLayer=this.layer,i}_createGraphicsView(){const t=this.view,i=()=>this.requestUpdate(),e=new F(t.featuresTilingScheme);this._graphicsView=new H({container:e,graphics:this._graphics,requestUpdateCallback:i,view:t}),this.container.addChild(e),this._updateHighlight()}_destroyGraphicsView(){this.container.removeChild(this._graphicsView.container),this._graphicsView.destroy()}_getDrawOrder(t){const i=this._networkGraphicMap.get(t);return A.indexOf(i.type)}_getNetworkFeatureUid(t){return this._networkFeatureMap.has(t)?this._networkFeatureMap.get(t).uid:null}_removeHighlight(t){for(const i of t)if(this._highlightIds.has(i)){const e=this._highlightIds.get(i)-1;e===0?this._highlightIds.delete(i):this._highlightIds.set(i,e)}this._updateHighlight()}_routeItemsChanged(t){if(t.removed.length){this._graphics.removeMany(t.removed.map(i=>{const e=this._networkFeatureMap.get(i);return this._networkFeatureMap.delete(i),this._networkGraphicMap.delete(e),e}));for(const i of t.removed)this.handles.remove(i)}if(t.added.length){this._graphics.addMany(t.added.map(i=>{const e=this._createGraphic(i);return _(e.symbol)?null:(this._networkFeatureMap.set(i,e),this._networkGraphicMap.set(e,i),e)}).filter(o));for(const i of t.added)this.handles.add([g(()=>i.geometry,(e,r)=>{this._updateGraphic(i,"geometry",e,r)}),g(()=>i.symbol,(e,r)=>{this._updateGraphic(i,"symbol",e,r)})],i);this._graphics.sort((i,e)=>this._getDrawOrder(i)-this._getDrawOrder(e))}}_updateGraphic(t,i,e,r){if(!this._networkFeatureMap.has(t)){const p=this._createGraphic(t);return this._networkFeatureMap.set(t,p),this._networkGraphicMap.set(p,t),void this._graphics.add(p)}const s=this._networkFeatureMap.get(t);s[i]=e,a.graphic=s,a.property=i,a.oldValue=r,a.newValue=e,this._graphicsView.graphicUpdateHandler(a)}_updateHighlight(){const t=Array.from(this._highlightIds.keys());this._graphicsView.setHighlight(t)}};n([d()],h.prototype,"_graphics",void 0),n([d()],h.prototype,"_routeItems",null),h=n([w("esri.views.2d.layers.RouteLayerView2D")],h);const bt=h;export{bt as default};
