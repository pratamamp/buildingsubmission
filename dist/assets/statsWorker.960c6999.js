import{fe as N,ap as C,a8 as S,h as R,ax as j,dL as k,aP as q,ff as A,y as B,fg as O,fh as G,fi as Y,fj as _,fk as L,fl as U,fm as Z,fn as H,fo as J,fp as K,fq as Q}from"./index.52935b46.js";let I=null;function W(n,a,l){return n.x<0?n.x+=a:n.x>l&&(n.x-=a),n}function X(n,a,l,t){const i=N(l)?C(l):null,r=i?Math.round((i.valid[1]-i.valid[0])/a.scale[0]):null;return n.map(s=>{const e=new S(R(s.geometry));return j(a,e,e,e.hasZ,e.hasM),s.geometry=i?W(e,r,t[0]):e,s})}function aa(n,a=18,l,t,i,r){const s=new Float64Array(i*r);a=Math.round(B(a));let e=Number.POSITIVE_INFINITY,o=Number.NEGATIVE_INFINITY,u=0,f=0,d=0,m=0;const c=O(t,l);for(const{geometry:v,attributes:y}of n){const{x:z,y:w}=v,E=Math.max(0,z-a),M=Math.max(0,w-a),g=Math.min(r,w+a),P=Math.min(i,z+a),$=+c(y);for(let x=M;x<g;x++)for(let T=E;T<P;T++){const F=x*i+T,b=G(T-z,x-w,a),D=s[F];u=s[F]+=b*$;const V=u-D;f+=V,d+=V*V,u<e&&(e=u),u>o&&(o=u),m++}}if(!m)return{mean:0,stddev:0,min:0,max:0,mid:0,count:0};const p=(o-e)/2;return{mean:f/m,stdDev:Math.sqrt((d-f*f/m)/m),min:e,max:o,mid:p,count:m}}async function h(n,a){if(!a)return[];const l=n.field,t=n.valueExpression,i=n.normalizationType,r=n.normalizationField,s=n.normalizationTotal,e=[],o=n.viewInfoParams;let u=null,f=null;if(t){if(!I){const{arcadeUtils:c}=await k();I=c}u=I.createFunction(t),f=o&&I.getViewInfo({viewingMode:o.viewingMode,scale:o.scale,spatialReference:new q(o.spatialReference)})}const d=n.fieldInfos,m=!(a[0]&&"declaredClass"in a[0]&&a[0].declaredClass==="esri.Graphic")&&d?{fields:d}:null;return a.forEach(c=>{const p=c.attributes;let v;if(t){const y=m?{...c,layer:m}:c,z=I.createExecContext(y,f);v=I.executeFunction(u,z)}else p&&(v=p[l]);if(i&&isFinite(v)){const y=p&&parseFloat(p[r]);v=A(v,i,y,s)}e.push(v)}),e}async function ea(n){const{attribute:a,features:l}=n,{normalizationType:t,normalizationField:i,minValue:r,maxValue:s,fieldType:e}=a,o=await h({field:a.field,valueExpression:a.valueExpression,normalizationType:t,normalizationField:i,normalizationTotal:a.normalizationTotal,viewInfoParams:a.viewInfoParams,fieldInfos:a.fieldInfos},l),u=Y({normalizationType:t,normalizationField:i,minValue:r,maxValue:s}),f={value:.5,fieldType:e},d=e==="esriFieldTypeString"?_({values:o,supportsNullCount:u,percentileParams:f}):L({values:o,minValue:r,maxValue:s,useSampleStdDev:!t,supportsNullCount:u,percentileParams:f});return U(d,e==="esriFieldTypeDate")}async function ia(n){const{attribute:a,features:l}=n,t=await h({field:a.field,valueExpression:a.valueExpression,viewInfoParams:a.viewInfoParams,fieldInfos:a.fieldInfos},l),i=Z(t);return H(i,a.domain,a.returnAllCodedValues)}async function ta(n){const{attribute:a,features:l}=n,{field:t,normalizationType:i,normalizationField:r,normalizationTotal:s,classificationMethod:e}=a,o=await h({field:t,valueExpression:a.valueExpression,normalizationType:i,normalizationField:r,normalizationTotal:s,viewInfoParams:a.viewInfoParams,fieldInfos:a.fieldInfos},l),u=J(o,{field:t,normalizationType:i,normalizationField:r,normalizationTotal:s,classificationMethod:e,standardDeviationInterval:a.standardDeviationInterval,numClasses:a.numClasses,minValue:a.minValue,maxValue:a.maxValue});return K(u,e)}async function oa(n){const{attribute:a,features:l}=n,{field:t,normalizationType:i,normalizationField:r,normalizationTotal:s,classificationMethod:e}=a,o=await h({field:t,valueExpression:a.valueExpression,normalizationType:i,normalizationField:r,normalizationTotal:s,viewInfoParams:a.viewInfoParams,fieldInfos:a.fieldInfos},l);return Q(o,{field:t,normalizationType:i,normalizationField:r,normalizationTotal:s,classificationMethod:e,standardDeviationInterval:a.standardDeviationInterval,numBins:a.numBins,minValue:a.minValue,maxValue:a.maxValue})}async function sa(n){const{attribute:a,features:l}=n,{field:t,radius:i,fieldOffset:r,transform:s,spatialReference:e,size:o}=a,u=X(l,s,e,o),{count:f,min:d,max:m,mean:c,stdDev:p}=aa(u,i,r,t,o[0],o[1]);return{count:f,min:d,max:m,avg:c,stddev:p}}export{ta as classBreaks,sa as heatmapStatistics,oa as histogram,ea as summaryStatistics,ia as uniqueValues};
