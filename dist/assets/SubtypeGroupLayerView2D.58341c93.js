import{e as a,n as p,I as n,h as y,l as m,gx as u}from"./index.f5fb6b4d.js";import d from"./FeatureLayerView2D.a28f0625.js";import"./EffectView.8649e1d9.js";import"./definitions.8fc39ccc.js";import"./LayerView2D.6e98822d.js";import"./Container.42f5d0eb.js";import"./schemaUtils.1b08168f.js";import"./Utils.cfa3e151.js";import"./number.08b65821.js";import"./enums.05a6ea95.js";import"./utils.8844d0fd.js";import"./MaterialKey.60c2c315.js";import"./alignmentUtils.63b4d661.js";import"./visualVariablesUtils.ca0a8c45.js";import"./createSymbolSchema.3658b6d7.js";import"./CIMSymbolHelper.72e36123.js";import"./BidiEngine.ec67919b.js";import"./GeometryUtils.814cb798.js";import"./cimAnalyzer.214d7b31.js";import"./ExpandedCIM.71204243.js";import"./MD5.97b39efc.js";import"./util.5d34afc0.js";import"./FeatureLayerView.3a7e2b5e.js";import"./floorFilterUtils.69500d62.js";import"./popupUtils.8bfceb75.js";import"./LayerView.7cdf36e9.js";import"./RefreshableLayerView.b2ca769b.js";function h(e,r){return!e.visible||e.minScale!==0&&r>e.minScale||e.maxScale!==0&&r<e.maxScale}let l=class extends d{initialize(){this.handles.add([n(()=>{var e;return(e=this.view)==null?void 0:e.viewpoint},()=>this._update(),y)])}_injectOverrides(e){let r=super._injectOverrides(e);const s=this.view.scale,t=this.layer.sublayers.filter(o=>h(o,s)).map(o=>o.subtypeCode);if(!t.length)return r;r=m(r)?r:new u().toJSON();const i=`NOT ${this.layer.subtypeField} IN (${t.join(",")})`;return r.where=r.where?`(${r.where}) AND (${i})`:i,r}_setLayersForFeature(e){const r=this.layer.fieldsIndex.get(this.layer.subtypeField),s=e.attributes[r.name],t=this.layer.sublayers.find(i=>i.subtypeCode===s);e.layer=t,e.sourceLayer=this.layer}_createSchemaConfig(){const e={subtypeField:this.layer.subtypeField,sublayers:Array.from(this.layer.sublayers).map(i=>({featureReduction:null,geometryType:this.layer.geometryType,labelingInfo:i.labelingInfo,labelsVisible:i.labelsVisible,renderer:i.renderer,subtypeCode:i.subtypeCode,orderBy:null}))},r=this.layer.sublayers.map(i=>i.subtypeCode).join(","),s=this.layer.sublayers.length?`${this.layer.subtypeField} IN (${r})`:"1=2";let t=this.layer.definitionExpression?this.layer.definitionExpression+" AND ":"";return t+=s,{...super._createSchemaConfig(),...e,definitionExpression:t}}};l=a([p("esri.views.2d.layers.SubtypeGroupLayerView2D")],l);const k=l;export{k as default};
