import{dh as u,y,kL as m,l as o,n9 as f,w as h,dD as g,f as _,v as S,b4 as w,r as v,aa as k,eA as O,jT as A,e as d,g as p,n as R,gH as b}from"./index.ffdd6b96.js";import{f as C}from"./normalizeUtilsSync.3ee268aa.js";import{u as $}from"./FeatureStore.a7247577.js";import{Y as F}from"./QueryEngine.1e729d3a.js";import{o as I}from"./queryEngineUtils.65026ee0.js";import"./PooledRBush.f54381ae.js";import"./optimizedFeatureQueryEngineAdapter.a147fec5.js";import"./centroid.4290afac.js";import"./QueryEngineCapabilities.c2e9875c.js";import"./timeSupport.3e9c66f6.js";import"./VertexSnappingCandidate.88a2e331.js";import"./PointSnappingHint.9c2e1314.js";let n=class extends u(y){constructor(e){super(e),this.availability=1,this.sources={multipoint:null,point:null,polygon:null,polyline:null},this.loadedWkids=new Set,this.loadedWkts=new Set,this.pendingAdds=[]}get updating(){return this.updatingHandles.updating}get layer(){return this.layerSource.layer}destroy(){const e=this.pendingAdds;this.pendingAdds.length=0;for(const t of e)t.task.abort();this._mapSources(t=>this._destroySource(t))}initialize(){this.handles.add([this.layer.on("graphic-update",e=>this._onGraphicUpdate(e)),this.updatingHandles.addOnCollectionChange(()=>this.layer.graphics,e=>this._onGraphicsChanged(e))]),this._addMany(this.layer.graphics.toArray())}async fetchCandidates(e,t){const r=await m(this._mapSources(i=>i.queryEngine.executeQueryForSnapping({point:e.coordinateHelper.vectorToPoint(e.point).toJSON(),distance:e.distance,types:e.types,query:o(e.filter)?e.filter.createQuery().toJSON():{where:"1=1"}},t).then(({candidates:a})=>a))),s=r.flat().map(i=>I(i,e.coordinateHelper,e.elevationInfo));return f(e.point,s),s}refresh(){}_onGraphicUpdate(e){switch(e.property){case"geometry":case"visible":this._remove(e.graphic),this._addMany([e.graphic])}}_onGraphicsChanged(e){for(const t of e.removed)this._remove(t);this._addMany(e.added)}_addMany(e){const t=[],r=new Map;for(const s of e)h(s.geometry)||(this._needsInitializeProjection(s.geometry.spatialReference)?(t.push(s.geometry.spatialReference),r.set(s.uid,s)):this._add(s));this._createPendingAdd(t,r)}_createPendingAdd(e,t){if(!e.length)return;const r=g(async a=>{await _(e.map(l=>({source:l,dest:this.spatialReference})),{signal:a}),this._markLoadedSpatialReferences(e);for(const[,l]of t)this._add(l)});this.updatingHandles.addPromise(r.promise);const s={task:r,graphics:t},i=()=>b(this.pendingAdds,s);r.promise.then(i,i),this.pendingAdds.push(s)}_markLoadedSpatialReferences(e){for(const t of e)t.wkid!=null&&this.loadedWkids.add(t.wkid),t.wkt!=null&&this.loadedWkts.add(t.wkt)}_add(e){if(h(e.geometry)||!e.visible)return;let t=e.geometry;if(t.type==="mesh")return;t.type==="extent"&&(t=S.fromExtent(t));const r=this._ensureSource(t.type);if(h(r))return;const s=this._createOptimizedFeature(e.uid,t);o(s)&&r.featureStore.add(s)}_needsInitializeProjection(e){return(e.wkid==null||!this.loadedWkids.has(e.wkid))&&(e.wkt==null||!this.loadedWkts.has(e.wkt))&&!w(e,this.spatialReference)}_createOptimizedFeature(e,t){const r=v(C(t),this.spatialReference);return r?new k(O(r,!1,!1),{[c]:e},null,e):null}_ensureSource(e){const t=this.sources[e];if(o(t))return t;const r=this._createSource(e);return this.sources[e]=r,r}_createSource(e){const t=A.toJSON(e),r=new $({geometryType:t,hasZ:!1,hasM:!1});return{featureStore:r,queryEngine:new F({featureStore:r,fields:[{name:c,type:"esriFieldTypeOID",alias:c}],geometryType:t,hasM:!1,hasZ:!1,objectIdField:c,spatialReference:this.spatialReference,scheduler:o(this.view)&&this.view.type==="3d"?this.view.resourceController.scheduler:null}),type:e}}_remove(e){this._mapSources(t=>this._removeFromSource(t,e));for(const t of this.pendingAdds)t.graphics.delete(e.uid),t.graphics.size===0&&t.task.abort()}_removeFromSource(e,t){const r=t.uid;e.featureStore.has(r)&&e.featureStore.removeById(t.uid)}_destroySource(e){e.queryEngine.destroy(),this.sources[e.type]=null}_mapSources(e){const{point:t,polygon:r,polyline:s,multipoint:i}=this.sources,a=[];return o(t)&&a.push(e(t)),o(r)&&a.push(e(r)),o(s)&&a.push(e(s)),o(i)&&a.push(e(i)),a}};d([p({constructOnly:!0})],n.prototype,"spatialReference",void 0),d([p({constructOnly:!0})],n.prototype,"layerSource",void 0),d([p({constructOnly:!0})],n.prototype,"view",void 0),d([p({readOnly:!0})],n.prototype,"updating",null),d([p({readOnly:!0})],n.prototype,"availability",void 0),n=d([R("esri.views.interactive.snapping.featureSources.GraphicsSnappingSource")],n);const c="OBJECTID";export{n as GraphicsSnappingSource};
